{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\actions\\\\st_frontend\\\\src\\\\pages\\\\Inventory\\\\Receipt\\\\Form.js\";\nimport { WAREHOUSE_TRACKS, WAREHOUSE_RECEIPT, WAREHOUSE_TYPES } from '../../../config/app.config'; // HOOKS\n\nimport { isExisted, detectForm } from '../../../hook/before';\nimport React, { Component } from 'react';\nimport { Row, Col, FormGroup, Label, Input, Table, Button, ButtonGroup } from 'reactstrap';\nimport ViewModal from '../../../components/ViewModal';\nimport InputSuggestProduct from '../../../components/InputSuggestProduct';\nimport SelectListModelCode from '../../../components/SelectListModelCode';\nimport SelectList from '../../../components/SelectList';\nimport ButtonImportSerial from '../../../components/ButtonImportSerial';\nimport ButtonSerialVerify from '../../../components/ButtonSerialVerify';\n\nfunction Info(props) {\n  var _React$createElement;\n\n  return React.createElement(\"div\", {\n    style: {\n      padding: 10,\n      paddingTop: 30,\n      paddingRight: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \" Lo\\u1EA1i  \", React.createElement(\"span\", {\n    className: \"text-red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"*\")), React.createElement(SelectList, {\n    id: \"track_code\",\n    defaultValue: props.track_code,\n    onChange: function onChange(e) {\n      props.onChange('track_code', e.target.value);\n    },\n    rows: WAREHOUSE_TRACKS[props.type],\n    name: \"-- Ch\\u1ECDn --\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \" Kho \"), React.createElement(SelectListModelCode, {\n    id: \"warehouse_code\",\n    defaultValue: props.warehouse_code,\n    onChange: function onChange(e) {\n      props.onChange('warehouse_code', e.target.value);\n    },\n    name: \"-- Ch\\u1ECDn --\",\n    strModel: \"warehouses\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \" Tr\\u1EA1ng th\\xE1i \"), React.createElement(SelectList, (_React$createElement = {\n    disabled: props.typeAction === 'post' ? true : false,\n    defaultValue: props.status,\n    rows: WAREHOUSE_RECEIPT\n  }, _defineProperty(_React$createElement, \"defaultValue\", props.status), _defineProperty(_React$createElement, \"onChange\", function onChange(e) {\n    props.onChange('status', e.target.value);\n  }), _defineProperty(_React$createElement, \"name\", \"-- Ch\\u1ECDn -- \"), _defineProperty(_React$createElement, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 53\n  }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement))), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \" Ghi ch\\xFA  \"), React.createElement(Input, {\n    defaultValue: props.note,\n    type: \"textarea\",\n    onChange: function onChange(e) {\n      props.onChange('note', e.target.value);\n    },\n    style: {\n      height: 100\n    },\n    id: \"note\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })));\n}\n\nfunction TableInfo(props) {\n  var grid = props.grid;\n  return React.createElement(\"div\", {\n    style: {\n      padding: '30px 10px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: \"9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(InputSuggestProduct, {\n    type: \"all\",\n    onSelected: function onSelected(json) {\n      props.onSelectedProduct(json);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })), React.createElement(Col, {\n    md: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })), React.createElement(Row, {\n    className: \"mt-20\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: \"product-board table vk-table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, grid.colums.map(function (item, index) {\n    return React.createElement(\"th\", {\n      key: index,\n      style: {\n        width: item.width\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, item.headerName, \" \");\n  }))), React.createElement(\"tbody\", {\n    style: {\n      height: 420\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, props.cart.map(function (item) {\n    var amount = parseInt(item.amount);\n\n    var BtnSerial = function BtnSerial() {\n      if (item.is_serial === 1) {\n        if (item.is_upload_serial === 0) {\n          var arr = {\n            in: React.createElement(ButtonImportSerial, {\n              icon: \"fa fa-ticket\",\n              title: \"\",\n              strModel: \"serials\",\n              columns: ['code'],\n              width: \"36%\",\n              total: amount,\n              fields: {\n                product_code: item.code,\n                warehouse_receipt_code_in: props.code,\n                type: 'in'\n              },\n              onComplete: function onComplete(isFinish) {\n                props.onCardChange({\n                  row_id: item.id,\n                  field: 'is_upload_serial',\n                  value: 1\n                });\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 125\n              },\n              __self: this\n            }),\n            out: React.createElement(ButtonSerialVerify, {\n              icon: \"fa fa-ticket\",\n              title: \"\",\n              strModel: \"serials\",\n              width: \"30%\",\n              total: amount,\n              fields: {\n                warehouse_receipt_code_out: props.code\n              },\n              onComplete: function onComplete(isFinish) {\n                props.onCardChange({\n                  row_id: item.id,\n                  field: 'is_upload_serial',\n                  value: 1\n                });\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 139\n              },\n              __self: this\n            })\n          };\n          return arr[props.type];\n        } else {\n          return React.createElement(Button, {\n            className: \"btn btn-normal\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 159\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"fa  fa-check\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 159\n            },\n            __self: this\n          }));\n        }\n      }\n\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      });\n    };\n\n    return React.createElement(\"tr\", {\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      style: {\n        width: grid['colums'][0]['width']\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \" \", item.code, \" \"), React.createElement(\"td\", {\n      style: {\n        width: grid['colums'][1]['width']\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \" \", item.name, \" \"), React.createElement(\"td\", {\n      style: {\n        width: grid['colums'][2]['width']\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \" \", item.unit, \" \"), React.createElement(\"td\", {\n      style: {\n        width: grid['colums'][3]['width']\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"number\",\n      onChange: function onChange(e) {\n        props.onCardChange({\n          row_id: item.id,\n          field: 'amount',\n          value: e.target.value\n        });\n      },\n      min: 1,\n      max: 1000000,\n      defaultValue: amount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      style: {\n        width: grid['colums'][4]['width']\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(ButtonGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: function onClick() {\n        props.onRemoveCard(item.id);\n      },\n      className: \"btn btn-normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-trash\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    })), React.createElement(BtnSerial, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }))));\n  })), React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    style: {\n      width: grid['colums'][0]['width']\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, \" \"), React.createElement(\"td\", {\n    style: {\n      width: grid['colums'][1]['width']\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, \"  \"), React.createElement(\"td\", {\n    style: {\n      width: grid['colums'][2]['width']\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, \" T\\u1ED5ng c\\u1ED9ng  \"), React.createElement(\"td\", {\n    style: {\n      width: grid['colums'][3]['width']\n    },\n    className: \"text-red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, \" \", React.createElement(\"span\", {\n    style: {\n      fontWeight: '500'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, \" \", props.total, \" \"), \" \"), React.createElement(\"td\", {\n    style: {\n      width: grid['colums'][4]['width']\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, \"  \"))))))));\n}\n\nvar ReceiptForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ReceiptForm, _Component);\n\n  function ReceiptForm(props) {\n    var _this;\n\n    _classCallCheck(this, ReceiptForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ReceiptForm).call(this, props));\n    _this.state = {};\n    _this.grid = {\n      colums: [{\n        headerName: \"Mã\",\n        width: 140\n      }, {\n        headerName: \"Sản phẩm\",\n        width: 410\n      }, {\n        headerName: \"ĐVT\",\n        width: 120\n      }, {\n        headerName: \"SL\",\n        width: 90\n      }, {\n        headerName: \"\",\n        width: 140\n      }]\n    };\n    _this._onChangeReceiInfo = _this._onChangeReceiInfo.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this._onChange = _this._onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this._onSubmit = _this._onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ReceiptForm, [{\n    key: \"_resetForm\",\n    value: function _resetForm() {\n      return {\n        code: '',\n        warehouse_code: '',\n        type: this.props.receiptType || 'in',\n        track_code: '',\n        status: 0,\n        cart: [],\n        total: 0,\n        note: '',\n        onSuccess: false\n      };\n    }\n  }, {\n    key: \"_onSubmit\",\n    value: function _onSubmit() {\n      var _this2 = this;\n\n      var fields = ['track_code', 'warehouse_code'];\n\n      if (detectForm(fields, this.state) === '') {\n        delete this.state.code;\n\n        if (this.state.cart.length > 0) {\n          /// ok submit post data ;\n          var data = this.state;\n          this.model.axios(this.props.typeAction, data, function (res) {\n            _this2._whereStateChange(res);\n          });\n        } else {\n          var el = document.querySelector(\"#form-err\");\n          el.innerHTML = '<span class=\"text-danger\"><i class=\"fa fa-exclamation-triangle\"></i>  Vui lòng chọn sản phẩm </span>';\n        }\n      }\n    }\n  }, {\n    key: \"_calculateSUM\",\n    value: function _calculateSUM(cart) {\n      var ret = {\n        total: 0,\n        total_sum: 0,\n        total_sum_vat: 0,\n        total_vat: 0,\n        promotion_discount: 0\n      };\n      cart.map(function (item) {\n        // calculate\n        var amount = parseInt(item.amount);\n        ret.total += amount; // end calculate\n      });\n      return ret;\n    }\n  }, {\n    key: \"_updateCard\",\n    value: function _updateCard(json) {\n      // row_id - field - value\n      var cart = this.state.cart;\n      cart.map(function (item) {\n        if (parseInt(json.row_id) === parseInt(item.id)) {\n          item[json.field] = json.value;\n        }\n      });\n\n      var retSUM = this._calculateSUM(cart);\n\n      this.setState(_objectSpread({\n        cart: cart\n      }, retSUM));\n    }\n  }, {\n    key: \"_removeCard\",\n    value: function _removeCard(id) {\n      var cart = this.state.cart;\n      var newCart2 = cart.filter(function (item) {\n        return item.id !== id;\n      });\n\n      var retSUM = this._calculateSUM(newCart2);\n\n      this.setState(_objectSpread({\n        cart: newCart2\n      }, retSUM));\n    }\n  }, {\n    key: \"_addCard\",\n    value: function _addCard(json) {\n      if (!isExisted(this.state.cart, json.id)) {\n        var cart = this.state.cart;\n        cart.push({\n          id: json.id,\n          code: json.code,\n          name: json.name,\n          unit: json.unit_name,\n          is_serial: json.is_serial,\n          images: json.images,\n          type: json.type,\n          amount: 1,\n          price: json.price_1\n        });\n\n        var retSUM = this._calculateSUM(cart);\n\n        this.setState(_objectSpread({\n          cart: cart\n        }, retSUM));\n      }\n    }\n  }, {\n    key: \"_onChangeReceiInfo\",\n    value: function _onChangeReceiInfo(field, value) {\n      var info = this.state.receiver_info;\n      Object.assign(info, _defineProperty({}, field, value));\n      this.setState({\n        receiver_info: info\n      });\n    }\n  }, {\n    key: \"_onChange\",\n    value: function _onChange(name, value) {\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // INIT ORDERS MODEL\n                this.model = this.props.model;\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"_whereStateChange\",\n    value: function _whereStateChange(res) {\n      if (res.name === 'success' || res.name === 'ok') {\n        this.props.onSubmitForm(res);\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      if (newProps.typeAction === 'put') {\n        var data = newProps.data;\n        var cart = JSON.parse(data.cart).map(function (item) {\n          return _objectSpread({}, item, {\n            is_upload_serial: 0\n          });\n        });\n        var code = data['code_' + data.type];\n        var state = {\n          id: data.id,\n          code: code,\n          warehouse_code: data.warehouse_code,\n          type: data.type,\n          track_code: data.track_code,\n          status: data.status,\n          cart: cart,\n          total: data.total,\n          note: data.note\n        };\n        this.setState(state);\n      } else {\n        var _state = this._resetForm();\n\n        _state.type = newProps.receiptType;\n        this.setState(_state);\n      }\n    }\n  }, {\n    key: \"_getTitle\",\n    value: function _getTitle() {\n      var arrs = {\n        in: 'Phiếu nhập',\n        out: 'Phiếu xuất'\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475\n        },\n        __self: this\n      }, \" \", arrs[this.state.type], \" \"), React.createElement(\"span\", {\n        className: \"text-uppercase\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476\n        },\n        __self: this\n      }, \" \", this.state.code, \" \"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var FORM_NAME = this._getTitle();\n\n      return React.createElement(ViewModal, Object.assign({\n        name: FORM_NAME,\n        isFooter: true,\n        onSubmit: this._onSubmit\n      }, this.props, {\n        onToggle: function onToggle(isOpen) {\n          _this3.props.onToggle(isOpen);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492\n        },\n        __self: this\n      }, React.createElement(TableInfo, Object.assign({}, this.state, {\n        grid: this.grid,\n        onCardChange: function onCardChange(json) {\n          return _this3._updateCard(json);\n        },\n        onRemoveCard: function onRemoveCard(id) {\n          _this3._removeCard(id);\n        },\n        onSelectedProduct: function onSelectedProduct(json) {\n          _this3._addCard(json);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        md: 3,\n        style: {\n          background: '#f0f0f0',\n          borderLeft: '1px solid #ddd'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501\n        },\n        __self: this\n      }, React.createElement(Info, Object.assign({\n        typeAction: this.props.typeAction\n      }, this.state, {\n        onChange: this._onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return ReceiptForm;\n}(Component);\n\nexport { ReceiptForm as default };\nReceiptForm.defaultProps = {\n  receiptType: 'in',\n  typeAction: 'post',\n  onToggle: function onToggle() {},\n  onSubmitForm: function onSubmitForm() {}\n};","map":{"version":3,"sources":["D:/actions/st_frontend/src/pages/Inventory/Receipt/Form.js"],"names":["WAREHOUSE_TRACKS","WAREHOUSE_RECEIPT","WAREHOUSE_TYPES","isExisted","detectForm","React","Component","Row","Col","FormGroup","Label","Input","Table","Button","ButtonGroup","ViewModal","InputSuggestProduct","SelectListModelCode","SelectList","ButtonImportSerial","ButtonSerialVerify","Info","props","padding","paddingTop","paddingRight","track_code","e","onChange","target","value","type","warehouse_code","typeAction","status","note","height","TableInfo","grid","json","onSelectedProduct","colums","map","item","index","width","headerName","cart","amount","parseInt","BtnSerial","is_serial","is_upload_serial","arr","in","product_code","code","warehouse_receipt_code_in","isFinish","onCardChange","row_id","id","field","out","warehouse_receipt_code_out","name","unit","onRemoveCard","fontWeight","total","ReceiptForm","state","_onChangeReceiInfo","bind","_onChange","_onSubmit","receiptType","onSuccess","fields","length","data","model","axios","res","_whereStateChange","el","document","querySelector","innerHTML","ret","total_sum","total_sum_vat","total_vat","promotion_discount","retSUM","_calculateSUM","setState","newCart2","filter","push","unit_name","images","price","price_1","info","receiver_info","Object","assign","onSubmitForm","newProps","JSON","parse","_resetForm","arrs","FORM_NAME","_getTitle","isOpen","onToggle","_updateCard","_removeCard","_addCard","background","borderLeft","defaultProps"],"mappings":"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","sourcesContent":["import { WAREHOUSE_TRACKS, WAREHOUSE_RECEIPT, WAREHOUSE_TYPES } from '../../../config/app.config';\r\n\r\n// HOOKS\r\nimport { isExisted, detectForm } from '../../../hook/before'; \r\n\r\n\r\nimport React, { Component } from 'react';\r\nimport {  Row, Col, FormGroup,Label, Input, Table, Button, ButtonGroup  } from 'reactstrap';\r\n\r\nimport ViewModal from '../../../components/ViewModal'; \r\nimport InputSuggestProduct from '../../../components/InputSuggestProduct' ; \r\n\r\nimport SelectListModelCode from '../../../components/SelectListModelCode';\r\nimport SelectList from '../../../components/SelectList'; \r\n\r\nimport ButtonImportSerial from '../../../components/ButtonImportSerial';\r\nimport ButtonSerialVerify from '../../../components/ButtonSerialVerify';\r\n\r\n\r\nfunction Info(props){  \r\n\r\n  \r\n  return( \r\n    <div style={{padding:10,paddingTop:30,paddingRight:10}}>\r\n        \r\n        \r\n        <FormGroup>\r\n          <Label> Loại  <span className=\"text-red\">*</span></Label>\r\n          <SelectList \r\n            id=\"track_code\" \r\n            \r\n            defaultValue={ props.track_code } onChange={(e)=>{ props.onChange('track_code',e.target.value)  }}\r\n             rows={ WAREHOUSE_TRACKS[props.type] } name=\"-- Chọn --\" \r\n          />\r\n\r\n        </FormGroup>\r\n\r\n        <FormGroup>  \r\n          <Label> Kho </Label>\r\n          <SelectListModelCode \r\n            \r\n            id=\"warehouse_code\" \r\n            defaultValue={ props.warehouse_code } \r\n            onChange={(e)=>{  props.onChange('warehouse_code',e.target.value) }} \r\n            name=\"-- Chọn --\" \r\n            strModel=\"warehouses\" \r\n          />\r\n\r\n        </FormGroup>\r\n        \r\n        <FormGroup>\r\n          <Label> Trạng thái </Label>\r\n          <SelectList \r\n            disabled={ props.typeAction === 'post' ? true : false }\r\n            defaultValue={props.status} rows={WAREHOUSE_RECEIPT} defaultValue={ props.status } onChange={(e)=>{ props.onChange('status',e.target.value) }} name=\"-- Chọn -- \" />\r\n\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label> Ghi chú  </Label>\r\n          <Input\r\n            \r\n            defaultValue={props.note} \r\n            type=\"textarea\" \r\n            onChange={(e)=>{props.onChange('note',e.target.value)  }}  \r\n            style={{height:100}} id=\"note\" \r\n          />\r\n        </FormGroup>\r\n\r\n\r\n    </div>\r\n\r\n  )\r\n\r\n}\r\n\r\nfunction TableInfo(props){\r\n    \r\n  const grid = props.grid ; \r\n  \r\n  return(\r\n\r\n    <div style={{padding:'30px 10px'}}>\r\n\r\n      <FormGroup>\r\n        \r\n        <Row>\r\n          <Col md=\"9\">\r\n            <InputSuggestProduct    type=\"all\" onSelected={(json)=>{ props.onSelectedProduct(json) }}    />\r\n          </Col>\r\n          <Col md=\"3\">\r\n            \r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"mt-20\">\r\n          <Col md={12}>\r\n\r\n            <Table className=\"product-board table vk-table\">\r\n              <thead>\r\n                <tr>\r\n                  { \r\n                    grid.colums.map((item,index)=>{\r\n                      return(\r\n                        <th key={index} style={{width:item.width}}>{ item.headerName } </th> \r\n                      )\r\n                    })\r\n                  }\r\n                </tr>\r\n              </thead>\r\n\r\n              <tbody style={{height:420}}>\r\n\r\n                {\r\n                  props.cart.map((item)=>{\r\n                    \r\n                    const amount = parseInt(item.amount) ; \r\n\r\n                    const BtnSerial = ()=>{\r\n\r\n                      if(item.is_serial===1){\r\n\r\n                        if(item.is_upload_serial===0){\r\n                          \r\n                          const arr = {\r\n                            in:<ButtonImportSerial  \r\n                                    icon=\"fa fa-ticket\"\r\n                                    title=\"\"\r\n                                    strModel=\"serials\"\r\n                                    columns={['code']}\r\n                                    width=\"36%\"\r\n                                    total={amount}  \r\n                                    fields={{\r\n                                      product_code:item.code,\r\n                                      warehouse_receipt_code_in:props.code,\r\n                                      type:'in'\r\n                                    }}\r\n                                    onComplete={(isFinish)=>{ props.onCardChange({row_id:item.id,field:'is_upload_serial',value:1}) }}\r\n                                />,\r\n                            out:<ButtonSerialVerify\r\n\r\n                                  icon=\"fa fa-ticket\"\r\n                                  title=\"\"\r\n                                  strModel=\"serials\"\r\n                                  width=\"30%\"\r\n                                  total={amount}  \r\n                                  fields={{\r\n                                    warehouse_receipt_code_out:props.code,\r\n                                  }}\r\n\r\n                                  onComplete={(isFinish)=>{ props.onCardChange({row_id:item.id,field:'is_upload_serial',value:1}) }}\r\n\r\n                                />\r\n                          }\r\n                          return( \r\n                            arr[props.type] \r\n                          )\r\n                        }else{  \r\n                           return(\r\n                             <Button className=\"btn btn-normal\"><i className=\"fa  fa-check\"></i></Button>\r\n                           )\r\n                        }\r\n                        \r\n                      }\r\n                      return <span></span>\r\n\r\n                      \r\n                    }\r\n                    \r\n                    return(\r\n                      <tr key={item.id}>\r\n\r\n                        <td style={{ width: grid['colums'][0]['width'] }}> { item.code } </td>\r\n                        <td style={{width:grid['colums'][1]['width']}}> {item.name} </td>\r\n                        \r\n\r\n                        <td style={{width:grid['colums'][2]['width']}}> { item.unit } </td>\r\n\r\n                        <td style={{width:grid['colums'][3]['width']}}>\r\n                          <Input type=\"number\" \r\n                            onChange={(e)=>{ props.onCardChange({row_id:item.id,field:'amount',value:e.target.value}) }} \r\n                            min={1} max={1000000} \r\n                            defaultValue={ amount } \r\n                          />\r\n                          \r\n                        </td>\r\n\r\n                        <td style={{width:grid['colums'][4]['width']}}>\r\n                          <ButtonGroup>\r\n                            <Button \r\n                              onClick={()=>{ props.onRemoveCard(item.id) }}\r\n                              className=\"btn btn-normal\"> \r\n                              <i className=\"fa fa-trash\"></i>\r\n                            </Button>\r\n                            <BtnSerial />\r\n                          </ButtonGroup>\r\n                          \r\n                        </td>\r\n                      </tr>\r\n                    )\r\n                  })\r\n                }\r\n               \r\n              </tbody>\r\n              <thead>\r\n                <tr>\r\n                    <td style={{ width: grid['colums'][0]['width'] }}> </td>\r\n                    <td style={{ width: grid['colums'][1]['width'] }}>  </td>\r\n                    <td style={{ width: grid['colums'][2]['width'] }}> Tổng cộng  </td>\r\n                    <td style={{ width: grid['colums'][3]['width'] }} className=\"text-red\"> <span style={{fontWeight:'500'}}> { props.total } </span> </td>\r\n                    <td style={{ width: grid['colums'][4]['width'] }} >  </td>\r\n\r\n                 </tr>\r\n              </thead>\r\n              \r\n            </Table>\r\n          </Col>\r\n        </Row>\r\n      </FormGroup>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default class ReceiptForm extends Component {\r\n\r\n\r\n  constructor(props){\r\n\r\n          super(props);\r\n          \r\n          this.state = {}\r\n\r\n          this.grid = {\r\n              colums:[\r\n                {headerName: \"Mã\",width:140},\r\n                {headerName: \"Sản phẩm\", width:410},\r\n                {headerName: \"ĐVT\", width:120},\r\n                {headerName: \"SL\", width:90},\r\n                {headerName: \"\", width:140}\r\n              ]\r\n          }\r\n\r\n          \r\n          this._onChangeReceiInfo = this._onChangeReceiInfo.bind(this);\r\n          \r\n          this._onChange = this._onChange.bind(this); \r\n          this._onSubmit = this._onSubmit.bind(this);\r\n\r\n\r\n  }\r\n\r\n  _resetForm(){\r\n    return {\r\n      code:'',\r\n      warehouse_code:'',\r\n      type:this.props.receiptType || 'in', \r\n      track_code:'',\r\n      status:0,\r\n      cart:[],\r\n      total:0,\r\n      note:'',\r\n      onSuccess:false\r\n    }\r\n  }\r\n\r\n  _onSubmit(){\r\n\r\n          \r\n        const fields = [\r\n          'track_code','warehouse_code'\r\n        ];\r\n        \r\n        if(detectForm(fields,this.state)===''){\r\n\r\n          delete this.state.code; \r\n\r\n          \r\n          if(this.state.cart.length>0){\r\n              /// ok submit post data ;\r\n\r\n              const data = this.state ; \r\n              this.model.axios(this.props.typeAction,data,(res)=>{ \r\n                this._whereStateChange(res);               \r\n              });\r\n\r\n            \r\n          }else{\r\n              let el = document.querySelector(\"#form-err\");\r\n              el.innerHTML = '<span class=\"text-danger\"><i class=\"fa fa-exclamation-triangle\"></i>  Vui lòng chọn sản phẩm </span>';\r\n\r\n          }\r\n        }\r\n\r\n\r\n        \r\n\r\n  }\r\n\r\n    \r\n  _calculateSUM(cart){\r\n\r\n        let ret = {\r\n            total:0,\r\n            total_sum:0,\r\n            total_sum_vat:0,\r\n            total_vat:0,\r\n            promotion_discount:0\r\n        };\r\n        \r\n        cart.map((item)=>{\r\n          // calculate\r\n          const amount = parseInt(item.amount) ; \r\n          ret.total += amount;\r\n\r\n          // end calculate\r\n        \r\n        }) ;\r\n        \r\n        return ret;\r\n\r\n  }\r\n\r\n  _updateCard(json){ // row_id - field - value\r\n\r\n        let cart = this.state.cart; \r\n        \r\n        cart.map((item)=>{\r\n          if(parseInt(json.row_id) === parseInt(item.id)){\r\n            item[json.field] = json.value; \r\n          }\r\n        });\r\n        \r\n        const retSUM = this._calculateSUM(cart);\r\n        \r\n        this.setState({\r\n          cart:cart,\r\n          ...retSUM\r\n        });\r\n        \r\n\r\n  }\r\n\r\n  _removeCard(id){\r\n\r\n        let cart = this.state.cart ; \r\n        const newCart2 = cart.filter(item=>item.id !== id) ;\r\n\r\n        const retSUM = this._calculateSUM(newCart2);\r\n\r\n        this.setState({\r\n          cart:newCart2,\r\n          ...retSUM\r\n        });\r\n        \r\n\r\n  }\r\n\r\n  _addCard(json){\r\n\r\n\r\n        if(!isExisted(this.state.cart,json.id)){\r\n\r\n          let cart = this.state.cart;\r\n            \r\n          cart.push({\r\n            id:json.id,\r\n            code:json.code,\r\n            name:json.name,\r\n            unit:json.unit_name,\r\n            is_serial:json.is_serial,\r\n            images:json.images,\r\n            type:json.type,\r\n            amount:1,\r\n            price:json.price_1\r\n          }); \r\n\r\n          const retSUM = this._calculateSUM(cart);\r\n\r\n          this.setState({\r\n            cart:cart,\r\n            ...retSUM\r\n          });\r\n\r\n                  \r\n        }\r\n        \r\n        \r\n  }\r\n\r\n  _onChangeReceiInfo(field,value){\r\n\r\n        let info = this.state.receiver_info;\r\n        Object.assign(info,{\r\n          [field]:value\r\n        });\r\n        \r\n        this.setState({\r\n            receiver_info:info\r\n        });\r\n        \r\n\r\n  }\r\n\r\n  _onChange(name,value){\r\n        this.setState({ \r\n          [name]:value\r\n        });\r\n        \r\n  } \r\n\r\n  async componentDidMount(){\r\n        // INIT ORDERS MODEL\r\n        this.model =  this.props.model;  \r\n        \r\n        \r\n  }\r\n\r\n  _whereStateChange(res){\r\n\r\n        if(res.name==='success' || res.name ==='ok'){\r\n          this.props.onSubmitForm(res);\r\n        }\r\n        \r\n  }\r\n\r\n  componentWillReceiveProps(newProps){\r\n      \r\n      if(newProps.typeAction==='put'){\r\n\r\n        const data = newProps.data; \r\n\r\n        const cart = JSON.parse(data.cart).map((item)=>{\r\n          return {\r\n            ...item,\r\n            is_upload_serial:0\r\n          }\r\n        })\r\n\r\n        const code  = data['code_'+data.type];\r\n        const state = {\r\n          id:data.id,\r\n          code:code,\r\n          warehouse_code:data.warehouse_code,\r\n          type: data.type , \r\n          track_code:data.track_code,\r\n          status:data.status,\r\n          cart:cart,\r\n          total:data.total,\r\n          note:data.note,\r\n        }\r\n        \r\n        this.setState(state);\r\n\r\n      }else{\r\n\r\n\r\n        let state = this._resetForm();\r\n        state.type = newProps.receiptType;\r\n        this.setState(state)\r\n      \r\n      }\r\n\r\n      \r\n\r\n  }\r\n\r\n  \r\n  _getTitle(){\r\n    const arrs = {\r\n      in:'Phiếu nhập',\r\n      out:'Phiếu xuất'\r\n    }\r\n\r\n    return (\r\n       <div>\r\n          <span> {  arrs[this.state.type]  } </span>\r\n          <span className=\"text-uppercase\"> { this.state.code } </span>\r\n       </div>\r\n    );\r\n  }\r\n  render() {\r\n\r\n    \r\n    \r\n    \r\n    let FORM_NAME = this._getTitle();\r\n    \r\n\r\n    return (\r\n      <ViewModal name={ FORM_NAME } \r\n          isFooter={ true } onSubmit={ this._onSubmit } {...this.props}  onToggle={(isOpen)=>{this.props.onToggle(isOpen)  }} >\r\n          <Row>\r\n              <Col md={9} >\r\n                  <TableInfo \r\n                      {...this.state} \r\n                      grid={this.grid}\r\n                      onCardChange={ (json)=>this._updateCard(json) } \r\n                      onRemoveCard={(id)=>{ this._removeCard(id) }}  \r\n                      onSelectedProduct={(json)=>{  this._addCard(json)  }} \r\n                  />\r\n              </Col>\r\n              <Col md={3} style={{background:'#f0f0f0',borderLeft:'1px solid #ddd'}}>\r\n\r\n                  <Info typeAction={this.props.typeAction} {...this.state} \r\n                      onChange={this._onChange}  \r\n                  />\r\n                  \r\n              </Col>\r\n          </Row>\r\n      </ViewModal>\r\n    );\r\n  }\r\n}\r\n\r\nReceiptForm.defaultProps = {\r\n  receiptType:'in',\r\n  typeAction:'post',\r\n  onToggle:()=>{},\r\n  onSubmitForm:()=>{}\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}