{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\actions\\\\st_frontend\\\\src\\\\pages\\\\Customer\\\\_S\\\\index.js\";\n\n/* OBJECT - PLUGIN*/\nimport Model from '../../../model/model'; // HOOK ULTI \n\nimport doGetModelInfo from '../../../hook/ultil/doGetModelInfo';\nimport moment from 'moment';\nimport React, { Component } from 'react';\nimport { FormGroup, ButtonGroup } from 'reactstrap';\nimport { connect } from 'react-redux';\n/* MODAL FORM & CTRL */\n\nimport MyForm from './Form';\nimport formCtrl from './formCtrl';\nimport ButtonExpand from '../../../components/ButtonExpand';\nimport SelectListModelCode from '../../../components/SelectListModelCode';\nimport SelectListModel from '../../../components/SelectListModel';\nimport ButtonImportXLS from '../../../components/ButtonImportXLS';\nimport ButtonExportXLS from '../../../components/ButtonExportXLS';\nimport ButtonExportXLSTemp from '../../../components/ButtonExportXLSTemp';\n/*INCLUDE OTHER COMPONENT*/\n\nimport { BenGrid } from '../../../components/BenGrid2';\nvar MODE = 'customers';\nvar MODE_NAME = 'Khách Hàng';\n\nvar OrderView =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(OrderView, _Component);\n\n  function OrderView(props) {\n    var _this;\n\n    _classCallCheck(this, OrderView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OrderView).call(this, props));\n\n    _this._onCompleteUpload = function () {\n      _this.model.load();\n    };\n\n    _this.state = {\n      typeAction: '',\n      onAction: '',\n      status: ''\n    };\n    _this.data = {};\n    _this.grid = {\n      colums: [{\n        headerName: \"Mã KH\",\n        field: \"code\",\n        cellRenderer: function cellRenderer(params) {\n          return \"<span class=\\\"badge text-uppercase\\\" style=\\\"color:\".concat(params.data.color_code, \"; font-size:14px\\\"> \").concat(params.value, \" <span>\");\n        }\n      }, {\n        headerName: \"Nhóm\",\n        field: \"type_name\",\n        width: 120,\n        cellRenderer: function cellRenderer(params) {\n          var colorCode = params.data.color_code === null || params.data.color_code === 'n/a' ? '#666' : params.data.color_code;\n          return \"<span class=\\\"badge myBadge\\\" style=\\\"color:#fff; background:\".concat(colorCode, \"\\\"> \").concat(params.value, \" <span>\");\n        }\n      }, {\n        headerName: \"Cấp bậc\",\n        field: \"level_code\",\n        width: 120,\n        cellRenderer: function cellRenderer(params) {\n          var colorCode = params.data.color_code === null || params.data.color_code === 'n/a' ? '#666' : params.data.color_code;\n          return \"<span class=\\\"badge myBadge\\\" style=\\\"color:#fff; background:\".concat(colorCode, \"\\\"> \").concat(params.value, \" <span>\");\n        }\n      }, {\n        headerName: \"Trạng thái\",\n        field: \"customer_status\",\n        width: 140,\n        cellRenderer: function cellRenderer(params) {\n          var colorCode = params.data.color_code === null || params.data.color_code === 'n/a' ? '#666' : params.data.color_code;\n          return \"<span class=\\\"badge myBadge\\\" style=\\\"color:#fff; background:\".concat(colorCode, \"\\\"> \").concat(params.value || 'n/a', \" <span>\");\n        }\n      }, {\n        headerName: \"Nguồn\",\n        field: \"customer_original\",\n        width: 160,\n        cellRenderer: function cellRenderer(params) {\n          var colorCode = params.data.color_code === null || params.data.color_code === 'n/a' ? '#666' : params.data.color_code;\n          return \"<span class=\\\"badge myBadge\\\" style=\\\"color:#fff; background:\".concat(colorCode, \"\\\"> \").concat(params.value || 'n/a', \" <span>\");\n        }\n      }, {\n        headerName: \"Khách Hàng\",\n        field: \"name\",\n        width: 400\n      }, {\n        headerName: \"Địa chỉ \",\n        field: \"address\",\n        width: 400\n      }, {\n        headerName: \"MST\",\n        field: \"tax_no\"\n      }, {\n        headerName: \"Số ĐT\",\n        field: \"phone\"\n      }, {\n        headerName: \"Người Liên Hệ\",\n        field: \"contact_name\"\n      }, {\n        headerName: \"Quản lý bởi\",\n        field: \"belong_user\",\n        cellRenderer: function cellRenderer(params) {\n          var colorCode = params.data.color_code === null || params.data.color_code === 'n/a' ? '#666' : params.data.color_code;\n          return \"<span class=\\\"badge myBadge\\\" style=\\\"color:#fff; background:\".concat(colorCode, \"\\\"> <i class=\\\"fa fa-user mr-5\\\"></i> \").concat(params.value, \" <span>\");\n        }\n      }, {\n        headerName: \"Người tạo\",\n        field: \"creator\",\n        cellRenderer: function cellRenderer(params) {\n          return params.value || 'system';\n        }\n      }, {\n        headerName: \"Ngày tạo\",\n        field: \"date_created\",\n        width: 140,\n        cellRenderer: function cellRenderer(params) {\n          var humanDate = moment(params.value).format('YYYY-MM-DD');\n          return \"\\n                \".concat(humanDate, \"\\n              \");\n        }\n      }, {\n        headerName: \"Điều chỉnh\",\n        field: \"date_modified\",\n        width: 140,\n        cellRenderer: function cellRenderer(params) {\n          var humanDate = params.value !== null ? moment(params.value).format('YYYY-MM-DD') : '';\n          return \"\\n                \".concat(humanDate, \"\\n              \");\n        }\n      }],\n      rowData: []\n    };\n\n    _this._setup();\n\n    _this.onBtnNew = _this.onBtnNew.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(OrderView, [{\n    key: \"_setup\",\n    value: function _setup() {\n      this.model = new Model(MODE, this.props.dispatch);\n      this.model.set('method', {\n        name: 'listAll',\n        params: 'all'\n      });\n      this.formCtrl = new formCtrl(this.model, this.props.dispatch);\n    }\n  }, {\n    key: \"_doFilter\",\n    value: function _doFilter(name, value) {\n      if (value !== '') {\n        this.model.set('paginate', _defineProperty({}, name, value));\n      } else {\n        this.model.remove(name);\n      }\n\n      this.model.load();\n    }\n    /* HOW */\n\n  }, {\n    key: \"resetGrid\",\n    value: function resetGrid() {\n      this.grid.rowData = this.data[MODE];\n\n      this._whereStateChange({\n        onAction: 'resetGrid'\n      });\n    }\n  }, {\n    key: \"_doOpenModalPost\",\n    value: function _doOpenModalPost() {\n      //this.modal.open('post');\n      this._whereStateChange({\n        typeAction: 'post',\n        onAction: 'open_modal'\n      });\n    }\n  }, {\n    key: \"_doOpenModalUpdate\",\n    value: function () {\n      var _doOpenModalUpdate2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(data) {\n        var info;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return doGetModelInfo('customers', data.id);\n\n              case 2:\n                info = _context.sent;\n                Object.assign(data, info.data);\n                this.formCtrl.open('put', data);\n\n                this._whereStateChange({\n                  typeAction: 'put',\n                  onAction: 'open_modal'\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function _doOpenModalUpdate(_x) {\n        return _doOpenModalUpdate2.apply(this, arguments);\n      }\n\n      return _doOpenModalUpdate;\n    }()\n  }, {\n    key: \"_doOpenForm\",\n    value: function _doOpenForm() {\n      this.formCtrl.open('post');\n\n      this._whereStateChange({\n        typeAction: 'post',\n        onAction: 'open_modal'\n      });\n    }\n    /* WHEN*/\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.model.initData();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      // RESET GRID DATA\n      this.data[MODE] = newProps[MODE]['list'] || []; // UPDATE STATE FORM DATA\n\n      Object.assign(this.state, newProps[MODE]['state']);\n      this.resetGrid();\n    }\n  }, {\n    key: \"onBtnNew\",\n    value: function onBtnNew() {\n      this._doOpenForm();\n    }\n    /* WHERE*/\n\n  }, {\n    key: \"_whereStateChange\",\n    value: function _whereStateChange(newState) {\n      this.setState(Object.assign(this.state, newState));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"blank-app \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(MyForm, {\n        width: \"72%\",\n        name: MODE_NAME,\n        modal: this.formCtrl,\n        status: this.state.status,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }), React.createElement(BenGrid, {\n        onBtnEdit: function onBtnEdit(data) {\n          _this2._doOpenModalUpdate(data);\n        },\n        onBtnAdd: this.onBtnNew,\n        gridID: \"id\",\n        rowSelection: \"single\",\n        isRightTool: true,\n        height: \"78vh\",\n        formStatus: this.state.status,\n        nextColums: this.grid.colums,\n        rowData: this.grid.rowData,\n        model: this.model,\n        customButton: React.createElement(ButtonGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283\n          },\n          __self: this\n        }, React.createElement(ButtonExportXLSTemp, {\n          strModel: MODE,\n          columns: ['code', 'type', 'name', 'address', 'subregion_code', 'region_code', 'tax_no', 'contact_name', 'phone', 'email', 'belong_user'],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284\n          },\n          __self: this\n        }), React.createElement(ButtonImportXLS, {\n          title: \"Import File Excel \",\n          strModel: MODE,\n          columns: ['code', 'type', 'name', 'address', 'subregion_code', 'region_code', 'tax_no', 'contact_name', 'phone', 'email', 'belong_user'],\n          onComplete: this._onCompleteUpload,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290\n          },\n          __self: this\n        }), React.createElement(ButtonExportXLS, {\n          title: \"Export File Excel\",\n          strModel: MODE,\n          columns: ['code', 'type', 'name', 'address', 'subregion_code', 'region_code', 'tax_no', 'contact_name', 'phone', 'email', 'belong_user'],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 298\n          },\n          __self: this\n        }), React.createElement(ButtonExpand, {\n          style: {\n            borderRight: 0\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 304\n          },\n          __self: this\n        }, React.createElement(FormGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306\n          },\n          __self: this\n        }, \" Nh\\xF3m \"), React.createElement(SelectListModelCode, {\n          onChange: function onChange(e) {\n            _this2._doFilter('type', e.target.value);\n          },\n          name: \"T\\u1EA5t c\\u1EA3\",\n          strModel: \"customer_types\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 307\n          },\n          __self: this\n        })), React.createElement(FormGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310\n          },\n          __self: this\n        }, \" C\\u1EA5p B\\u1EADc \"), React.createElement(SelectListModel, {\n          onChange: function onChange(e) {\n            _this2._doFilter('level_id', e.target.value);\n          },\n          name: \"T\\u1EA5t c\\u1EA3\",\n          strModel: \"levels\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311\n          },\n          __self: this\n        })), React.createElement(FormGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 314\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 315\n          },\n          __self: this\n        }, \" Tr\\u1EA1ng Th\\xE1i \"), React.createElement(SelectListModelCode, {\n          onChange: function onChange(e) {\n            _this2._doFilter('status_code', e.target.value);\n          },\n          name: \"T\\u1EA5t c\\u1EA3\",\n          strModel: \"customer_status\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316\n          },\n          __self: this\n        })), React.createElement(FormGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321\n          },\n          __self: this\n        }, \" Ngu\\u1ED3n \"), React.createElement(SelectListModelCode, {\n          onChange: function onChange(e) {\n            _this2._doFilter('original_code', e.target.value);\n          },\n          name: \"T\\u1EA5t c\\u1EA3\",\n          strModel: \"customer_originals\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322\n          },\n          __self: this\n        })))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return OrderView;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return _defineProperty({}, MODE, state[MODE]);\n}\n\nexport default connect(mapStateToProps)(OrderView);","map":{"version":3,"sources":["D:/actions/st_frontend/src/pages/Customer/_S/index.js"],"names":["Model","doGetModelInfo","moment","React","Component","FormGroup","ButtonGroup","connect","MyForm","formCtrl","ButtonExpand","SelectListModelCode","SelectListModel","ButtonImportXLS","ButtonExportXLS","ButtonExportXLSTemp","BenGrid","MODE","MODE_NAME","OrderView","props","_onCompleteUpload","model","load","state","typeAction","onAction","status","data","grid","colums","headerName","field","cellRenderer","params","color_code","value","width","colorCode","humanDate","format","rowData","_setup","onBtnNew","bind","dispatch","set","name","remove","_whereStateChange","id","info","Object","assign","open","initData","newProps","resetGrid","_doOpenForm","newState","setState","_doOpenModalUpdate","borderRight","e","_doFilter","target","mapStateToProps"],"mappings":"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","sourcesContent":["\r\n/* OBJECT - PLUGIN*/\r\nimport Model from '../../../model/model';\r\n\r\n// HOOK ULTI \r\nimport doGetModelInfo from '../../../hook/ultil/doGetModelInfo' ; \r\nimport moment from 'moment';\r\n\r\nimport React, { Component } from 'react';\r\nimport {   FormGroup, ButtonGroup } from 'reactstrap'; \r\nimport { connect } from 'react-redux';\r\n\r\n/* MODAL FORM & CTRL */\r\nimport MyForm from './Form';\r\nimport formCtrl from './formCtrl';\r\n\r\n\r\nimport ButtonExpand from '../../../components/ButtonExpand'; \r\nimport SelectListModelCode from '../../../components/SelectListModelCode';\r\nimport SelectListModel from '../../../components/SelectListModel';\r\n\r\nimport ButtonImportXLS from '../../../components/ButtonImportXLS' ; \r\nimport ButtonExportXLS from '../../../components/ButtonExportXLS';\r\nimport ButtonExportXLSTemp from '../../../components/ButtonExportXLSTemp';\r\n\r\n\r\n\r\n\r\n\r\n/*INCLUDE OTHER COMPONENT*/\r\nimport { BenGrid } from '../../../components/BenGrid2';\r\n\r\nconst MODE = 'customers';\r\nconst MODE_NAME = 'Khách Hàng';\r\n\r\n\r\nclass OrderView extends Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n      typeAction:'',\r\n      onAction:'',\r\n      status:'',\r\n\r\n    }\r\n\r\n    this.data = {}\r\n\r\n    this.grid = {\r\n      colums:[\r\n        {headerName: \"Mã KH\", field: \"code\",\r\n          cellRenderer(params){\r\n\r\n            return `<span class=\"badge text-uppercase\" style=\"color:${params.data.color_code}; font-size:14px\"> ${ params.value } <span>` ; \r\n          }\r\n        },\r\n        {headerName: \"Nhóm\", field: \"type_name\",width:120,\r\n          cellRenderer(params){\r\n\r\n            const colorCode = params.data.color_code === null || params.data.color_code ==='n/a' ? '#666' : params.data.color_code;\r\n            return `<span class=\"badge myBadge\" style=\"color:#fff; background:${colorCode}\"> ${ params.value } <span>` ; \r\n          }\r\n        },\r\n\r\n        {headerName: \"Cấp bậc\", field: \"level_code\",width:120,\r\n          cellRenderer(params){\r\n            const colorCode = params.data.color_code === null || params.data.color_code ==='n/a' ? '#666' : params.data.color_code;\r\n            return `<span class=\"badge myBadge\" style=\"color:#fff; background:${colorCode}\"> ${ params.value } <span>` ; \r\n          }\r\n        },\r\n\r\n        {headerName: \"Trạng thái\", field: \"customer_status\",width:140,\r\n          cellRenderer(params){\r\n\r\n            const colorCode = params.data.color_code === null || params.data.color_code ==='n/a' ? '#666' : params.data.color_code;\r\n            return `<span class=\"badge myBadge\" style=\"color:#fff; background:${colorCode}\"> ${ params.value || 'n/a' } <span>` ; \r\n          }\r\n        },\r\n\r\n        {headerName: \"Nguồn\", field: \"customer_original\",width:160,\r\n          cellRenderer(params){\r\n            const colorCode = params.data.color_code === null || params.data.color_code ==='n/a' ? '#666' : params.data.color_code;\r\n            return `<span class=\"badge myBadge\" style=\"color:#fff; background:${colorCode}\"> ${ params.value || 'n/a' } <span>` ; \r\n          }\r\n        },\r\n        \r\n\r\n        {headerName: \"Khách Hàng\", field: \"name\",width:400},\r\n        \r\n        {headerName: \"Địa chỉ \", field: \"address\",width:400},\r\n        {headerName: \"MST\", field: \"tax_no\"},\r\n        {headerName: \"Số ĐT\", field: \"phone\"},\r\n        {headerName: \"Người Liên Hệ\", field: \"contact_name\"},\r\n        {headerName: \"Quản lý bởi\", field: \"belong_user\",\r\n          cellRenderer(params){\r\n            const colorCode = params.data.color_code === null || params.data.color_code ==='n/a' ? '#666' : params.data.color_code;\r\n            return `<span class=\"badge myBadge\" style=\"color:#fff; background:${colorCode}\"> <i class=\"fa fa-user mr-5\"></i> ${ params.value } <span>` ; \r\n          }\r\n        },\r\n        {headerName: \"Người tạo\", field: \"creator\",\r\n          cellRenderer(params){\r\n             return params.value || 'system' \r\n          }\r\n        },\r\n        {headerName: \"Ngày tạo\", field: \"date_created\",width:140,\r\n          \r\n          cellRenderer(params){\r\n\r\n              const humanDate = moment(params.value).format('YYYY-MM-DD')\r\n              return `\r\n                ${ humanDate }\r\n              `;\r\n          }\r\n        },\r\n        {headerName: \"Điều chỉnh\", field: \"date_modified\",width:140,\r\n          \r\n          cellRenderer(params){\r\n\r\n              const humanDate = params.value !== null ? moment(params.value).format('YYYY-MM-DD') : ''\r\n              return `\r\n                ${ humanDate }\r\n              `;\r\n          }\r\n        }\r\n        \r\n      ],\r\n      rowData: []\r\n    }\r\n\r\n    this._setup();\r\n\r\n    this.onBtnNew = this.onBtnNew.bind(this);\r\n\r\n\r\n\r\n  }\r\n\r\n  _setup(){\r\n\r\n    this.model = new Model(MODE,this.props.dispatch);\r\n    this.model.set('method',{\r\n      name:'listAll',\r\n      params:'all'\r\n    });\r\n\r\n    this.formCtrl = new formCtrl(this.model,this.props.dispatch);\r\n    \r\n  }\r\n\r\n  _doFilter(name,value){\r\n    \r\n    if(value!==''){\r\n      this.model.set('paginate',{\r\n        [name]:value\r\n      });\r\n    }else{\r\n      this.model.remove(name) ; \r\n    }\r\n\r\n    this.model.load(); \r\n      \r\n  }\r\n\r\n  /* HOW */\r\n  resetGrid(){\r\n    \r\n    this.grid.rowData = this.data[MODE];\r\n\r\n    this._whereStateChange({\r\n      onAction:'resetGrid'\r\n    });\r\n\r\n  }\r\n\r\n  _doOpenModalPost(){\r\n\r\n    //this.modal.open('post');\r\n    this._whereStateChange({\r\n      typeAction:'post',\r\n      onAction:'open_modal'\r\n    })\r\n\r\n  }\r\n\r\n  async _doOpenModalUpdate(data){\r\n    \r\n    const info = await doGetModelInfo('customers',data.id);\r\n    Object.assign(data,info.data) ; \r\n    this.formCtrl.open('put',data);\r\n\r\n    this._whereStateChange({\r\n      typeAction:'put',\r\n      onAction:'open_modal'\r\n    }); \r\n\r\n\r\n  }\r\n\r\n  _doOpenForm(){\r\n\r\n    this.formCtrl.open('post');\r\n\r\n    this._whereStateChange({\r\n      typeAction:'post',\r\n      onAction:'open_modal'\r\n    })\r\n  }\r\n\r\n  /* WHEN*/\r\n\r\n  componentDidMount(){\r\n    this.model.initData() ; \r\n  }\r\n\r\n  _onCompleteUpload = ()=>{\r\n    this.model.load();\r\n    \r\n  }\r\n  componentWillReceiveProps(newProps){\r\n    \r\n    // RESET GRID DATA\r\n    this.data[MODE] = newProps[MODE]['list'] || [] ;\r\n    // UPDATE STATE FORM DATA\r\n    Object.assign(this.state,newProps[MODE]['state']) ;\r\n    \r\n\r\n    this.resetGrid();\r\n\r\n\r\n  }\r\n\r\n  onBtnNew(){\r\n    this._doOpenForm();\r\n  }\r\n  \r\n  /* WHERE*/\r\n  _whereStateChange(newState){\r\n    this.setState(Object.assign(this.state,newState));\r\n  }  \r\n\r\n\r\n  render(){\r\n\r\n    \r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <div className=\"blank-app \">\r\n              \r\n              <MyForm\r\n\r\n                width='72%'\r\n                name={ MODE_NAME }\r\n                \r\n                modal={this.formCtrl}\r\n\r\n                status={this.state.status}\r\n                \r\n\r\n              />\r\n\r\n              <BenGrid\r\n\r\n                 onBtnEdit={(data)=>{ this._doOpenModalUpdate(data)  }}\r\n                 onBtnAdd={this.onBtnNew}\r\n                 gridID='id'\r\n                 rowSelection='single'\r\n\r\n                 isRightTool={ true }\r\n                 height=\"78vh\"\r\n\r\n                 formStatus={ this.state.status }\r\n\r\n                 nextColums={ this.grid.colums }\r\n                 rowData={this.grid.rowData}\r\n                 model={ this.model }  \r\n\r\n                 customButton={\r\n\r\n\r\n                    <ButtonGroup>\r\n                        <ButtonExportXLSTemp\r\n                          strModel={MODE}\r\n                          columns={['code','type','name','address','subregion_code','region_code','tax_no','contact_name','phone','email','belong_user']}\r\n\r\n                        />\r\n\r\n                        <ButtonImportXLS \r\n                          title=\"Import File Excel \"\r\n                          strModel={MODE}\r\n                          columns={['code','type','name','address','subregion_code','region_code','tax_no','contact_name','phone','email','belong_user']}\r\n                          \r\n                          onComplete={ this._onCompleteUpload }\r\n                        />\r\n\r\n                        <ButtonExportXLS  \r\n                          title=\"Export File Excel\"\r\n                          strModel={MODE}\r\n                          columns={['code','type','name','address','subregion_code','region_code','tax_no','contact_name','phone','email','belong_user']}\r\n                        />\r\n\r\n                        <ButtonExpand style={{borderRight:0}}> \r\n                            <FormGroup>\r\n                                  <label> Nhóm </label>\r\n                                  <SelectListModelCode onChange={(e)=>{ this._doFilter('type',e.target.value) }} name=\"Tất cả\" strModel='customer_types' />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                  <label> Cấp Bậc </label>\r\n                                  <SelectListModel onChange={(e)=>{ this._doFilter('level_id',e.target.value) }} name=\"Tất cả\" strModel='levels' />\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                  <label> Trạng Thái </label>\r\n                                  <SelectListModelCode onChange={(e)=>{ this._doFilter('status_code',e.target.value) }} name=\"Tất cả\" strModel='customer_status' />\r\n\r\n                            </FormGroup>\r\n                              \r\n                            <FormGroup>\r\n                                  <label> Nguồn </label>\r\n                                  <SelectListModelCode onChange={(e)=>{ this._doFilter('original_code',e.target.value) }} name=\"Tất cả\" strModel='customer_originals' />\r\n                            </FormGroup>\r\n                        </ButtonExpand>     \r\n                        \r\n                    </ButtonGroup>\r\n                    \r\n\r\n                    \r\n                 }\r\n                 \r\n              />\r\n              \r\n            \r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state){\r\n  return {\r\n     [MODE]:state[MODE]\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(OrderView);\r\n"]},"metadata":{},"sourceType":"module"}