{"ast":null,"code":"import _classCallCheck from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\actions\\\\st_frontend\\\\src\\\\pages\\\\Cashflow\\\\View\\\\PrintForm.js\";\nimport doPrint from '../../../hook/ultil/doPrint';\nimport { N2T } from '../../../hook/ultil/N2T';\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport numeral from 'numeral';\nimport ViewModal from '../../../components/ViewModal';\n\nvar PrintForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PrintForm, _Component);\n\n  function PrintForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PrintForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PrintForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      companyInfo: {}\n    };\n\n    _this.print = function (HTML) {\n      var pri = document.querySelector('#ifmcontentstoprint').contentWindow;\n      pri.document.open();\n      pri.document.write(HTML);\n      pri.document.close();\n      pri.focus();\n      pri.print();\n    };\n\n    return _this;\n  }\n\n  _createClass(PrintForm, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProp) {\n      if (JSON.stringify(newProp.companyInfo) != '{}') {\n        this.setState(newProp.companyInfo);\n      }\n    }\n  }, {\n    key: \"_renderBodyOrder\",\n    value: function _renderBodyOrder(cart) {\n      var html = \"\";\n      cart.map(function (item, index) {\n        var total = parseFloat(item.price) * parseInt(item.amount);\n        var stt = index + 1;\n        html += \"\\n                <tr class=\\\"record-item\\\">\\n                    <td class=\\\"text-center item\\\" style=\\\"vertical-align:middle\\\">\\n                        \".concat(stt, \"\\n                    </td>\\n                    \\n                    <td class=\\\"text-center item\\\" style=\\\"vertical-align:middle\\\" >\\n                        \").concat(item.code, \"\\n                    </td>\\n                    <td class=\\\"item-pro-desc item\\\" style=\\\"word-wrap:break-word;\\\">\\n                       \").concat(item.name, \"\\n                    </td>\\n\\n                    <td class=\\\"text-center item\\\" style=\\\"vertical-align:middle\\\">\\n                        \").concat(item.unit || '', \"\\n                    </td>\\n\\n                    \\n                    <td class=\\\"text-center item\\\" style=\\\"vertical-align:middle\\\">\\n                        \").concat(item.amount, \"\\n                    </td>\\n                    <td class=\\\"text-center item\\\"  style=\\\"vertical-align:middle\\\">\\n                        \").concat(numeral(item.price).format('0,0'), \"\\n                    </td>\\n\\n                    <td class=\\\"text-center item\\\" style=\\\"vertical-align:middle\\\">\\n                        \").concat(numeral(total).format('0,0'), \"\\n                    </td>\\n                </tr>\\n            \");\n      });\n      return html;\n    }\n  }, {\n    key: \"_renderBodyQuotation\",\n    value: function _renderBodyQuotation(cart) {\n      var html = \"\";\n      cart.map(function (item, index) {\n        var total = parseFloat(item.price) * parseInt(item.amount);\n        var stt = index + 1;\n        html += \"\\n                <tr class=\\\"record-item\\\">\\n                    <td class=\\\"text-center item\\\" style=\\\"vertical-align:middle\\\">\\n                        \".concat(stt, \"\\n                    </td>\\n                    \\n                    <td class=\\\"text-center item\\\" style=\\\"vertical-align:middle\\\" >\\n                        \").concat(item.name, \"\\n                    </td>\\n                    <td class=\\\"item-pro-desc item\\\" style=\\\"word-wrap:break-word;\\\">\\n                       \").concat(item.content || '', \"\\n                    </td>\\n\\n                    <td class=\\\"text-center item\\\" style=\\\"vertical-align:middle\\\">\\n                        \").concat(item.unit || '', \"\\n                    </td>\\n\\n                    <td class=\\\"text-center item\\\" style=\\\"vertical-align:middle\\\">\\n                        \").concat(item.images === null ? '' : React.createElement(\"img\", {\n          style: {\n            maxHeight: 72\n          },\n          className: \"img-responsive\",\n          src: item.images,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }), \"\\n                    </td>\\n                    <td class=\\\"text-center item\\\" style=\\\"vertical-align:middle\\\">\\n                        \").concat(item.amount, \"\\n                    </td>\\n                    <td class=\\\"text-center item\\\"  style=\\\"vertical-align:middle\\\">\\n                        \").concat(numeral(item.price).format('0,0'), \"\\n                    </td>\\n\\n                    <td class=\\\"text-center item\\\" style=\\\"vertical-align:middle\\\">\\n                        \").concat(numeral(total).format('0,0'), \"\\n                    </td>\\n                </tr>\\n            \");\n      });\n      return html;\n    }\n  }, {\n    key: \"_formatHTML\",\n    value: function _formatHTML(data, companyInfo) {\n      var HTML = \"\";\n\n      if (JSON.stringify(companyInfo) != '{}') {\n        if (JSON.stringify(data) !== '{}') {\n          var types = {\n            pt: 'phieuthu_temp',\n            pc: 'phieuchi_temp'\n          };\n          HTML = companyInfo[types[data.type]];\n          HTML = HTML.replace(/{{COMPANY_LOGO}}/g, companyInfo['logo']);\n          HTML = HTML.replace(/{{COMPANY_NAME}}/g, companyInfo['name']);\n          HTML = HTML.replace(/{{COMPANY_ADDRESS}}/g, companyInfo['address']);\n          HTML = HTML.replace(/{{COMPANY_TAXNO}}/g, companyInfo['tax_no']);\n          HTML = HTML.replace(/{{COMPANY_PHONE}}/g, companyInfo['phone']);\n          HTML = HTML.replace(/{{COMPANY_WEBSITE}}/g, companyInfo['website']);\n          HTML = HTML.replace(/{{COMPANY_EMAIL}}/g, companyInfo['email']); // BILL INFO \n\n          HTML = HTML.replace(/{{CASHFLOW_DATECREATED}}/g, moment(data.date_created).format('YYYY-MM-DD'));\n          var paymentTypes = {\n            tm: 'Tiền mặt',\n            ck: 'Chuyển khoảng'\n          };\n          HTML = HTML.replace(/{{PAYMENT_TYPE}}/g, paymentTypes[data.bill_acc_type]);\n          HTML = HTML.replace(/{{CASHFLOW_ATTACK}}/g, data.ref_code);\n          HTML = HTML.replace(/{{CASHFLOW_CODE}}/g, data.code); // BILL BODY\n\n          HTML = HTML.replace(/{{CASHFLOW_PARTNER}}/g, data.person_name);\n          HTML = HTML.replace(/{{CASHFLOW_PARTNER_ADDRESS}}/g, data.person_address);\n          HTML = HTML.replace(/{{CASHFLOW_REASON}}/g, data.reason);\n          HTML = HTML.replace(/{{CASHFLOW_VALUE}}/g, numeral(data.total).format('0,0') + ' đ');\n          HTML = HTML.replace(/{{CASHFLOW_NOTE}}/g, data.note);\n        }\n      }\n\n      return HTML;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var data = this.props.data;\n\n      var HTML = this._formatHTML(data, this.props.companyInfo);\n\n      return React.createElement(ViewModal, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          padding: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"btn-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        style: {\n          cursor: 'pointer'\n        },\n        onClick: function onClick() {\n          doPrint(HTML);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \" \", React.createElement(\"i\", {\n        className: \"fa fa-print\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }), \" Print \"))), React.createElement(\"div\", {\n        ref: function ref(el) {\n          return _this2.componentRef = el;\n        },\n        style: {\n          paddingBottom: 20\n        },\n        dangerouslySetInnerHTML: {\n          __html: HTML\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return PrintForm;\n}(Component);\n\nPrintForm.defaultProps = {\n  onToggle: function onToggle() {},\n  data: {}\n};\nexport default PrintForm;","map":{"version":3,"sources":["D:/actions/st_frontend/src/pages/Cashflow/View/PrintForm.js"],"names":["doPrint","N2T","React","Component","moment","numeral","ViewModal","PrintForm","state","companyInfo","print","HTML","pri","document","querySelector","contentWindow","open","write","close","focus","newProp","JSON","stringify","setState","cart","html","map","item","index","total","parseFloat","price","parseInt","amount","stt","code","name","unit","format","content","images","maxHeight","data","types","pt","pc","type","replace","date_created","paymentTypes","tm","ck","bill_acc_type","ref_code","person_name","person_address","reason","note","props","_formatHTML","padding","cursor","el","componentRef","paddingBottom","__html","defaultProps","onToggle"],"mappings":"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","sourcesContent":["\r\nimport doPrint from '../../../hook/ultil/doPrint';\r\n\r\nimport {N2T} from '../../../hook/ultil/N2T'; \r\nimport React, { Component } from 'react';\r\nimport moment from 'moment';\r\nimport numeral from 'numeral';\r\n\r\n\r\nimport ViewModal from '../../../components/ViewModal';\r\n\r\n\r\nclass PrintForm extends Component {  \r\n\r\n    \r\n    state = {\r\n        companyInfo:{}\r\n    }\r\n\r\n    componentWillReceiveProps(newProp){\r\n\r\n        if(JSON.stringify(newProp.companyInfo)!='{}'){\r\n\r\n            this.setState(newProp.companyInfo);\r\n\r\n        }\r\n    }\r\n\r\n    _renderBodyOrder(cart){\r\n        let html = ``;\r\n        cart.map((item,index)=>{\r\n            const total = parseFloat(item.price) * parseInt(item.amount);\r\n            const stt = index + 1; \r\n\r\n            html += `\r\n                <tr class=\"record-item\">\r\n                    <td class=\"text-center item\" style=\"vertical-align:middle\">\r\n                        ${stt}\r\n                    </td>\r\n                    \r\n                    <td class=\"text-center item\" style=\"vertical-align:middle\" >\r\n                        ${ item.code }\r\n                    </td>\r\n                    <td class=\"item-pro-desc item\" style=\"word-wrap:break-word;\">\r\n                       ${item.name  }\r\n                    </td>\r\n\r\n                    <td class=\"text-center item\" style=\"vertical-align:middle\">\r\n                        ${ item.unit || '' }\r\n                    </td>\r\n\r\n                    \r\n                    <td class=\"text-center item\" style=\"vertical-align:middle\">\r\n                        ${ item.amount }\r\n                    </td>\r\n                    <td class=\"text-center item\"  style=\"vertical-align:middle\">\r\n                        ${ numeral(item.price).format('0,0')  }\r\n                    </td>\r\n\r\n                    <td class=\"text-center item\" style=\"vertical-align:middle\">\r\n                        ${ numeral(total).format('0,0') }\r\n                    </td>\r\n                </tr>\r\n            `\r\n        });\r\n\r\n        return html;\r\n    }\r\n\r\n    _renderBodyQuotation(cart){\r\n        \r\n        let html = ``;\r\n        cart.map((item,index)=>{\r\n            const total = parseFloat(item.price) * parseInt(item.amount);\r\n            const stt = index + 1; \r\n\r\n            html += `\r\n                <tr class=\"record-item\">\r\n                    <td class=\"text-center item\" style=\"vertical-align:middle\">\r\n                        ${stt}\r\n                    </td>\r\n                    \r\n                    <td class=\"text-center item\" style=\"vertical-align:middle\" >\r\n                        ${ item.name }\r\n                    </td>\r\n                    <td class=\"item-pro-desc item\" style=\"word-wrap:break-word;\">\r\n                       ${item.content || ''  }\r\n                    </td>\r\n\r\n                    <td class=\"text-center item\" style=\"vertical-align:middle\">\r\n                        ${ item.unit || '' }\r\n                    </td>\r\n\r\n                    <td class=\"text-center item\" style=\"vertical-align:middle\">\r\n                        ${ item.images === null ? '' : <img style={{maxHeight:72}} className=\"img-responsive\" src={ item.images } />  }\r\n                    </td>\r\n                    <td class=\"text-center item\" style=\"vertical-align:middle\">\r\n                        ${ item.amount }\r\n                    </td>\r\n                    <td class=\"text-center item\"  style=\"vertical-align:middle\">\r\n                        ${ numeral(item.price).format('0,0')  }\r\n                    </td>\r\n\r\n                    <td class=\"text-center item\" style=\"vertical-align:middle\">\r\n                        ${ numeral(total).format('0,0') }\r\n                    </td>\r\n                </tr>\r\n            `\r\n        });\r\n\r\n        return html;\r\n    }\r\n    \r\n\r\n    _formatHTML(data,companyInfo){\r\n        let HTML = ``;\r\n\r\n        if(JSON.stringify(companyInfo)!='{}'){\r\n\r\n            if(JSON.stringify(data)!=='{}'){\r\n                \r\n                const types = { pt:'phieuthu_temp', pc:'phieuchi_temp' } \r\n                HTML = companyInfo[types[data.type]];\r\n                \r\n                HTML = HTML.replace(/{{COMPANY_LOGO}}/g,companyInfo['logo']);\r\n                HTML = HTML.replace(/{{COMPANY_NAME}}/g,companyInfo['name']);\r\n                HTML = HTML.replace(/{{COMPANY_ADDRESS}}/g,companyInfo['address']);\r\n                HTML = HTML.replace(/{{COMPANY_TAXNO}}/g,companyInfo['tax_no']);\r\n                HTML = HTML.replace(/{{COMPANY_PHONE}}/g,companyInfo['phone']);\r\n                HTML = HTML.replace(/{{COMPANY_WEBSITE}}/g,companyInfo['website']);\r\n                HTML = HTML.replace(/{{COMPANY_EMAIL}}/g,companyInfo['email']);\r\n\r\n                // BILL INFO \r\n                HTML = HTML.replace(/{{CASHFLOW_DATECREATED}}/g,moment(data.date_created).format('YYYY-MM-DD'));\r\n                const paymentTypes = {tm:'Tiền mặt',ck:'Chuyển khoảng'}\r\n                HTML = HTML.replace(/{{PAYMENT_TYPE}}/g, paymentTypes[data.bill_acc_type] );\r\n                HTML = HTML.replace(/{{CASHFLOW_ATTACK}}/g, data.ref_code );\r\n                HTML = HTML.replace(/{{CASHFLOW_CODE}}/g, data.code );\r\n                    \r\n                \r\n                // BILL BODY\r\n                HTML = HTML.replace(/{{CASHFLOW_PARTNER}}/g, data.person_name );\r\n                HTML = HTML.replace(/{{CASHFLOW_PARTNER_ADDRESS}}/g, data.person_address );\r\n                HTML = HTML.replace(/{{CASHFLOW_REASON}}/g, data.reason );\r\n                HTML = HTML.replace(/{{CASHFLOW_VALUE}}/g,  numeral(data.total).format('0,0')+' đ'  );\r\n                HTML = HTML.replace(/{{CASHFLOW_NOTE}}/g, data.note );\r\n\r\n            }\r\n            \r\n        }\r\n\r\n        return HTML;\r\n    }\r\n\r\n    print = (HTML)=>{\r\n        \r\n        \r\n        var pri = document.querySelector('#ifmcontentstoprint').contentWindow; \r\n        pri.document.open();\r\n        pri.document.write(HTML);\r\n        pri.document.close();\r\n        pri.focus();\r\n        pri.print();\r\n\r\n    }\r\n\r\n    render() {\r\n        \r\n        const data = this.props.data;\r\n        const HTML = this._formatHTML(data,this.props.companyInfo);\r\n        \r\n\r\n        return (\r\n            <ViewModal  { ...this.props } >\r\n                \r\n                <div>\r\n                    \r\n                    <div style={{padding:10}}>\r\n                        <div className=\"btn-group\">\r\n                            <a style={{ cursor:'pointer'}} onClick={()=>{ doPrint(HTML) }}> <i className=\"fa fa-print\"></i> Print </a>\r\n                        </div>\r\n                    </div>\r\n                    <div    \r\n                        ref={el => (this.componentRef = el)}\r\n                        style={{\r\n                                paddingBottom:20\r\n                        }}\r\n                            dangerouslySetInnerHTML={{ __html: HTML  }} \r\n                    />\r\n                </div>\r\n            </ViewModal>\r\n        );\r\n    }\r\n}\r\n\r\nPrintForm.defaultProps = {\r\n    onToggle:()=>{},\r\n    data:{}\r\n}  \r\n\r\nexport default PrintForm\r\n"]},"metadata":{},"sourceType":"module"}