{"ast":null,"code":"import _classCallCheck from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\actions\\\\st_frontend\\\\src\\\\components\\\\SelectSubRegion.js\";\nimport doLoadSubRegion from '../hook/ultil/doLoadSubRegion';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Input } from 'reactstrap';\n\nvar SelectSubRegion =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SelectSubRegion, _React$Component);\n\n  function SelectSubRegion(props) {\n    var _this;\n\n    _classCallCheck(this, SelectSubRegion);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SelectSubRegion).call(this, props));\n    _this.state = {\n      strModel: 'subregions',\n      name: props.name,\n      rows: [],\n      defaultValue: props.defaultValue || '',\n      parent_code: props.parent_code,\n      status: props.status\n    };\n    return _this;\n  }\n\n  _createClass(SelectSubRegion, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      if (newProps.status !== 'closed') {\n        this.setState({\n          defaultValue: newProps.defaultValue\n        });\n\n        this._doLoadSubRegion(newProps.parent_code);\n      }\n    }\n  }, {\n    key: \"_doLoadSubRegion\",\n    value: function _doLoadSubRegion(parent_code) {\n      var _this2 = this;\n\n      doLoadSubRegion(parent_code, null, function (res) {\n        if (res.name === 'success') {\n          _this2.setState({\n            rows: res.rows,\n            parent_code: parent_code\n          });\n        }\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._doLoadSubRegion(this.state.parent_code);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(Input, {\n        id: this.props.id,\n        value: this.state.defaultValue,\n        onChange: function onChange(e) {\n          _this3.props.onChange(e);\n        },\n        type: \"select\",\n        style: this.props.style || {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \" \", this.state.name, \" \"), this.state.rows.map(function (item) {\n        return React.createElement(\"option\", {\n          key: item.id,\n          value: item.code,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, \" \", item.name, \" \");\n      }));\n    }\n  }]);\n\n  return SelectSubRegion;\n}(React.Component);\n\nSelectSubRegion.propTypes = {\n  strModel: PropTypes.string,\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n  id: PropTypes.string,\n  defaultValue: PropTypes.string,\n  parent_code: PropTypes.string,\n  status: PropTypes.string // trạng thái của form \n\n};\nSelectSubRegion.defaultProps = {\n  name: 'Vui lòng chọn',\n  onChange: function onChange() {},\n  id: 'none',\n  defaultValue: '',\n  parent_code: '06',\n  status: ''\n};\nexport default SelectSubRegion;","map":{"version":3,"sources":["D:/actions/st_frontend/src/components/SelectSubRegion.js"],"names":["doLoadSubRegion","PropTypes","React","Input","SelectSubRegion","props","state","strModel","name","rows","defaultValue","parent_code","status","newProps","setState","_doLoadSubRegion","res","id","e","onChange","style","map","item","code","Component","propTypes","string","func","defaultProps"],"mappings":"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","sourcesContent":["\r\nimport doLoadSubRegion from '../hook/ultil/doLoadSubRegion' ; \r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport React from 'react';\r\nimport { Input  } from 'reactstrap';\r\n\r\n\r\nclass SelectSubRegion extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n \r\n        \r\n        this.state = {\r\n            strModel:'subregions',\r\n            name:props.name,\r\n            rows:[],\r\n            defaultValue:props.defaultValue || '',\r\n            parent_code:props.parent_code,\r\n            status:props.status\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    componentWillReceiveProps(newProps){\r\n        \r\n        \r\n        if(newProps.status!=='closed'){\r\n            this.setState({   \r\n                defaultValue:newProps.defaultValue\r\n            });\r\n            this._doLoadSubRegion(newProps.parent_code) ;\r\n        }\r\n        \r\n    }\r\n\r\n    \r\n    _doLoadSubRegion(parent_code){\r\n\r\n        doLoadSubRegion(parent_code,null,(res)=>{    \r\n            if(res.name==='success'){\r\n                this.setState({\r\n                    rows:res.rows,\r\n                    parent_code:parent_code\r\n                });\r\n            }    \r\n        }); \r\n    }\r\n    componentDidMount(){\r\n        \r\n        this._doLoadSubRegion(this.state.parent_code) ; \r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Input id={this.props.id} value={ this.state.defaultValue } onChange={(e)=>{ this.props.onChange(e) }} type=\"select\" style={ this.props.style || {} }>\r\n                <option value=\"\"> { this.state.name } </option>\r\n                \r\n                {\r\n                    this.state.rows.map((item)=>{\r\n                        return(\r\n                            <option key={item.id} value={item.code}> { item.name } </option>\r\n                        )\r\n                    })\r\n                }\r\n            </Input>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nSelectSubRegion.propTypes = {\r\n    strModel:PropTypes.string,\r\n    name:PropTypes.string,\r\n    onChange:PropTypes.func,\r\n    id:PropTypes.string,\r\n    defaultValue:PropTypes.string,\r\n    parent_code:PropTypes.string,\r\n    status:PropTypes.string // trạng thái của form \r\n}\r\n\r\nSelectSubRegion.defaultProps = {\r\n    name:'Vui lòng chọn',\r\n    onChange:function(){},\r\n    id:'none',\r\n    defaultValue:'',\r\n    parent_code:'06',\r\n    status:''\r\n}\r\n\r\n\r\nexport default SelectSubRegion;\r\n"]},"metadata":{},"sourceType":"module"}