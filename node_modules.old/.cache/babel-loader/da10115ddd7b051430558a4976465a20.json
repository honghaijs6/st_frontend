{"ast":null,"code":"import _objectSpread from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\actions\\\\st_frontend\\\\src\\\\components\\\\ButtonSerialVerify.js\";\n// DATA \nimport Model from '../model/model';\nimport React, { Component } from 'react';\nimport { Input, Button, Row, Col, FormGroup } from 'reactstrap';\nimport BenMessage from './BenMessage';\nimport ViewModal from './ViewModal';\n\nvar ButtonSerialVerify =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ButtonSerialVerify, _Component);\n\n  function ButtonSerialVerify(props) {\n    var _this;\n\n    _classCallCheck(this, ButtonSerialVerify);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ButtonSerialVerify).call(this, props));\n    _this._percentage = 0;\n    _this._index = 0;\n\n    _this._onChange = function (e) {\n      var text = e.target.value;\n      text = text.replace(/\\n/g, ',');\n      var data = text.split(',');\n\n      _this.setState({\n        text: text,\n        data: data,\n        msg: ''\n      });\n    };\n\n    _this._onSubmit = function () {\n      // detect code\n      var msg = '';\n\n      if (_this._detectCode()) {\n        if (_this.props.total !== _this.state.data.length) {\n          msg = 'Tổng số serial/emei cần xác nhận không khớp ';\n        } else {\n          _this._uploadNow();\n        }\n      } else {\n        msg = 'Vui lòng xem lại số serial/emei';\n      }\n\n      _this.setState({\n        msg: msg\n      });\n    };\n\n    _this.state = {\n      status: '',\n      isOpen: false,\n      data: [],\n      data_fail: [],\n      text: '',\n      msg: ''\n    };\n\n    _this._setup();\n\n    return _this;\n  }\n\n  _createClass(ButtonSerialVerify, [{\n    key: \"_setup\",\n    value: function _setup() {\n      this.model = new Model(this.props.strModel);\n    }\n  }, {\n    key: \"_detectCode\",\n    value: function _detectCode() {\n      var ret = true;\n      this.state.data.map(function (item) {\n        if (item === '') {\n          ret = false;\n        }\n      });\n      return ret;\n    }\n  }, {\n    key: \"_uploadNow\",\n    value: function _uploadNow() {\n      var _this2 = this;\n\n      if (this._index < this.state.data.length) {\n        var data = _objectSpread({\n          code: this.state.data[this._index]\n        }, this.props.fields);\n\n        this.model.putCustom('verify', data, function (res) {\n          if (res.name === 'ok') {\n            _this2._index += 1;\n            _this2._percentage = _this2._index * 100 / _this2.state.data.length;\n\n            _this2.setState({\n              status: res.name,\n              msg: res.name\n            });\n\n            _this2._uploadNow();\n          } else {\n            var data_fail = _this2.state.data_fail;\n            data_fail.push(data);\n\n            _this2.setState({\n              data_fail: data_fail,\n              msg: data_fail.length + ' ' + res.message\n            });\n\n            _this2._index += 1;\n            _this2._percentage = _this2._index * 100 / _this2.state.data.length;\n\n            _this2._uploadNow();\n          }\n        });\n      } else {\n        if (this.state.msg === 'success' || this.state.msg === 'ok') {\n          this.setState({\n            status: 'finish'\n          });\n          this.props.onComplete(true);\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(Button, {\n        onClick: function onClick() {\n          _this3.setState({\n            isOpen: true\n          });\n        },\n        style: this.props.style,\n        className: \"btn btn-normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(ViewModal, {\n        width: this.props.width,\n        name: this.props.strModel,\n        isOpen: this.state.isOpen,\n        onToggle: function onToggle(isOpen) {\n          _this3.setState({\n            isOpen: isOpen\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"view-modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \" S\\u1ED1 serial/Imei \"), React.createElement(Input, {\n        value: this.state.text,\n        onChange: this._onChange,\n        type: \"textarea\",\n        style: {\n          height: 120\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this._onSubmit,\n        className: \"btn btn-normal bg-green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-bug mr-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), \" X\\xE1c nh\\u1EADn\"), React.createElement(\"span\", {\n        className: \"text-red form-response ml-10  font-11\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \" \", this.state.msg, \" \")), React.createElement(Col, {\n        md: 2,\n        style: {\n          textAlign: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"text-red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"  \", this.state.data_fail.length, \" \"), \" / \", React.createElement(\"span\", {\n        className: \"text-green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \" \", this.state.data.length, \" \"))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          display: this.state.status === '' ? 'none' : 'block'\n        },\n        className: \"progress progress-sm \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"progress-bar progress-bar-success progress-bar-striped\",\n        style: {\n          width: this._percentage + '%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \" \", Math.floor(this._percentage) + '%', \" Complete\"))))))), React.createElement(\"i\", {\n        className: this.props.icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }), \" \", this.props.title);\n    }\n  }]);\n\n  return ButtonSerialVerify;\n}(Component);\n\nexport { ButtonSerialVerify as default };\nButtonSerialVerify.defaultProps = {\n  onComplete: function onComplete() {},\n  icon: \"fa fa-cloud-upload mr-5\",\n  title: '.xlsx',\n  width: '81%',\n  height: '55vh',\n  strModel: 'model',\n  total: 0,\n  fields: {\n    warehouse_receipt_code_out: ''\n  }\n};","map":{"version":3,"sources":["D:/actions/st_frontend/src/components/ButtonSerialVerify.js"],"names":["Model","React","Component","Input","Button","Row","Col","FormGroup","BenMessage","ViewModal","ButtonSerialVerify","props","_percentage","_index","_onChange","e","text","target","value","replace","data","split","setState","msg","_onSubmit","_detectCode","total","state","length","_uploadNow","status","isOpen","data_fail","_setup","model","strModel","ret","map","item","code","fields","putCustom","res","name","push","message","onComplete","style","width","height","textAlign","display","Math","floor","icon","title","defaultProps","warehouse_receipt_code_out"],"mappings":"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","sourcesContent":["// DATA \r\nimport Model from '../model/model';\r\n\r\n\r\nimport React, { Component } from 'react';\r\nimport { Input, Button, Row, Col, FormGroup } from 'reactstrap';\r\n\r\nimport BenMessage from './BenMessage'; \r\nimport ViewModal  from './ViewModal';\r\n\r\n\r\nexport default class ButtonSerialVerify extends Component {\r\n\r\n\r\n    _percentage = 0;\r\n    _index=0;\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            status:'',\r\n            isOpen:false,\r\n            data:[],\r\n            data_fail:[],\r\n            text:'',\r\n            msg:''\r\n\r\n        }\r\n\r\n\r\n        this._setup();\r\n    }\r\n\r\n    _setup(){\r\n        this.model = new Model(this.props.strModel);\r\n    }\r\n\r\n    \r\n\r\n\r\n    _onChange = (e)=>{\r\n        let text = e.target.value;\r\n        text = text.replace(/\\n/g,',');\r\n        const data =  text.split(',');\r\n        \r\n        this.setState({\r\n            text:text,\r\n            data:data,\r\n            msg:''\r\n        });\r\n    }\r\n\r\n    _detectCode(){\r\n        let ret = true ;\r\n        this.state.data.map((item)=>{\r\n            if(item===''){\r\n                ret = false\r\n            }\r\n        })\r\n        return ret\r\n    }\r\n\r\n    _uploadNow(){\r\n\r\n        \r\n        \r\n        if(this._index < this.state.data.length){   \r\n\r\n            const data = {\r\n                code:this.state.data[this._index],\r\n                ...this.props.fields\r\n            };\r\n\r\n            this.model.putCustom('verify',data,(res)=>{\r\n                if(res.name==='ok'){\r\n      \r\n                    this._index +=1 ;\r\n                    this._percentage = (this._index * 100)/this.state.data.length;\r\n                    \r\n                    this.setState({\r\n                        status:res.name,\r\n                        msg:res.name\r\n                    });\r\n    \r\n                    this._uploadNow();\r\n    \r\n                }else{\r\n\r\n                    let data_fail = this.state.data_fail; \r\n                    data_fail.push(data);\r\n\r\n                    this.setState({\r\n                        data_fail:data_fail,\r\n                        msg: data_fail.length +' '+ res.message\r\n                    });\r\n                    \r\n                    this._index +=1 ;\r\n                    this._percentage = (this._index * 100)/this.state.data.length;\r\n                    this._uploadNow();\r\n\r\n                }\r\n            });\r\n        }else{ \r\n             \r\n            if(this.state.msg==='success' || this.state.msg ==='ok'){\r\n\r\n                this.setState({\r\n                    status:'finish'\r\n                });\r\n    \r\n                this.props.onComplete(true);\r\n            }\r\n\r\n        }\r\n        \r\n\r\n\r\n    }\r\n    _onSubmit = ()=>{\r\n        // detect code\r\n        \r\n        let msg = '';\r\n        if(this._detectCode()){\r\n            if(this.props.total !== this.state.data.length ){\r\n                msg = 'Tổng số serial/emei cần xác nhận không khớp '\r\n            }else{\r\n                this._uploadNow();\r\n\r\n            }\r\n        }else{ msg = 'Vui lòng xem lại số serial/emei' }\r\n\r\n        this.setState({\r\n            msg:msg\r\n        })\r\n\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <Button onClick={()=>{ this.setState({isOpen:true}) }} style={this.props.style} className=\"btn btn-normal\">\r\n                <ViewModal  \r\n                    \r\n                    width={this.props.width}\r\n                    name={this.props.strModel}\r\n                    isOpen={ this.state.isOpen }\r\n                    onToggle={(isOpen)=>{  this.setState({isOpen:isOpen})  }}\r\n                >\r\n                    <div className=\"view-modal-body\">\r\n                        <FormGroup row>\r\n                            <Col md={12}>\r\n                                <label> Số serial/Imei </label>\r\n                                <Input value={this.state.text} onChange={ this._onChange }  type=\"textarea\" style={{height:120}} />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Col md={10}>\r\n                                <Button onClick={this._onSubmit} className=\"btn btn-normal bg-green\">\r\n                                   <i className=\"fa fa-bug mr-5\"></i> Xác nhận\r\n                                </Button>\r\n                                <span className=\"text-red form-response ml-10  font-11\"> { this.state.msg } </span>\r\n                            </Col>\r\n                            <Col md={2} style={{\r\n                                textAlign:'right'\r\n                            }}>\r\n                                <span className=\"text-red\">  { this.state.data_fail.length } </span> / <span className=\"text-green\"> { this.state.data.length } </span>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Col md={12}>\r\n                                <div style={{display: this.state.status ==='' ? 'none':'block' }} className=\"progress progress-sm \">\r\n                                    <div \r\n                                        className=\"progress-bar progress-bar-success progress-bar-striped\" \r\n                                        style={{width:  this._percentage+'%' }}>\r\n                                        <span> { Math.floor(this._percentage) + '%' } Complete</span>\r\n                                    </div>\r\n                                </div>\r\n                            </Col>\r\n                        </FormGroup>\r\n                    </div>\r\n                </ViewModal>\r\n                <i className={this.props.icon}></i> { this.props.title }    \r\n            </Button>\r\n        );\r\n    }\r\n}\r\n\r\nButtonSerialVerify.defaultProps = {\r\n    onComplete:()=>{},\r\n    icon:\"fa fa-cloud-upload mr-5\",\r\n    title:'.xlsx',\r\n    width:'81%',\r\n    height:'55vh',  \r\n    strModel:'model',\r\n    total:0,\r\n    fields:{\r\n        warehouse_receipt_code_out:''\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}