{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\actions\\\\st_frontend\\\\src\\\\components\\\\BenGrid2\\\\BenGrid.js\";\n\n/*\r\nprops : nextColums : []\r\n        model    : Object\r\n        rowData : []\r\n*/\nimport React, { Component } from 'react';\nimport { Row, Col, ButtonGroup, Button, Input } from 'reactstrap';\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-material.css';\nimport GridFooter from './GridFooter';\nimport BenConfirm from '../BenConfirm';\nimport BenMessage from '../BenMessage';\n\nvar BenGrid =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BenGrid, _Component);\n\n  function BenGrid(props) {\n    var _ref;\n\n    var _this;\n\n    _classCallCheck(this, BenGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BenGrid).call(this, props));\n    var gridID = props.gridID || '_id';\n    _this.tools = {\n      add: {\n        icon: 'fa fa-plus',\n        name: 'Add'\n      },\n      edit: {\n        icon: 'fa fa-pencil',\n        name: 'Remove'\n      },\n      remove: {\n        icon: 'fa fa-trash',\n        name: 'Remove'\n      }\n    };\n    _this.state = {\n      isGridReady: false,\n      height: props.height || '68vh',\n      key: '',\n      isRightTool: props.isRightTool || false,\n      isLeftTool: props.isLeftTool === undefined ? true : props.isLeftTool,\n      isChecked: false,\n      columnDefs: [(_ref = {\n        headerName: \"SID\",\n        field: gridID,\n        width: 120,\n        checkboxSelection: true,\n        filterParams: {\n          newRowsAction: \"keep\"\n        }\n      }, _defineProperty(_ref, \"checkboxSelection\", function checkboxSelection(params) {\n        return params.columnApi.getRowGroupColumns().length === 0;\n      }), _defineProperty(_ref, \"headerCheckboxSelection\", function headerCheckboxSelection(params) {\n        return params.columnApi.getRowGroupColumns().length === 0;\n      }), _ref)].concat(_toConsumableArray(props.nextColums)),\n      rowSelection: props.rowSelection || \"multiple\",\n\n      /*defaultColDef: {\r\n        editable: true,\r\n        enableRowGroup: true,\r\n        enablePivot: true,\r\n        enableValue: true\r\n      },*/\n      rowData: [],\n      count: props.model.db.total,\n      selectedData: [],\n      displayBtn: props.displayBtn || ['add', 'edit', 'remove']\n    };\n    _this.model = props.model;\n    _this.onFindKeyUp = _this.onFindKeyUp.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onBtnFind = _this.onBtnFind.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  /* WHEN*/\n\n\n  _createClass(BenGrid, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      //this.gridApi.refreshCells();\n      if (this.state.isGridReady) {\n        //this.gridApi.setRowData(newProps.rowData);\n        //this.gridApi.refreshCells();\n        // ADD ROW\n        if (newProps.model.db.total > this.state.count) {\n          //this.gridApi.updateRowData({ add: [newProps.rowData[0]],addIndex: 0 });\n          this.gridApi.setRowData(newProps.rowData);\n        } else if (newProps.model.db.total < this.state.count) {\n          // REMOVE ROW\n          this.gridApi.updateRowData({\n            remove: this.state.selectedData\n          });\n        } else if (newProps.model.db.total === this.state.count) {\n          if (newProps.formStatus === 'success' || newProps.formStatus === 'ok') {\n            this.gridApi.setRowData(newProps.rowData);\n          }\n        }\n\n        this.state.count = newProps.model.db.total;\n      }\n\n      this.setState({\n        rowData: newProps.rowData,\n        count: newProps.model.db.total\n      });\n    }\n  }, {\n    key: \"error\",\n    value: function error(msg) {\n      console.log(msg);\n    }\n  }, {\n    key: \"onGridReady\",\n    value: function onGridReady(params) {\n      this.gridApi = params.api;\n      this.state.isGridReady = true;\n    }\n  }, {\n    key: \"onFindKeyUp\",\n    value: function onFindKeyUp(e) {\n      e.key === 'Enter' ? this.model.find(this.state.key) : this._whereStateChange({\n        key: e.target.value\n      });\n    }\n  }, {\n    key: \"onBtnFind\",\n    value: function onBtnFind() {\n      this.model.find(this.state.key);\n    }\n  }, {\n    key: \"_remove\",\n    value: function () {\n      var _remove2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var records, result, id;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                records = this.state.selectedData.length;\n                _context.next = 3;\n                return BenConfirm({\n                  title: 'Cảnh báo',\n                  message: \"Bạn có chắc là muốn xoá \" + records + ' dữ liệu này ?'\n                });\n\n              case 3:\n                result = _context.sent;\n\n                if (result) {\n                  this.props.onDeleted(this.state.selectedData);\n\n                  if (this.state.selectedData.length > 1) {\n                    this.model.deleteMulti(this.state.selectedData);\n                  } else {\n                    id = this.state.selectedData[0].id;\n                    this.model.delete(id, function (res) {});\n                  }\n                }\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function _remove() {\n        return _remove2.apply(this, arguments);\n      }\n\n      return _remove;\n    }()\n  }, {\n    key: \"_onBtnClick\",\n    value: function _onBtnClick(action) {\n      if (action === 'add') {\n        if (this.props.onBtnAdd !== undefined) {\n          this.props.onBtnAdd();\n        }\n      } else {\n        var records = this.state.selectedData.length;\n\n        if (records > 0) {\n          switch (action) {\n            case 'edit':\n              this.props.onBtnEdit(this.state.selectedData[0]);\n              break;\n\n            case 'remove':\n              this._remove();\n\n              break;\n          }\n        } else {\n          BenMessage({\n            message: 'You have to select record first!'\n          });\n        }\n      }\n    }\n  }, {\n    key: \"onSelectionChanged\",\n    value: function onSelectionChanged() {\n      var selectedNodes = this.gridApi.getSelectedNodes();\n      var selectedData = selectedNodes.map(function (node) {\n        return node.data;\n      });\n      this.setState({\n        selectedData: selectedData\n      }); // alway call back data on selected ;\n\n      this.props.onCellSelected(selectedData.length > 0 ? selectedData[0] : {});\n    }\n    /* HOW */\n\n    /* WHERE*/\n\n  }, {\n    key: \"_whereStateChange\",\n    value: function _whereStateChange(newState) {\n      this.setState(Object.assign(this.state, newState));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var clnRightTool = this.state.isRightTool ? '' : 'hidden';\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"toolbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, this.state.displayBtn.map(function (item, index) {\n        return React.createElement(Button, {\n          key: index,\n          onClick: function onClick() {\n            _this2._onBtnClick(item);\n          },\n          className: 'btn-ubuntu',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257\n          },\n          __self: this\n        }, \" \", React.createElement(\"i\", {\n          className: _this2.tools[item]['icon'],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257\n          },\n          __self: this\n        }), \" \");\n      })), this.props.leftButton), React.createElement(Col, {\n        md: 10,\n        className: 'text-right ' + clnRightTool,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, this.props.customButton, React.createElement(ButtonGroup, {\n        style: {\n          marginRight: 6\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(Input, {\n        placeholder: \"Search\",\n        onKeyUp: this.onFindKeyUp,\n        style: {\n          borderRadius: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }), React.createElement(Button, {\n        style: {\n          marginRight: 10\n        },\n        onClick: this.onBtnFind,\n        className: \"btn-ubuntu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, \" \", React.createElement(\"i\", {\n        className: \"fa fa-search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }), \" \"))))), React.createElement(\"div\", {\n        className: \"ag-theme-material\",\n        id: \"myGrid\",\n        style: {\n          boxSizing: \"border-box\",\n          height: this.state.height,\n          padding: '1rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(AgGridReact, {\n        onSelectionChanged: this.onSelectionChanged.bind(this),\n        enableSorting: true,\n        rowSelection: this.state.rowSelection,\n        enableColResize: true,\n        defaultColDef: this.state.defaultColDef,\n        onGridReady: this.onGridReady.bind(this),\n        columnDefs: this.state.columnDefs,\n        rowData: this.state.rowData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }), React.createElement(GridFooter, {\n        model: this.model,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return BenGrid;\n}(Component);\n\nBenGrid.defaultProps = {\n  onCellSelected: function onCellSelected() {},\n  onDeleted: function onDeleted() {}\n};\nexport default BenGrid;","map":{"version":3,"sources":["D:/actions/st_frontend/src/components/BenGrid2/BenGrid.js"],"names":["React","Component","Row","Col","ButtonGroup","Button","Input","AgGridReact","GridFooter","BenConfirm","BenMessage","BenGrid","props","gridID","tools","add","icon","name","edit","remove","state","isGridReady","height","key","isRightTool","isLeftTool","undefined","isChecked","columnDefs","headerName","field","width","checkboxSelection","filterParams","newRowsAction","params","columnApi","getRowGroupColumns","length","nextColums","rowSelection","rowData","count","model","db","total","selectedData","displayBtn","onFindKeyUp","bind","onBtnFind","newProps","gridApi","setRowData","updateRowData","formStatus","setState","msg","console","log","api","e","find","_whereStateChange","target","value","records","title","message","result","onDeleted","deleteMulti","id","delete","res","action","onBtnAdd","onBtnEdit","_remove","selectedNodes","getSelectedNodes","map","node","data","onCellSelected","newState","Object","assign","clnRightTool","item","index","_onBtnClick","leftButton","customButton","marginRight","borderRadius","boxSizing","padding","onSelectionChanged","defaultColDef","onGridReady","defaultProps"],"mappings":"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","sourcesContent":["\r\n/*\r\nprops : nextColums : []\r\n        model    : Object\r\n        rowData : []\r\n*/\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport {   Row, Col, ButtonGroup, Button, Input } from 'reactstrap';\r\n\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-material.css';\r\n\r\nimport GridFooter from './GridFooter';\r\n\r\nimport BenConfirm from '../BenConfirm';\r\nimport BenMessage from '../BenMessage';\r\n\r\n\r\n\r\n\r\nclass BenGrid extends Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n\r\n    const gridID = props.gridID || '_id';\r\n\r\n    this.tools = {\r\n      add:{\r\n        icon:'fa fa-plus',\r\n        name:'Add'\r\n      },\r\n      edit:{\r\n        icon:'fa fa-pencil',\r\n        name:'Remove'\r\n      },\r\n      remove:{\r\n        icon:'fa fa-trash',\r\n        name:'Remove'\r\n      }\r\n\r\n    }\r\n\r\n    this.state = {\r\n      isGridReady:false,\r\n      height: props.height || '68vh',\r\n      key:'',\r\n      isRightTool:props.isRightTool || false,\r\n      isLeftTool: props.isLeftTool === undefined ? true : props.isLeftTool  ,\r\n      isChecked:false,\r\n      columnDefs: [\r\n        {\r\n          headerName: \"SID\",\r\n          field: gridID,\r\n          width:120,\r\n          checkboxSelection: true,\r\n          filterParams: { newRowsAction: \"keep\" },\r\n          checkboxSelection: function(params) {\r\n\r\n            return params.columnApi.getRowGroupColumns().length === 0;\r\n          },\r\n          headerCheckboxSelection: function(params) {\r\n            return params.columnApi.getRowGroupColumns().length === 0;\r\n          }\r\n\r\n        },\r\n        ...props.nextColums\r\n      ],\r\n      rowSelection:  props.rowSelection || \"multiple\" ,\r\n\r\n          /*defaultColDef: {\r\n            editable: true,\r\n            enableRowGroup: true,\r\n            enablePivot: true,\r\n            enableValue: true\r\n          },*/\r\n      rowData: [],\r\n      count: props.model.db.total ,\r\n      selectedData:[],\r\n      displayBtn: props.displayBtn ||  ['add','edit','remove']\r\n    }\r\n\r\n    this.model = props.model;\r\n\r\n\r\n    this.onFindKeyUp = this.onFindKeyUp.bind(this);\r\n    this.onBtnFind = this.onBtnFind.bind(this);\r\n\r\n  }\r\n\r\n  /* WHEN*/\r\n  componentWillReceiveProps(newProps){\r\n\r\n    //this.gridApi.refreshCells();\r\n\r\n    if(this.state.isGridReady){\r\n\r\n      //this.gridApi.setRowData(newProps.rowData);\r\n      //this.gridApi.refreshCells();\r\n\r\n      // ADD ROW\r\n      if( newProps.model.db.total > this.state.count){\r\n        //this.gridApi.updateRowData({ add: [newProps.rowData[0]],addIndex: 0 });\r\n        this.gridApi.setRowData(newProps.rowData);\r\n\r\n      }else if(newProps.model.db.total < this.state.count){\r\n        // REMOVE ROW\r\n        this.gridApi.updateRowData({ remove: this.state.selectedData });\r\n      }else if(newProps.model.db.total === this.state.count){\r\n\r\n\r\n        if(newProps.formStatus==='success' || newProps.formStatus==='ok'){\r\n          this.gridApi.setRowData(newProps.rowData);\r\n        }\r\n\r\n      }\r\n\r\n\r\n      this.state.count = newProps.model.db.total;\r\n\r\n    }\r\n\r\n    this.setState({\r\n      rowData:newProps.rowData,\r\n      count:newProps.model.db.total\r\n    });\r\n\r\n  }\r\n\r\n  error(msg){\r\n    console.log(msg);\r\n  }\r\n\r\n\r\n  onGridReady(params){\r\n\r\n     this.gridApi = params.api;\r\n     this.state.isGridReady = true ;\r\n\r\n  }\r\n\r\n  onFindKeyUp(e){\r\n\r\n     e.key === 'Enter' ? this.model.find(this.state.key) :  this._whereStateChange({key:e.target.value}) ;\r\n\r\n\r\n  }\r\n\r\n  onBtnFind(){\r\n\r\n    this.model.find(this.state.key);\r\n\r\n  }\r\n\r\n  async _remove(){\r\n\r\n    const records = this.state.selectedData.length;\r\n\r\n    let result = await BenConfirm({\r\n      title: 'Cảnh báo',\r\n      message: \"Bạn có chắc là muốn xoá \"+ records+' dữ liệu này ?',\r\n    });\r\n\r\n    if(result){\r\n\r\n      this.props.onDeleted(this.state.selectedData) ;\r\n\r\n\r\n      if(this.state.selectedData.length>1){\r\n        this.model.deleteMulti(this.state.selectedData);\r\n      }else{\r\n        const id = this.state.selectedData[0].id;\r\n        this.model.delete(id,(res)=>{  })\r\n      }\r\n\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n  _onBtnClick(action){\r\n\r\n\r\n    if(action==='add'){\r\n\r\n      if(this.props.onBtnAdd !== undefined){\r\n        this.props.onBtnAdd();\r\n      }\r\n\r\n    }else{\r\n\r\n      const records = this.state.selectedData.length;\r\n      if(records>0){\r\n\r\n        switch(action){\r\n\r\n          case 'edit':\r\n            this.props.onBtnEdit(this.state.selectedData[0]);\r\n          break ;\r\n\r\n          case 'remove':\r\n            this._remove();\r\n          break ;\r\n\r\n        }\r\n      }else{ BenMessage({message:'You have to select record first!'}) }\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n  onSelectionChanged(){\r\n\r\n\r\n    const selectedNodes = this.gridApi.getSelectedNodes()\r\n    const selectedData = selectedNodes.map( node => node.data );\r\n\r\n    this.setState({\r\n      selectedData:selectedData\r\n    });\r\n\r\n    // alway call back data on selected ;\r\n    this.props.onCellSelected(selectedData.length > 0 ? selectedData[0] : {});\r\n\r\n\r\n\r\n  }\r\n\r\n  /* HOW */\r\n\r\n  /* WHERE*/\r\n  _whereStateChange(newState){\r\n    this.setState(Object.assign(this.state,newState));\r\n  }\r\n  render(){\r\n\r\n\r\n    const clnRightTool =  this.state.isRightTool ? '' : 'hidden';\r\n\r\n\r\n    return (\r\n\r\n      <div>\r\n          <div className=\"toolbar\">\r\n            <Row>\r\n              <Col md={2}>\r\n                <ButtonGroup>\r\n                  {\r\n                    this.state.displayBtn.map((item,index)=>{\r\n                       return(\r\n                        <Button key={index}  onClick={ ()=>{ this._onBtnClick(item) } } className={ 'btn-ubuntu'} > <i className={ this.tools[item]['icon'] }></i> </Button>\r\n                       )\r\n                    })\r\n                  }\r\n                  </ButtonGroup>\r\n\r\n                  { this.props.leftButton }\r\n              </Col>\r\n              <Col md={10} className={'text-right '+ clnRightTool}>\r\n\r\n                { this.props.customButton }\r\n                <ButtonGroup style={{marginRight:6}}>\r\n\r\n                    <Input  placeholder=\"Search\" onKeyUp={ this.onFindKeyUp }  style={{borderRadius:0}}  />\r\n                    <Button style={{marginRight:10}} onClick={ this.onBtnFind }  className=\"btn-ubuntu\"> <i className=\"fa fa-search\"></i> </Button>\r\n\r\n\r\n                </ButtonGroup>\r\n\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n\r\n          <div className=\"ag-theme-material\" id=\"myGrid\" style={{boxSizing: \"border-box\", height: this.state.height, padding:'1rem'}}>\r\n              <AgGridReact\r\n\r\n                  onSelectionChanged={this.onSelectionChanged.bind(this)}\r\n                  enableSorting={true}\r\n                  rowSelection={this.state.rowSelection}\r\n                  enableColResize={true}\r\n                  defaultColDef={this.state.defaultColDef}\r\n                  onGridReady={this.onGridReady.bind(this)}\r\n                  columnDefs={this.state.columnDefs}\r\n                  rowData={this.state.rowData}>\r\n\r\n              </AgGridReact>\r\n\r\n              <GridFooter model={ this.model } />\r\n          </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nBenGrid.defaultProps = {\r\n  onCellSelected:()=>{},\r\n  onDeleted:()=>{}\r\n}\r\n\r\nexport default BenGrid;\r\n"]},"metadata":{},"sourceType":"module"}