{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\actions\\\\st_frontend\\\\src\\\\pages\\\\Cashflow\\\\View\\\\index.js\";\n// DATA\nimport { BILL_ACC_TYPES } from '../../../config/app.config';\nimport Model from '../../../model/model'; // HOOKS\n\nimport doGetModelInfo from '../../../hook/ultil/doGetModelInfo'; // LIBS \n\nimport moment from 'moment';\nimport numeral from 'numeral';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, ButtonGroup, FormGroup, Input, Label } from 'reactstrap';\nimport { BenGrid } from '../../../components/BenGrid2';\nimport BenMessage from '../../../components/BenMessage';\nimport ButtonExpand from '../../../components/ButtonExpand';\nimport ButtonExpandList from '../../../components/ButtonExpandList';\nimport SelectList from '../../../components/SelectList';\nimport RankDatePicker from '../../../components/RankDatePicker';\nimport MyForm from './Form';\nimport DeleteForm from './DeleteForm';\nimport PrintForm from './PrintForm';\nvar MODE = 'bills';\n\nvar CashFlowView =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CashFlowView, _Component);\n\n  function CashFlowView(props) {\n    var _this;\n\n    _classCallCheck(this, CashFlowView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CashFlowView).call(this, props));\n    _this._curInfo = {};\n    _this.state = {\n      typeAction: '',\n      onAction: '',\n      status: '',\n      isOpenForm: false,\n      isOpenDeleteForm: false,\n      isOpenPrintForm: false,\n      receiptType: '',\n      actions: [{\n        code: 'update',\n        icon: 'fa-pencil',\n        name: 'Cập nhật phiếu'\n      }, {\n        code: 'remove',\n        icon: 'fa-trash',\n        name: 'Huỷ phiếu',\n        active: true\n      }, {\n        code: 'print',\n        icon: 'fa-print',\n        name: 'In phiếu'\n      }],\n      companyInfo: {}\n    };\n    _this.grid = {\n      colums: [{\n        headerName: \"Phiếu\",\n        field: \"code\",\n        width: 140,\n        cellRenderer: function cellRenderer(params) {\n          return \"<span class=\\\" finalcial-\".concat(params.data.type, \" text-uppercase\\\"> \").concat(params.value, \" </span>\");\n        }\n      }, {\n        headerName: \"PTTT\",\n        field: \"bill_acc_type\",\n        width: 100,\n        cellRenderer: function cellRenderer(params) {\n          return \"<span class=\\\" finalcial-\".concat(params.value, \" text-uppercase\\\"> \").concat(params.value, \"  </span>\");\n        }\n      }, {\n        headerName: \"Chứng từ\",\n        field: \"ref_code\",\n        width: 180,\n        cellRenderer: function cellRenderer(params) {\n          return \"<span class=\\\"text-uppercase\\\"> \".concat(params.value, \" </span>\");\n        }\n      }, {\n        headerName: \"Đối tượng\",\n        field: \"person_name\",\n        width: 300\n      }, {\n        headerName: \"Số tiền\",\n        field: \"total\",\n        width: 140,\n        cellRenderer: function cellRenderer(params) {\n          return numeral(params.value).format('0,0') + ' đ';\n        }\n      }, {\n        headerName: \"Giá trị\",\n        field: \"total_before\",\n        width: 140,\n        cellRenderer: function cellRenderer(params) {\n          return numeral(params.value).format('0,0') + ' đ';\n        }\n      }, {\n        headerName: \"Tài khoản\",\n        field: \"bill_acc_name\",\n        width: 240\n      }, {\n        headerName: \"Người tạo\",\n        field: \"creator\",\n        width: 160\n      }, {\n        headerName: \"Ngày\",\n        field: \"date_created\",\n        width: 140,\n        cellRenderer: function cellRenderer(params) {\n          var humanDate = moment(params.value).format('YYYY-MM-DD');\n          return humanDate;\n        }\n      }, {\n        headerName: \"Điều chỉnh\",\n        field: \"date_modified\",\n        width: 140,\n        cellRenderer: function cellRenderer(params) {\n          var humanDate = params.value !== null ? moment(params.value).format('YYYY-MM-DD') : '';\n          return humanDate;\n        }\n      }],\n      rowData: []\n    };\n\n    _this._setup();\n\n    return _this;\n  }\n\n  _createClass(CashFlowView, [{\n    key: \"_setup\",\n    value: function _setup() {\n      this.model = new Model(MODE, this.props.dispatch);\n    }\n  }, {\n    key: \"_doOpenModalUpdate\",\n    value: function _doOpenModalUpdate() {\n      this.setState({\n        receiptType: this._curInfo.type,\n        isOpenForm: true,\n        typeAction: 'put'\n      });\n    }\n  }, {\n    key: \"_doOpenModal\",\n    value: function _doOpenModal(receiptType) {\n      this.setState({\n        receiptType: receiptType,\n        isOpenForm: true,\n        typeAction: 'post'\n      });\n    }\n  }, {\n    key: \"_onSubmitForm\",\n    value: function _onSubmitForm(res) {\n      if (res.name === 'success' || res.name === 'ok') {\n        this._curInfo = {};\n        this.setState({\n          isOpenForm: false,\n          isOpenDeleteForm: false,\n          typeAction: '',\n          receiptType: '',\n          status: res.name\n        });\n      }\n    }\n  }, {\n    key: \"_callAction\",\n    value: function _callAction(item) {\n      document.querySelector('body').click();\n\n      if (JSON.stringify(this._curInfo) !== '{}') {\n        switch (item.code) {\n          case 'update':\n            this._doOpenModalUpdate();\n\n            break;\n\n          case 'remove':\n            this.setState({\n              isOpenDeleteForm: true\n            });\n            break;\n\n          case 'progress':\n            this.setState({\n              isOpenProgressForm: true\n            });\n            break;\n\n          case 'print':\n            this.setState({\n              isOpenPrintForm: true\n            });\n            break;\n        }\n      } else {\n        BenMessage({\n          title: 'Thông báo',\n          message: 'Vui lòng chọn chọn dữ liệu cần xử lý '\n        });\n      }\n    }\n  }, {\n    key: \"_loadWithDate\",\n    value: function _loadWithDate(jsonDate) {\n      var formatDate = {\n        start: moment(jsonDate.start).format('YYYY-MM-DD'),\n        end: moment(jsonDate.end).format('YYYY-MM-DD')\n      };\n      this.model.set('paginate', _objectSpread({}, formatDate));\n      this.model.load();\n    }\n  }, {\n    key: \"_onChange\",\n    value: function _onChange(field, value) {\n      if (value !== '') {\n        this.model.set('paginate', _defineProperty({}, field, value));\n      } else {\n        this.model.remove(field);\n      }\n\n      this.model.load();\n    }\n    /* WHERE*/\n\n  }, {\n    key: \"_whereStateChange\",\n    value: function _whereStateChange(newState) {\n      this.setState(Object.assign(this.state, newState));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var resComInfo;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.model.load(); // LOAD COMPANY INFO\n\n                _context.next = 3;\n                return doGetModelInfo('companies', window.USERINFO.company_id);\n\n              case 3:\n                resComInfo = _context.sent;\n\n                if (resComInfo.name === 'success') {\n                  this.setState({\n                    companyInfo: resComInfo.data\n                  });\n                }\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      this.grid.rowData = newProps[MODE]['list']; // CONNECT REDUX STATE \n\n      this._whereStateChange(newProps[MODE]['state']);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"blank-app \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(DeleteForm, {\n        data: this._curInfo,\n        isOpen: this.state.isOpenDeleteForm,\n        onToggle: function onToggle(isOpen) {\n          _this2.setState({\n            isOpenDeleteForm: isOpen\n          });\n        },\n        model: this.model,\n        onSubmitForm: function onSubmitForm(res) {\n          _this2._onSubmitForm(res);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }), React.createElement(MyForm, {\n        width: \"45%\",\n        model: this.model,\n        isOpen: this.state.isOpenForm,\n        onToggle: function onToggle(isOpen) {\n          _this2.setState({\n            isOpenForm: isOpen\n          });\n        },\n        data: this._curInfo,\n        receiptType: this.state.receiptType,\n        typeAction: this.state.typeAction,\n        onSubmitForm: function onSubmitForm(res) {\n          _this2._onSubmitForm(res);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }), React.createElement(PrintForm, {\n        width: \"60%\",\n        name: \"Print\",\n        isOpen: this.state.isOpenPrintForm,\n        onToggle: function onToggle(isOpen) {\n          _this2.setState({\n            isOpenPrintForm: isOpen\n          });\n        },\n        data: this._curInfo,\n        companyInfo: this.state.companyInfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }), React.createElement(BenGrid, {\n        onBtnEdit: function onBtnEdit(data) {\n          _this2._doOpenModalUpdate();\n        },\n        onCellSelected: function onCellSelected(json) {\n          _this2._curInfo = json;\n        },\n        gridID: \"id\",\n        rowSelection: \"single\",\n        isRightTool: true,\n        height: \"77.5vh\",\n        nextColums: this.grid.colums,\n        rowData: this.grid.rowData,\n        model: this.model,\n        formStatus: this.state.status,\n        displayBtn: [],\n        customButton: React.createElement(ButtonGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289\n          },\n          __self: this\n        }, React.createElement(Button, {\n          onClick: function onClick() {\n            _this2._doOpenModal('pt');\n          },\n          className: \"btn btn-normal\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fa fa-plus-circle mr-5\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291\n          },\n          __self: this\n        }), \" T\\u1EA1o phi\\u1EBFu thu \"), React.createElement(Button, {\n          onClick: function onClick() {\n            _this2._doOpenModal('pc');\n          },\n          className: \"btn btn-normal\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fa fa-plus-circle mr-5\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292\n          },\n          __self: this\n        }), \" T\\u1EA1o phi\\u1EBFu chi \"), React.createElement(ButtonExpandList, {\n          onSelected: function onSelected(item) {\n            _this2._callAction(item);\n          },\n          data: this.state.actions,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294\n          },\n          __self: this\n        }), React.createElement(RankDatePicker, {\n          onChange: function onChange(rank) {\n            _this2._loadWithDate(rank);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297\n          },\n          __self: this\n        }), React.createElement(ButtonExpand, {\n          style: {\n            borderRight: 0\n          },\n          icon: \"fa-filter\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 299\n          },\n          __self: this\n        }, React.createElement(FormGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 301\n          },\n          __self: this\n        }, React.createElement(Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 302\n          },\n          __self: this\n        }, \" Lo\\u1EA1i Phi\\u1EBFu  \"), React.createElement(Input, {\n          type: \"select\",\n          onChange: function onChange(e) {\n            _this2._onChange('type', e.target.value);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 303\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          value: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 304\n          },\n          __self: this\n        }, \" T\\u1EA5t c\\u1EA3 \"), React.createElement(\"option\", {\n          value: \"pt\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305\n          },\n          __self: this\n        }, \" Phi\\u1EBFu thu \"), React.createElement(\"option\", {\n          value: \"pc\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306\n          },\n          __self: this\n        }, \" Phi\\u1EBFu chi \"))), React.createElement(FormGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309\n          },\n          __self: this\n        }, React.createElement(Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310\n          },\n          __self: this\n        }, \" H\\xECnh th\\u1EE9c T.T \"), React.createElement(SelectList, {\n          onChange: function onChange(e) {\n            _this2._onChange('acc_type', e.target.value);\n          },\n          name: \"T\\u1EA5t c\\u1EA3\",\n          rows: BILL_ACC_TYPES,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311\n          },\n          __self: this\n        })))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return CashFlowView;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return _defineProperty({}, MODE, state[MODE]);\n};\n\nexport default connect(mapStateToProps)(CashFlowView);","map":{"version":3,"sources":["D:/actions/st_frontend/src/pages/Cashflow/View/index.js"],"names":["BILL_ACC_TYPES","Model","doGetModelInfo","moment","numeral","React","Component","connect","Button","ButtonGroup","FormGroup","Input","Label","BenGrid","BenMessage","ButtonExpand","ButtonExpandList","SelectList","RankDatePicker","MyForm","DeleteForm","PrintForm","MODE","CashFlowView","props","_curInfo","state","typeAction","onAction","status","isOpenForm","isOpenDeleteForm","isOpenPrintForm","receiptType","actions","code","icon","name","active","companyInfo","grid","colums","headerName","field","width","cellRenderer","params","data","type","value","format","humanDate","rowData","_setup","model","dispatch","setState","res","item","document","querySelector","click","JSON","stringify","_doOpenModalUpdate","isOpenProgressForm","title","message","jsonDate","formatDate","start","end","set","load","remove","newState","Object","assign","window","USERINFO","company_id","resComInfo","newProps","_whereStateChange","isOpen","_onSubmitForm","json","_doOpenModal","_callAction","rank","_loadWithDate","borderRight","e","_onChange","target","mapStateToProps","ownProps"],"mappings":"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","sourcesContent":["// DATA\r\nimport { BILL_ACC_TYPES } from '../../../config/app.config';\r\nimport Model from '../../../model/model';\r\n\r\n// HOOKS\r\nimport doGetModelInfo from '../../../hook/ultil/doGetModelInfo';\r\n\r\n// LIBS \r\nimport moment from 'moment';\r\nimport numeral from 'numeral' ; \r\n\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button, ButtonGroup, FormGroup, Input, Label } from 'reactstrap'; \r\n\r\n\r\nimport { BenGrid } from '../../../components/BenGrid2' ; \r\n\r\nimport BenMessage from '../../../components/BenMessage'; \r\nimport ButtonExpand from '../../../components/ButtonExpand';\r\nimport ButtonExpandList from '../../../components/ButtonExpandList'; \r\n\r\nimport SelectList from '../../../components/SelectList'; \r\nimport RankDatePicker from '../../../components/RankDatePicker'; \r\n\r\n\r\nimport MyForm from './Form'; \r\nimport DeleteForm from './DeleteForm';\r\nimport PrintForm from './PrintForm'\r\n\r\n\r\n\r\n\r\nconst MODE = 'bills';\r\nclass CashFlowView extends Component {\r\n\r\n    _curInfo = {}\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            typeAction:'',\r\n            onAction:'',\r\n            status:'',\r\n  \r\n            isOpenForm:false,\r\n            isOpenDeleteForm:false,  \r\n            isOpenPrintForm:false,\r\n\r\n            receiptType:'',\r\n            actions:[\r\n                {code:'update',icon:'fa-pencil',name:'Cập nhật phiếu'},\r\n                {code:'remove',icon:'fa-trash',name:'Huỷ phiếu',active:true},\r\n                {code:'print',icon:'fa-print',name:'In phiếu'}\r\n            ],\r\n            companyInfo:{}\r\n  \r\n        }\r\n\r\n        this.grid = {\r\n            colums:[\r\n              {headerName: \"Phiếu\", field: \"code\",width:140, \r\n                cellRenderer(params){\r\n                    return `<span class=\" finalcial-${params.data.type} text-uppercase\"> ${params.value} </span>`\r\n                }\r\n              },\r\n              {headerName: \"PTTT\", field: \"bill_acc_type\",width:100,\r\n                cellRenderer(params){\r\n                    return `<span class=\" finalcial-${params.value} text-uppercase\"> ${params.value}  </span>`\r\n                }\r\n              },\r\n              {headerName: \"Chứng từ\", field: \"ref_code\", width:180,\r\n                 cellRenderer(params){\r\n                     return `<span class=\"text-uppercase\"> ${params.value} </span>`\r\n                 }\r\n              },\r\n              {headerName: \"Đối tượng\", field: \"person_name\",width:300},\r\n              {headerName: \"Số tiền\", field: \"total\",width:140, cellRenderer(params){ return numeral(params.value).format('0,0')+' đ' } },\r\n              {headerName: \"Giá trị\", field:\"total_before\",width:140,cellRenderer(params){ return numeral(params.value).format('0,0')+' đ' }},  \r\n              {headerName: \"Tài khoản\", field: \"bill_acc_name\",width:240},\r\n              {headerName: \"Người tạo\", field: \"creator\",width:160},\r\n              {headerName: \"Ngày\", field: \"date_created\",width:140,\r\n                  cellRenderer(params){\r\n                      const humanDate = moment(params.value).format('YYYY-MM-DD');\r\n                      return humanDate;\r\n                  }\r\n              },\r\n              {\r\n                  headerName:\"Điều chỉnh\",field:\"date_modified\",width:140,\r\n                  cellRenderer(params){\r\n                    const humanDate =  params.value !== null ? moment(params.value).format('YYYY-MM-DD') : '' ;\r\n                    return humanDate;\r\n                  }\r\n              }\r\n      \r\n            ],\r\n            rowData: []\r\n        }\r\n\r\n        this._setup(); \r\n\r\n\r\n\r\n    }\r\n\r\n    _setup(){\r\n        this.model = new Model(MODE,this.props.dispatch);\r\n    }\r\n\r\n    _doOpenModalUpdate(){\r\n        \r\n\r\n\r\n        this.setState({\r\n            receiptType:this._curInfo.type,\r\n            isOpenForm:true,\r\n            typeAction:'put'\r\n        });\r\n    }\r\n    _doOpenModal(receiptType){\r\n\r\n        this.setState({\r\n            receiptType:receiptType,\r\n            isOpenForm:true,\r\n            typeAction:'post'\r\n        });\r\n\r\n        \r\n\r\n\r\n    }\r\n    _onSubmitForm(res){\r\n        if(res.name==='success' || res.name==='ok'){\r\n           this._curInfo = {}\r\n\r\n           this.setState({\r\n               isOpenForm:false,\r\n               isOpenDeleteForm:false,\r\n               typeAction:'',\r\n               receiptType:'',\r\n               status:res.name\r\n           });\r\n\r\n        }\r\n    }\r\n\r\n    _callAction(item){\r\n        document.querySelector('body').click();\r\n        \r\n        if(JSON.stringify(this._curInfo)!=='{}'){\r\n            switch(item.code){\r\n\r\n                case 'update':\r\n                    this._doOpenModalUpdate() ; \r\n                break;\r\n\r\n                case 'remove':\r\n                    this.setState({\r\n                        isOpenDeleteForm:true\r\n                    });\r\n                \r\n                break ;\r\n\r\n                case 'progress':\r\n                    this.setState({\r\n                        isOpenProgressForm:true\r\n                    }); \r\n                break ;\r\n\r\n                case 'print':\r\n                    this.setState({\r\n                        isOpenPrintForm:true\r\n                    });\r\n\r\n                break;\r\n        \r\n            }\r\n        }else{ \r\n            BenMessage({\r\n            title:'Thông báo',\r\n            message:'Vui lòng chọn chọn dữ liệu cần xử lý '\r\n            }) ;\r\n        }\r\n    }\r\n\r\n    _loadWithDate(jsonDate){\r\n        const formatDate = {\r\n            start: moment(jsonDate.start).format('YYYY-MM-DD'),\r\n            end:moment(jsonDate.end).format('YYYY-MM-DD')\r\n         }\r\n        this.model.set('paginate',{\r\n            ...formatDate\r\n        });\r\n\r\n        this.model.load();\r\n        \r\n    }\r\n    _onChange(field,value){\r\n\r\n        if(value!==''){\r\n            this.model.set('paginate',{\r\n              [field]:value\r\n            });\r\n        }else{ this.model.remove(field) }\r\n          \r\n        this.model.load(); \r\n    }\r\n\r\n    /* WHERE*/\r\n    _whereStateChange(newState){\r\n        this.setState(Object.assign(this.state,newState));\r\n    }\r\n\r\n    async componentDidMount(){\r\n        this.model.load();\r\n\r\n        // LOAD COMPANY INFO\r\n        const resComInfo = await doGetModelInfo('companies',window.USERINFO.company_id);\r\n        if(resComInfo.name==='success'){\r\n            this.setState({\r\n                companyInfo:resComInfo.data\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n    componentWillReceiveProps(newProps){\r\n        this.grid.rowData = newProps[MODE]['list'];\r\n\r\n        // CONNECT REDUX STATE \r\n        this._whereStateChange(newProps[MODE]['state']);\r\n    }\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"animated fadeIn\">\r\n                <div className=\"blank-app \">\r\n                        <DeleteForm  \r\n                            data={this._curInfo}\r\n                            isOpen={ this.state.isOpenDeleteForm }\r\n                            onToggle={(isOpen)=>{ this.setState({isOpenDeleteForm:isOpen}) }}\r\n                            model={this.model}\r\n                            onSubmitForm={(res)=>{ this._onSubmitForm(res) }}\r\n                        />\r\n                        \r\n                        <MyForm \r\n                            width=\"45%\"   \r\n                            model={this.model}\r\n                            isOpen={ this.state.isOpenForm }\r\n                            onToggle={ (isOpen)=>{  this.setState({isOpenForm:isOpen}) }}\r\n                            data={ this._curInfo }\r\n                            receiptType={this.state.receiptType}\r\n                            typeAction={this.state.typeAction}\r\n                            onSubmitForm={ (res)=>{ this._onSubmitForm(res) }}\r\n                        />\r\n                        <PrintForm \r\n                            \r\n                            width=\"60%\"\r\n                            name=\"Print\"\r\n                            isOpen={this.state.isOpenPrintForm}\r\n                            onToggle={(isOpen)=>{ this.setState({isOpenPrintForm:isOpen}) }}\r\n                            data={this._curInfo}\r\n                            companyInfo={this.state.companyInfo}\r\n\r\n                        />\r\n                        <BenGrid\r\n\r\n                            onBtnEdit={(data)=>{ this._doOpenModalUpdate()  }}\r\n                            \r\n                            onCellSelected={(json)=>{ this._curInfo = json  }}\r\n        \r\n                            gridID='id'\r\n                            rowSelection='single'\r\n        \r\n                            isRightTool={ true }\r\n                            height=\"77.5vh\"\r\n        \r\n                            nextColums={ this.grid.colums }\r\n                            rowData={this.grid.rowData}\r\n                            model={ this.model }\r\n                            formStatus={ this.state.status }\r\n\r\n                            displayBtn={[]}\r\n\r\n                            customButton={\r\n                                <ButtonGroup>\r\n                                    \r\n                                    <Button onClick={()=>{ this._doOpenModal('pt') }} className=\"btn btn-normal\"><i className=\"fa fa-plus-circle mr-5\"></i> Tạo phiếu thu </Button>\r\n                                    <Button onClick={()=>{ this._doOpenModal('pc') }} className=\"btn btn-normal\"><i className=\"fa fa-plus-circle mr-5\"></i> Tạo phiếu chi </Button>\r\n                                    \r\n                                    <ButtonExpandList onSelected={(item)=>{  this._callAction(item) }} data={ this.state.actions } />\r\n                                    \r\n                                    \r\n                                    <RankDatePicker onChange={(rank)=>{ this._loadWithDate(rank) }} />\r\n                                    \r\n                                    <ButtonExpand style={{borderRight:0}}  icon=\"fa-filter\">\r\n                                        \r\n                                        <FormGroup>\r\n                                            <Label> Loại Phiếu  </Label>\r\n                                            <Input type=\"select\" onChange={(e)=>{ this._onChange('type',e.target.value) }}>\r\n                                                <option value=\"\"> Tất cả </option>\r\n                                                <option value=\"pt\"> Phiếu thu </option>\r\n                                                <option value=\"pc\"> Phiếu chi </option>\r\n                                            </Input>\r\n                                        </FormGroup>\r\n                                        <FormGroup>\r\n                                            <Label> Hình thức T.T </Label>\r\n                                            <SelectList onChange={(e)=>{ this._onChange('acc_type',e.target.value) }} name=\"Tất cả\" rows={ BILL_ACC_TYPES } />\r\n\r\n                                        </FormGroup>\r\n\r\n                                    </ButtonExpand>\r\n                                    \r\n                                </ButtonGroup>\r\n                            \r\n                            }\r\n                            \r\n                        />\r\n                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        [MODE]: state[MODE]\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CashFlowView);"]},"metadata":{},"sourceType":"module"}