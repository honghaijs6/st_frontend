{"ast":null,"code":"import _objectSpread from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\n\n/*\r\naction = {\r\n  type:'ACTION_TYPE',\r\n  model:Model,\r\n  data:{}\r\n  id:0\r\n}\r\n*/\nimport { myToast } from '../../hook/after';\nimport { USERS } from '../../model/model-mode';\nimport { USERS_NAME } from '../../model/model-name';\nvar MODE = USERS;\nvar NAME = USERS_NAME;\nvar iniState = {\n  mode: MODE,\n  name: NAME,\n  state: {\n    onAction: '',\n    // function call name\n    typeAction: '',\n    // refer to model type action : post - put - update - delete \n    status: '' // refer to form status \n\n  },\n  list: [],\n  info: {},\n  userRoles: []\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : iniState;\n  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  switch (action.type) {\n    // SAVE USER INFO \n    case 'SAVE_USER':\n      return _objectSpread({}, state, {\n        info: action.info\n      });\n      break;\n\n    case 'SAVE_USER_ROLE':\n      return _objectSpread({}, state, {\n        userRoles: action.userRoles\n      });\n      break;\n\n    case 'STATE-' + MODE:\n      return _objectSpread({}, state, {\n        state: action.state\n      });\n      break;\n\n    /* PROACTIVE : DATA */\n\n    case 'GET-' + MODE:\n      return _objectSpread({}, state, {\n        list: action.list\n      });\n      break;\n\n    case 'POST-' + MODE:\n      myToast('post', state);\n      return _objectSpread({}, state, {\n        list: action.list\n      });\n      break;\n\n    case 'PUT-' + MODE:\n      myToast('put', state);\n      return _objectSpread({}, state, {\n        list: action.list\n      });\n      break;\n\n    case 'DELETE-' + MODE:\n      myToast('delete', state);\n      return _objectSpread({}, state, {\n        list: action.list\n      });\n      break;\n\n    /* PASSIVE DATA : realtime received on listenServer  */\n\n    case 'reset-' + MODE:\n      return _objectSpread({}, state, {\n        list: action.list\n      });\n      break;\n\n    default:\n      return state;\n  }\n}\n;","map":{"version":3,"sources":["D:/actions/st_frontend/src/redux/reducers/reducer-user.js"],"names":["myToast","USERS","USERS_NAME","MODE","NAME","iniState","mode","name","state","onAction","typeAction","status","list","info","userRoles","action","type"],"mappings":";;AACA;;;;;;;;AAUA,SAASA,OAAT,QAAwB,kBAAxB;AAGA,SAASC,KAAT,QAAsB,wBAAtB;AACA,SAASC,UAAT,QAA2B,wBAA3B;AAGA,IAAMC,IAAI,GAAGF,KAAb;AACA,IAAMG,IAAI,GAAGF,UAAb;AAEA,IAAMG,QAAQ,GAAG;AACfC,EAAAA,IAAI,EAACH,IADU;AAEfI,EAAAA,IAAI,EAACH,IAFU;AAGfI,EAAAA,KAAK,EAAC;AACJC,IAAAA,QAAQ,EAAC,EADL;AACW;AACfC,IAAAA,UAAU,EAAC,EAFP;AAEW;AACfC,IAAAA,MAAM,EAAC,EAHH,CAGM;;AAHN,GAHS;AAQfC,EAAAA,IAAI,EAAC,EARU;AASfC,EAAAA,IAAI,EAAC,EATU;AAUfC,EAAAA,SAAS,EAAC;AAVK,CAAjB;AAeA,eAAe,YAAuC;AAAA,MAA9BN,KAA8B,uEAAtBH,QAAsB;AAAA,MAAZU,MAAY,uEAAH,EAAG;;AACpD,UAAOA,MAAM,CAACC,IAAd;AAGE;AACA,SAAK,WAAL;AACE,+BACKR,KADL;AAEEK,QAAAA,IAAI,EAACE,MAAM,CAACF;AAFd;AAIF;;AAEA,SAAK,gBAAL;AACE,+BACKL,KADL;AAEEM,QAAAA,SAAS,EAACC,MAAM,CAACD;AAFnB;AAIF;;AAEA,SAAK,WAASX,IAAd;AACG,+BACKK,KADL;AAEEA,QAAAA,KAAK,EAACO,MAAM,CAACP;AAFf;AAKH;;AAEA;;AACA,SAAK,SAAOL,IAAZ;AAEE,+BACKK,KADL;AAEEI,QAAAA,IAAI,EAACG,MAAM,CAACH;AAFd;AAKF;;AAEA,SAAK,UAAQT,IAAb;AAEEH,MAAAA,OAAO,CAAC,MAAD,EAAQQ,KAAR,CAAP;AAIA,+BACKA,KADL;AAEEI,QAAAA,IAAI,EAACG,MAAM,CAACH;AAFd;AAKF;;AAEA,SAAK,SAAOT,IAAZ;AAEEH,MAAAA,OAAO,CAAC,KAAD,EAAOQ,KAAP,CAAP;AAGA,+BACKA,KADL;AAEEI,QAAAA,IAAI,EAACG,MAAM,CAACH;AAFd;AAKF;;AAEA,SAAK,YAAUT,IAAf;AAGEH,MAAAA,OAAO,CAAC,QAAD,EAAUQ,KAAV,CAAP;AAGA,+BACKA,KADL;AAEEI,QAAAA,IAAI,EAACG,MAAM,CAACH;AAFd;AAKF;;AAEA;;AACA,SAAK,WAAST,IAAd;AAEE,+BACKK,KADL;AAEEI,QAAAA,IAAI,EAACG,MAAM,CAACH;AAFd;AAIF;;AAGA;AAEE,aAAOJ,KAAP;AAtFJ;AAyFD;AAAA","sourcesContent":["\r\n/*\r\naction = {\r\n  type:'ACTION_TYPE',\r\n  model:Model,\r\n  data:{}\r\n  id:0\r\n}\r\n*/\r\n\r\n\r\nimport { myToast } from '../../hook/after';\r\n\r\n\r\nimport { USERS } from '../../model/model-mode';\r\nimport { USERS_NAME } from '../../model/model-name';\r\n\r\n\r\nconst MODE = USERS;\r\nconst NAME = USERS_NAME;\r\n\r\nconst iniState = {\r\n  mode:MODE,\r\n  name:NAME,\r\n  state:{\r\n    onAction:'',   // function call name\r\n    typeAction:'', // refer to model type action : post - put - update - delete \r\n    status:'' // refer to form status \r\n  },\r\n  list:[],\r\n  info:{},\r\n  userRoles:[]\r\n};\r\n\r\n\r\n\r\nexport default function(state = iniState ,action = {}){\r\n  switch(action.type){\r\n\r\n\r\n    // SAVE USER INFO \r\n    case 'SAVE_USER':\r\n      return {\r\n        ...state,\r\n        info:action.info\r\n      }\r\n    break;\r\n\r\n    case 'SAVE_USER_ROLE':\r\n      return {\r\n        ...state,\r\n        userRoles:action.userRoles\r\n      }\r\n    break;\r\n\r\n    case 'STATE-'+MODE:\r\n       return {\r\n         ...state,\r\n         state:action.state\r\n\r\n       }\r\n    break;\r\n\r\n    /* PROACTIVE : DATA */\r\n    case 'GET-'+MODE:\r\n\r\n      return {\r\n        ...state,\r\n        list:action.list\r\n      }\r\n\r\n    break ;\r\n\r\n    case 'POST-'+MODE:\r\n\r\n      myToast('post',state)\r\n\r\n\r\n\r\n      return {\r\n        ...state,\r\n        list:action.list\r\n      }\r\n\r\n    break ;\r\n\r\n    case 'PUT-'+MODE:\r\n\r\n      myToast('put',state);\r\n\r\n\r\n      return {\r\n        ...state,\r\n        list:action.list\r\n      }\r\n\r\n    break ;\r\n\r\n    case 'DELETE-'+MODE:\r\n\r\n\r\n      myToast('delete',state);\r\n\r\n\r\n      return {\r\n        ...state,\r\n        list:action.list\r\n      }\r\n\r\n    break ;\r\n\r\n    /* PASSIVE DATA : realtime received on listenServer  */\r\n    case 'reset-'+MODE:\r\n\r\n      return {\r\n        ...state,\r\n        list:action.list\r\n      }\r\n    break ;\r\n\r\n\r\n    default:\r\n\r\n      return state;\r\n\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}