{"ast":null,"code":"import _objectSpread from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\actions\\\\st_frontend\\\\src\\\\components\\\\ButtonImportSerial.js\";\n// DATA \nimport Model from '../model/model'; // LIBS \n\nimport XLSX from 'xlsx';\nimport React, { Component } from 'react';\nimport { Input, Button, Row, Col } from 'reactstrap';\nimport BenMessage from './BenMessage';\nimport ViewModal from './ViewModal';\nimport BenTable from './BenTable';\n\nArray.prototype.equals = function (array) {\n  // if the other array is a falsy value, return\n  if (!array) return false; // compare lengths - can save a lot of time \n\n  if (this.length != array.length) return false;\n\n  for (var i = 0, l = this.length; i < l; i++) {\n    // Check if we have nested arrays\n    if (this[i] instanceof Array && array[i] instanceof Array) {\n      // recurse into the nested arrays\n      if (!this[i].equals(array[i])) return false;\n    } else if (this[i] != array[i]) {\n      // Warning - two different object instances will never be equal: {x:20} != {x:20}\n      return false;\n    }\n  }\n\n  return true;\n};\n\nvar ButtonImportSerial =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ButtonImportSerial, _Component);\n\n  function ButtonImportSerial(props) {\n    var _this;\n\n    _classCallCheck(this, ButtonImportSerial);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ButtonImportSerial).call(this, props));\n    _this._index = 0;\n    _this._percentage = 0;\n\n    _this._onSubmit = function () {\n      if (_this.props.total === _this.grid.rowData.length) {\n        _this._index = 0;\n        _this._percentage = 0;\n\n        _this._uploadNow();\n      } else {\n        BenMessage({\n          message: 'Số lượng serial/imei không khớp'\n        });\n      }\n    };\n\n    _this.state = {\n      status: '',\n      columns: props.columns,\n      isOpen: false,\n      data_fail: [],\n      msg: ''\n    };\n    _this.grid = {\n      colums: [],\n      rowData: []\n    };\n\n    _this._setup();\n\n    return _this;\n  }\n\n  _createClass(ButtonImportSerial, [{\n    key: \"_setup\",\n    value: function _setup() {\n      var _this2 = this;\n\n      // FORMAT GRID COLUM\n      this.state.columns.map(function (item) {\n        _this2.grid.colums.push({\n          headerName: item,\n          field: item,\n          width: '140px'\n        });\n      });\n      this.model = new Model(this.props.strModel);\n    }\n  }, {\n    key: \"_openForm\",\n    value: function _openForm() {\n      var _this3 = this;\n\n      this.grid.rowData = this.grid.rowData.map(function (item) {\n        return _objectSpread({\n          code: item.code\n        }, _this3.props.fields);\n      });\n      this.setState({\n        isOpen: true\n      });\n    }\n  }, {\n    key: \"_compareColumns\",\n    value: function _compareColumns() {\n      var columns = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      return columns.equals(this.state.columns);\n    }\n  }, {\n    key: \"_handleFile\",\n    value: function _handleFile(e) {\n      var _this4 = this;\n\n      if (e.target.files && e.target.files.length > 0) {\n        var msg = 'Định dạng cột trong tập tin Excel không hợp lệ';\n        var reader = new FileReader();\n        reader.readAsArrayBuffer(e.target.files[0]);\n\n        reader.onload = function (e) {\n          var data = new Uint8Array(reader.result);\n          var wb = XLSX.read(data, {\n            type: 'array'\n          });\n          var sheetName = wb.SheetNames[0];\n          var worksheet = wb.Sheets[sheetName];\n          var list = XLSX.utils.sheet_to_json(worksheet, {\n            raw: true\n          });\n\n          if (list.length > 0) {\n            if (_this4._compareColumns(Object.keys(list[0]))) {\n              _this4.grid.rowData = list;\n\n              _this4._openForm();\n\n              msg = '';\n            }\n          }\n\n          if (msg !== '') {\n            BenMessage({\n              message: msg\n            });\n          }\n        };\n      }\n    }\n  }, {\n    key: \"_uploadNow\",\n    value: function _uploadNow() {\n      var _this5 = this;\n\n      var data = this.grid.rowData[this._index];\n\n      if (this._index < this.grid.rowData.length) {\n        this.model.axios('post', data, function (res) {\n          if (res.name === 'ok' || res.name === 'success') {\n            _this5._index += 1;\n            _this5._percentage = _this5._index * 100 / _this5.grid.rowData.length;\n\n            _this5.setState({\n              status: res.name,\n              msg: res.name\n            });\n\n            _this5._uploadNow();\n          } else {\n            var data_fail = _this5.state.data_fail;\n            data_fail.push(data);\n\n            _this5.setState({\n              data_fail: data_fail,\n              msg: _this5.state.data_fail.length + ' ' + res.message\n            });\n\n            _this5._index += 1;\n            _this5._percentage = _this5._index * 100 / _this5.grid.rowData.length;\n\n            _this5._uploadNow();\n          }\n        });\n      } else {\n        if (this.state.msg === 'success' || this.state.msg === 'ok') {\n          this.setState({\n            status: 'finish'\n          });\n          this.props.onComplete(true);\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      return React.createElement(Button, {\n        style: this.props.style,\n        className: \"btn btn-normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(ViewModal, {\n        width: this.props.width,\n        name: this.props.strModel + ' : ' + this.grid.rowData.length,\n        isOpen: this.state.isOpen,\n        onToggle: function onToggle(isOpen) {\n          _this6.setState({\n            isOpen: isOpen\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"view-modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(BenTable, {\n        height: this.props.height,\n        grid: this.grid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          marginTop: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          display: this.state.status === '' ? 'none' : 'block'\n        },\n        className: \"progress progress-sm \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"progress-bar progress-bar-success progress-bar-striped\",\n        style: {\n          width: this._percentage + '%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \" \", Math.floor(this._percentage) + '%', \" Complete\"))))), React.createElement(Row, {\n        style: {\n          marginTop: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this._onSubmit,\n        className: \"btn btn-normal bg-green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-cloud-upload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }), \" T\\u1EA3i l\\xEAn\")), React.createElement(Col, {\n        md: 7,\n        style: {\n          margin: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"text-red font-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, \" \", this.state.msg, \" \")), React.createElement(Col, {\n        md: 2,\n        className: \"font-12\",\n        style: {\n          textAlign: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, this.state.data_fail.length + '/' + this.grid.rowData.length))))), React.createElement(\"i\", {\n        className: this.props.icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }), \" \", this.props.title, React.createElement(Input, {\n        accept: \".xlsx\",\n        style: {\n          width: '100%',\n          height: 50,\n          position: 'absolute',\n          top: 0,\n          left: 15,\n          opacity: 0\n        },\n        id: \"photo\",\n        type: \"file\",\n        onChange: function onChange(e) {\n          _this6._handleFile(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ButtonImportSerial;\n}(Component);\n\nButtonImportSerial.defaultProps = {\n  onComplete: function onComplete(isSuccess) {},\n  total: 0,\n  strModel: 'products',\n  columns: ['code', 'name', 'type', 'supplier_codes', 'price_1', 'price_2', 'price_3', 'price_4', 'is_serial'],\n  fields: {\n    product_code: 'vt300'\n  },\n  icon: \"fa fa-cloud-upload mr-5\",\n  title: '.xlsx',\n  width: '81%',\n  height: '55vh'\n};\nexport default ButtonImportSerial;","map":{"version":3,"sources":["D:/actions/st_frontend/src/components/ButtonImportSerial.js"],"names":["Model","XLSX","React","Component","Input","Button","Row","Col","BenMessage","ViewModal","BenTable","Array","prototype","equals","array","length","i","l","ButtonImportSerial","props","_index","_percentage","_onSubmit","total","grid","rowData","_uploadNow","message","state","status","columns","isOpen","data_fail","msg","colums","_setup","map","item","push","headerName","field","width","model","strModel","code","fields","setState","e","target","files","reader","FileReader","readAsArrayBuffer","onload","data","Uint8Array","result","wb","read","type","sheetName","SheetNames","worksheet","Sheets","list","utils","sheet_to_json","raw","_compareColumns","Object","keys","_openForm","axios","res","name","onComplete","style","height","marginTop","display","Math","floor","margin","textAlign","icon","title","position","top","left","opacity","_handleFile","defaultProps","isSuccess","product_code"],"mappings":"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","sourcesContent":["// DATA \r\nimport Model from '../model/model';\r\n// LIBS \r\nimport XLSX from 'xlsx';\r\n\r\n\r\nimport React, { Component } from 'react';\r\nimport { Input, Button, Row, Col } from 'reactstrap';\r\n\r\n\r\n\r\nimport BenMessage from './BenMessage'; \r\nimport ViewModal  from './ViewModal';\r\nimport BenTable from './BenTable' ; \r\n\r\n\r\n\r\nArray.prototype.equals = function (array) {\r\n    // if the other array is a falsy value, return\r\n    if (!array)\r\n        return false;\r\n\r\n    // compare lengths - can save a lot of time \r\n    if (this.length != array.length)\r\n        return false;\r\n\r\n    for (var i = 0, l=this.length; i < l; i++) {\r\n        // Check if we have nested arrays\r\n        if (this[i] instanceof Array && array[i] instanceof Array) {\r\n            // recurse into the nested arrays\r\n            if (!this[i].equals(array[i]))\r\n                return false;       \r\n        }           \r\n        else if (this[i] != array[i]) { \r\n            // Warning - two different object instances will never be equal: {x:20} != {x:20}\r\n            return false;   \r\n        }           \r\n    }       \r\n    return true;\r\n}\r\n\r\n\r\nclass ButtonImportSerial extends Component {\r\n\r\n    _index = 0 ;\r\n    _percentage = 0 ;\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            status:'',\r\n            columns:props.columns,\r\n\r\n            isOpen:false,\r\n            data_fail:[],\r\n            msg:''\r\n        }\r\n\r\n        this.grid = {\r\n            colums:[\r\n            ],\r\n            rowData:[]\r\n        }\r\n\r\n        this._setup();\r\n    }\r\n\r\n    _setup(){\r\n\r\n        // FORMAT GRID COLUM\r\n        this.state.columns.map((item)=>{\r\n            this.grid.colums.push({\r\n                headerName:item,\r\n                field:item,\r\n                width:'140px'\r\n            });\r\n        });\r\n\r\n        this.model = new Model(this.props.strModel);\r\n\r\n\r\n    }\r\n\r\n    _openForm(){\r\n\r\n        this.grid.rowData = this.grid.rowData.map((item)=>{\r\n            return {\r\n                code:item.code,\r\n                ...this.props.fields\r\n                \r\n            }\r\n            \r\n        });\r\n        \r\n        this.setState({\r\n            isOpen:true\r\n        });\r\n\r\n    }\r\n    _compareColumns(columns=[]){\r\n        \r\n        return columns.equals(this.state.columns)\r\n    }\r\n    _handleFile(e){\r\n        if (e.target.files && e.target.files.length > 0) {\r\n            \r\n            let msg = 'Định dạng cột trong tập tin Excel không hợp lệ';\r\n\r\n            const reader = new FileReader();\r\n            reader.readAsArrayBuffer(e.target.files[0]);\r\n    \r\n            reader.onload = (e)=>{\r\n\r\n              const data = new Uint8Array(reader.result);\r\n              const wb = XLSX.read(data,{type:'array'});\r\n    \r\n              const sheetName  = wb.SheetNames[0];\r\n              const worksheet = wb.Sheets[sheetName];\r\n              \r\n              let list = XLSX.utils.sheet_to_json(worksheet,{raw:true});\r\n              \r\n              if(list.length>0){\r\n                if(this._compareColumns(Object.keys(list[0]))){\r\n                    this.grid.rowData = list ; \r\n                    this._openForm() ; \r\n                    msg = '';\r\n                }\r\n              }\r\n\r\n\r\n              if(msg!==''){\r\n                 BenMessage({\r\n                     message:msg\r\n                 });\r\n              }\r\n              \r\n    \r\n          }\r\n        }\r\n    }\r\n    \r\n    _uploadNow(){\r\n\r\n        const data = this.grid.rowData[this._index]; \r\n        \r\n\r\n        if(this._index < this.grid.rowData.length){\r\n\r\n            this.model.axios('post',data,(res)=>{\r\n\r\n                if(res.name==='ok' || res.name === 'success'){\r\n\r\n                    this._index +=1 ;\r\n                    this._percentage = (this._index * 100)/this.grid.rowData.length;\r\n                    \r\n                    this.setState({\r\n                        status:res.name,\r\n                        msg:res.name\r\n                    });\r\n                    this._uploadNow();\r\n                    \r\n                }else{  \r\n\r\n                    let data_fail = this.state.data_fail; \r\n                    data_fail.push(data); \r\n\r\n                    this.setState({\r\n                        data_fail:data_fail,\r\n                        msg: this.state.data_fail.length +' '+ res.message\r\n                    });\r\n\r\n                    this._index +=1 ;\r\n                    this._percentage = (this._index * 100)/this.grid.rowData.length;\r\n                    this._uploadNow();\r\n\r\n                    \r\n\r\n                }\r\n            })\r\n            \r\n        }else{ \r\n\r\n            if(this.state.msg==='success' || this.state.msg ==='ok'){\r\n                \r\n                this.setState({\r\n                    status:'finish'\r\n                });\r\n                this.props.onComplete(true);\r\n            }    \r\n\r\n            \r\n        }\r\n        \r\n    }\r\n    _onSubmit = ()=>{\r\n        \r\n        if(this.props.total === this.grid.rowData.length ){\r\n            this._index = 0 ;\r\n            this._percentage = 0 ;\r\n            this._uploadNow();\r\n        }else{\r\n            BenMessage({\r\n                message:'Số lượng serial/imei không khớp'\r\n            });\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Button style={this.props.style} className=\"btn btn-normal\">\r\n                <ViewModal  \r\n                    width={this.props.width}\r\n                    name={this.props.strModel+' : '+this.grid.rowData.length}\r\n                    isOpen={ this.state.isOpen }\r\n                    onToggle={(isOpen)=>{  this.setState({isOpen:isOpen})  }}\r\n                >\r\n                    <div className=\"view-modal-body\">\r\n                        <BenTable\r\n                            height={this.props.height}\r\n                            grid={this.grid}\r\n                        />\r\n                        <div style={{marginTop:20}}>\r\n                            \r\n                            <Row>\r\n                                <Col md={12}>\r\n                                    <div style={{display: this.state.status ==='' ? 'none':'block' }} className=\"progress progress-sm \">\r\n                                        <div \r\n                                            className=\"progress-bar progress-bar-success progress-bar-striped\" \r\n                                            style={{width:  this._percentage+'%' }}>\r\n                                            <span> { Math.floor(this._percentage) + '%' } Complete</span>\r\n                                        </div>\r\n                                    </div>   \r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row style={{marginTop:30}}>\r\n                                <Col md={3}>\r\n                                    <Button onClick={ this._onSubmit } className=\"btn btn-normal bg-green\">\r\n                                        <i className=\"fa fa-cloud-upload\"></i> Tải lên\r\n                                    </Button>\r\n                                </Col>\r\n                                <Col md={7} style={{\r\n                                    margin:'auto'\r\n                                }}>\r\n                                    <span className=\"text-red font-12\"> { this.state.msg } </span>\r\n                                </Col>\r\n                                <Col md={2} className=\"font-12\" style={{textAlign:'right'}}>\r\n                                    {   this.state.data_fail.length +'/'+this.grid.rowData.length }\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n                </ViewModal>\r\n\r\n                <i className={this.props.icon}></i> { this.props.title }    \r\n                <Input \r\n                    accept=\".xlsx\"\r\n                    style={{width: '100%',height: 50,position: 'absolute', top:0, left: 15, opacity: 0}} id=\"photo\" type=\"file\" onChange={ (e)=> { this._handleFile(e) } } >\r\n                </Input>\r\n            </Button>            \r\n        );\r\n    }\r\n}\r\n\r\nButtonImportSerial.defaultProps = {\r\n\r\n    onComplete:(isSuccess)=>{},\r\n    total:0,\r\n    strModel:'products',\r\n    columns:['code','name','type','supplier_codes','price_1','price_2','price_3','price_4','is_serial'],\r\n    fields:{\r\n        product_code:'vt300'\r\n    },\r\n    icon:\"fa fa-cloud-upload mr-5\",\r\n    title:'.xlsx',\r\n    width:'81%',\r\n    height:'55vh'\r\n}\r\n\r\nexport default ButtonImportSerial;"]},"metadata":{},"sourceType":"module"}