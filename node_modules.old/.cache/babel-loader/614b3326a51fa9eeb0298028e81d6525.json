{"ast":null,"code":"import Model from '../../model/model';\nexport default function () {\n  var MODE = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return new Promise(function (resolve, reject) {\n    if (MODE !== '') {\n      var modeler = new Model(MODE);\n      modeler.set('method', {\n        name: 'listAll',\n        params: 'all'\n      });\n      modeler.set('paginate', {\n        offset: 0,\n        p: 0,\n        max: 6,\n        key: key,\n        sort_by: 'name',\n        sort_type: 'asc'\n      });\n      modeler.get(function (res) {\n        resolve(res);\n      });\n    } else {\n      resolve({\n        count: 0,\n        name: 'hook-erro',\n        rows: []\n      });\n    }\n  });\n}","map":{"version":3,"sources":["D:/actions/st_frontend/src/hook/ultil/doFindAll.js"],"names":["Model","MODE","key","Promise","resolve","reject","modeler","set","name","params","offset","p","max","sort_by","sort_type","get","res","count","rows"],"mappings":"AACA,OAAOA,KAAP,MAAkB,mBAAlB;AAEA,eAAe,YAAwB;AAAA,MAAfC,IAAe,uEAAV,EAAU;AAAA,MAAPC,GAAO,uEAAH,EAAG;AAErC,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAkB;AACnC,QAAGJ,IAAI,KAAG,EAAV,EAAa;AAEX,UAAMK,OAAO,GAAG,IAAIN,KAAJ,CAAUC,IAAV,CAAhB;AAEAK,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqB;AACnBC,QAAAA,IAAI,EAAC,SADc;AAEnBC,QAAAA,MAAM,EAAC;AAFY,OAArB;AAKAH,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuB;AACrBG,QAAAA,MAAM,EAAC,CADc;AAErBC,QAAAA,CAAC,EAAC,CAFmB;AAGrBC,QAAAA,GAAG,EAAC,CAHiB;AAIrBV,QAAAA,GAAG,EAACA,GAJiB;AAKrBW,QAAAA,OAAO,EAAC,MALa;AAMrBC,QAAAA,SAAS,EAAC;AANW,OAAvB;AASAR,MAAAA,OAAO,CAACS,GAAR,CAAY,UAACC,GAAD,EAAO;AACjBZ,QAAAA,OAAO,CAACY,GAAD,CAAP;AACD,OAFD;AAID,KAtBD,MAsBK;AACHZ,MAAAA,OAAO,CAAC;AACNa,QAAAA,KAAK,EAAC,CADA;AAENT,QAAAA,IAAI,EAAC,WAFC;AAGNU,QAAAA,IAAI,EAAC;AAHC,OAAD,CAAP;AAKD;AACF,GA9BM,CAAP;AAgCD","sourcesContent":["\r\nimport Model from '../../model/model';\r\n \r\nexport default function(MODE='',key=''){\r\n\r\n  return new Promise((resolve,reject)=>{\r\n    if(MODE!==''){\r\n    \r\n      const modeler = new Model(MODE);\r\n      \r\n      modeler.set('method',{\r\n        name:'listAll',\r\n        params:'all'\r\n      });  \r\n  \r\n      modeler.set('paginate',{\r\n        offset:0,\r\n        p:0,\r\n        max:6,\r\n        key:key,\r\n        sort_by:'name', \r\n        sort_type:'asc' \r\n      });\r\n  \r\n      modeler.get((res)=>{\r\n        resolve(res);\r\n      })\r\n      \r\n    }else{\r\n      resolve({\r\n        count:0,\r\n        name:'hook-erro',\r\n        rows:[]\r\n      });\r\n    }\r\n  }) \r\n  \r\n}\r\n"]},"metadata":{},"sourceType":"module"}