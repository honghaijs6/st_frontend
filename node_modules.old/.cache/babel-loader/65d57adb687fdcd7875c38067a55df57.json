{"ast":null,"code":"import _defineProperty from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\actions\\\\st_frontend\\\\src\\\\pages\\\\Employee\\\\Role\\\\index.js\";\nimport Model from '../../../model/model';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Table } from 'reactstrap';\nimport { AppSwitch } from '@coreui/react';\nimport FormGroupUser from './FormGroupUser';\nvar MODE = 'roles';\nvar MODE_NAME = 'Vai trò';\nvar MODE_USER_ROLES = 'user_roles';\nvar MODE_GROUP_USERS = 'group_users';\n\nvar Role =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Role, _Component);\n\n  function Role(props) {\n    var _this;\n\n    _classCallCheck(this, Role);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Role).call(this, props));\n    _this._isInitData = false;\n    _this._curInfo = {};\n    _this.state = {\n      typeAction: '',\n      onAction: '',\n      status: '',\n      isOpenForm: false,\n      tab: 'role',\n      userRoles: [],\n      curGroupInfo: {}\n    };\n    _this.grid = {\n      colums: [{\n        headerName: \"STT\",\n        field: \"stt\",\n        width: '50px'\n      }, {\n        headerName: \"SID\",\n        field: \"id\",\n        width: '50px'\n      }, {\n        headerName: \"Mã\",\n        field: \"code\",\n        width: '180px'\n      }, {\n        headerName: \" Tính năng \",\n        field: \"name\",\n        width: '240px'\n      }, {\n        headerName: \"Root Admin\",\n        field: \"admin\",\n        width: '140px'\n      }],\n      rowData: []\n    };\n\n    _this._setup();\n\n    return _this;\n  }\n\n  _createClass(Role, [{\n    key: \"_setup\",\n    value: function _setup() {\n      this.model = new Model(MODE, this.props.dispatch);\n      this.moUserRoles = new Model(MODE_USER_ROLES);\n      this.moGroupUsers = new Model(MODE_GROUP_USERS); // SETUP FOR GET ALL RECORD HERE \n\n      this.model.set('paginate', {\n        offset: 0,\n        p: 0,\n        max: 'all',\n        sort_by: 'code',\n        sort_type: 'asc'\n      });\n    }\n  }, {\n    key: \"_listRoles\",\n    value: function _listRoles(group_id) {\n      var rets = [];\n      this.state.userRoles.map(function (rows) {\n        rows.map(function (item2) {\n          if (parseInt(item2.id) === parseInt(group_id)) {\n            rets.push(item2);\n          }\n        });\n      });\n      return rets;\n    }\n  }, {\n    key: \"_detectRoles\",\n    value: function _detectRoles(group_id, role_id) {\n      var rets = this._listRoles(group_id);\n\n      var ret = false;\n      rets.map(function (item) {\n        if (parseInt(item.role_id) === parseInt(role_id)) {\n          ret = true;\n        }\n      });\n      return ret;\n    }\n  }, {\n    key: \"_loadGroupUserRoles\",\n    value: function _loadGroupUserRoles() {\n      var _this2 = this;\n\n      var url = '/listAll/all';\n      this.moGroupUsers.doCall(url, function (res) {\n        var data = res.data;\n\n        if (data.name === 'success') {\n          var rows = data.rows;\n          var object = {};\n          var result = [];\n          var newArr = []; // GET DUPLICATED GROUP_USER ID ;\n\n          rows.map(function (item) {\n            if (!object[item.id]) {\n              object[item.id] = 0;\n            }\n\n            object[item.id] += 1;\n          });\n          Object.keys(object).map(function (item) {\n            if (object[item] >= 1) {\n              result.push(item);\n            }\n          });\n          result.map(function (item) {\n            var arr = [];\n            rows.map(function (item2) {\n              if (parseInt(item) === parseInt(item2.id)) {\n                arr.push(item2);\n              }\n            });\n            newArr.push(arr);\n          }); //console.log(newArr);\n\n          _this2._fixColumRoles(newArr);\n\n          _this2.setState({\n            userRoles: newArr\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_openForm\",\n    value: function _openForm() {\n      var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'post';\n      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.setState({\n        isOpenForm: true,\n        typeAction: type,\n        curGroupInfo: data[0]\n      });\n    }\n  }, {\n    key: \"_onSubmitForm\",\n    value: function _onSubmitForm(res) {\n      if (res.name === 'success' || res.name === 'ok') {\n        this._curInfo = {};\n        this.setState({\n          isOpenForm: false,\n          typeAction: '',\n          receiptType: '',\n          status: res.name\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._loadGroupUserRoles();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      if (!this._isIniData) {\n        this.model.load();\n        this._isIniData = true;\n      }\n\n      this.grid.rowData = newProps[MODE]['list'] || []; // CONNECT REDUX STATE \n\n      this._whereStateChange(newProps[MODE]['state']);\n    }\n    /* WHERE*/\n\n  }, {\n    key: \"_whereStateChange\",\n    value: function _whereStateChange(newState) {\n      this.setState(Object.assign(this.state, newState));\n    }\n  }, {\n    key: \"_fixColumRoles\",\n    value: function _fixColumRoles(userRoles) {\n      var _this3 = this;\n\n      // GROUP BY : GROUP_USER_ID ;\n      this.grid.colums.length = 5;\n      userRoles.map(function (item) {\n        // detect colums\n        var isDup = false;\n\n        _this3.grid.colums.map(function (colum) {\n          if (colum.field === 'field-' + item[0]['id']) {\n            isDup = true;\n          }\n        });\n\n        if (!isDup) {\n          _this3.grid.colums.push({\n            headerName: React.createElement(\"a\", {\n              style: {\n                cursor: 'pointer'\n              },\n              onClick: function onClick() {\n                _this3._openForm('put', item);\n              },\n              className: \"text-red\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 222\n              },\n              __self: this\n            }, item[0]['group_name']),\n            field: \"field-\" + item[0]['id'],\n            width: '140px'\n          });\n        }\n      }); // ADD LASTEST COLUMS\n      // REMOVE LASTITEM - AND RE-ADD IT AGAIN \n\n      this.grid.colums.push({\n        headerName: React.createElement(\"a\", {\n          style: {\n            borderRadius: 12,\n            fontSize: 9\n          },\n          className: \"btn btn-xs btn-normal\",\n          onClick: function onClick() {\n            _this3._openForm('post');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"font-12 mr-5 fa fa-plus-circle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234\n          },\n          __self: this\n        }), \" Th\\xEAm nh\\xF3m ph\\xE2n quy\\u1EC1n \"),\n        field: \"field-button\",\n        width: '140px'\n      });\n    }\n  }, {\n    key: \"_toggleSetRoles\",\n    value: function _toggleSetRoles(isChecked, group_id, role_id) {\n      var _this4 = this;\n\n      if (isChecked) {\n        // remove user_roles : \n        var listRoles = this._listRoles(group_id); // GET user_role_id ; \n\n\n        var userRoleId = 0;\n        listRoles.map(function (item) {\n          if (parseInt(item.role_id) === parseInt(role_id)) {\n            userRoleId = item.user_roles_id;\n          }\n        });\n        this.moUserRoles.delete(userRoleId, function (data) {\n          if (data.name === 'success') {\n            _this4._loadGroupUserRoles();\n          }\n        });\n      } else {\n        this.moUserRoles.post({\n          role_id: role_id,\n          group_user_id: group_id\n        }, function (data) {\n          if (data.name === 'success') {\n            _this4._loadGroupUserRoles();\n          }\n        });\n      }\n    } // DELETE GROUP \n\n  }, {\n    key: \"_deleteGroup\",\n    value: function _deleteGroup(id) {\n      var _this5 = this;\n\n      this.moGroupUsers.delete(id, function (data) {\n        if (data.name === 'success') {\n          _this5._loadGroupUserRoles();\n\n          _this5.setState({\n            isOpenForm: false\n          });\n        }\n      });\n    } // groupName :''  - selectedUsers : [] \n\n  }, {\n    key: \"_submitGroup\",\n    value: function _submitGroup(state) {\n      var _this6 = this;\n\n      if (this.state.typeAction !== '') {\n        var data = {\n          name: state.groupName,\n          staff_on: state.selectedUsers\n        };\n\n        if (this.state.typeAction === 'put') {\n          data['id'] = state.id;\n        }\n\n        this.moGroupUsers.axios(this.state.typeAction, data, function (data) {\n          if (data.name === 'success') {\n            _this6._loadGroupUserRoles();\n\n            _this6.setState({\n              isOpenForm: false\n            });\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n\n      return React.createElement(\"div\", {\n        hidden: this.state.tab === this.props.onTab ? false : true,\n        style: {\n          padding: 30\n        },\n        className: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, React.createElement(FormGroupUser, {\n        width: \"600\",\n        isOpen: this.state.isOpenForm,\n        onToggle: function onToggle(isOpen) {\n          _this7.setState({\n            isOpenForm: isOpen\n          });\n        },\n        typeAction: this.state.typeAction,\n        onSubmit: function onSubmit(state) {\n          _this7._submitGroup(state);\n        },\n        curGroupInfo: this.state.curGroupInfo,\n        onDeleteGroup: function onDeleteGroup(id) {\n          _this7._deleteGroup(id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }), React.createElement(Table, {\n        className: \"product-board table vk-table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, this.grid.colums.map(function (item, index) {\n        return React.createElement(\"th\", {\n          key: index,\n          style: {\n            width: item.width\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 337\n          },\n          __self: this\n        }, item.headerName, \" \");\n      }))), React.createElement(\"tbody\", {\n        style: {\n          height: '79vh'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, this.grid.rowData.map(function (item, index) {\n        var stt = index + 1;\n        return React.createElement(\"tr\", {\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 353\n          },\n          __self: this\n        }, _this7.grid.colums.map(function (item2, index2) {\n          //console.log(item2);\n          var value = '';\n\n          if (index2 === 0) {\n            value = stt;\n          } else if (item2['field'] === 'admin') {\n            value = React.createElement(AppSwitch, {\n              className: 'mx-1',\n              variant: 'pill',\n              color: 'primary',\n              checked: true,\n              disabled: true,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 362\n              },\n              __self: this\n            });\n          } else if (item2['field'].indexOf('field-') > -1) {\n            if (item2['field'] !== 'field-button') {\n              var group_id = parseInt(item2['field'].replace('field-', ''));\n\n              var isChecked = _this7._detectRoles(group_id, item['id']);\n\n              value = React.createElement(AppSwitch, {\n                onClick: function onClick() {\n                  _this7._toggleSetRoles(isChecked, group_id, item['id']);\n                },\n                className: 'mx-1',\n                variant: 'pill',\n                color: 'primary',\n                checked: isChecked,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 371\n                },\n                __self: this\n              });\n            }\n          } else {\n            value = item[item2['field']];\n          }\n\n          return React.createElement(\"td\", {\n            key: index2,\n            style: {\n              width: item2['width']\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 383\n            },\n            __self: this\n          }, value);\n        }));\n      }))));\n    }\n  }]);\n\n  return Role;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return _defineProperty({}, MODE, state[MODE]);\n};\n\nexport default connect(mapStateToProps)(Role);","map":{"version":3,"sources":["D:/actions/st_frontend/src/pages/Employee/Role/index.js"],"names":["Model","React","Component","connect","Table","AppSwitch","FormGroupUser","MODE","MODE_NAME","MODE_USER_ROLES","MODE_GROUP_USERS","Role","props","_isInitData","_curInfo","state","typeAction","onAction","status","isOpenForm","tab","userRoles","curGroupInfo","grid","colums","headerName","field","width","rowData","_setup","model","dispatch","moUserRoles","moGroupUsers","set","offset","p","max","sort_by","sort_type","group_id","rets","map","rows","item2","parseInt","id","push","role_id","_listRoles","ret","item","url","doCall","res","data","name","object","result","newArr","Object","keys","arr","_fixColumRoles","setState","type","receiptType","_loadGroupUserRoles","newProps","_isIniData","load","_whereStateChange","newState","assign","length","isDup","colum","cursor","_openForm","borderRadius","fontSize","isChecked","listRoles","userRoleId","user_roles_id","delete","post","group_user_id","groupName","staff_on","selectedUsers","axios","onTab","padding","isOpen","_submitGroup","_deleteGroup","index","height","stt","index2","value","indexOf","replace","_detectRoles","_toggleSetRoles","mapStateToProps"],"mappings":"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","sourcesContent":["\r\nimport Model from '../../../model/model'\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {   Table  } from 'reactstrap';\r\n\r\nimport { AppSwitch } from '@coreui/react';\r\n\r\n\r\nimport FormGroupUser from './FormGroupUser';\r\n\r\nconst MODE = 'roles';\r\nconst MODE_NAME = 'Vai trò';\r\n\r\nconst MODE_USER_ROLES = 'user_roles';\r\nconst MODE_GROUP_USERS = 'group_users';\r\n\r\nclass Role extends Component {\r\n\r\n    _isInitData = false;\r\n    _curInfo = {};\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            typeAction:'',  \r\n            onAction:'',\r\n            status:'',\r\n\r\n            isOpenForm:false,\r\n            tab:'role',\r\n            userRoles:[],\r\n            curGroupInfo:{}\r\n        }\r\n\r\n        this.grid = {\r\n            colums:[\r\n              { headerName:\"STT\",field:\"stt\",width:'50px' },\r\n              { headerName:\"SID\",field:\"id\",width:'50px'},\r\n              { headerName: \"Mã\",field:\"code\",width:'180px'},\r\n              { headerName:\" Tính năng \",field:\"name\", width:'240px'},\r\n              { headerName: \"Root Admin\",field:\"admin\", width:'140px'}\r\n              \r\n              \r\n            ],\r\n            rowData:[]\r\n        }\r\n\r\n\r\n\r\n        this._setup();\r\n\r\n        \r\n        \r\n\r\n    }\r\n\r\n\r\n    _setup(){\r\n        this.model = new Model(MODE,this.props.dispatch);\r\n        this.moUserRoles = new Model(MODE_USER_ROLES);\r\n        this.moGroupUsers = new Model(MODE_GROUP_USERS);\r\n\r\n        \r\n        // SETUP FOR GET ALL RECORD HERE \r\n        this.model.set('paginate',{\r\n            offset:0,\r\n            p:0,\r\n            max:'all',\r\n            sort_by:'code', \r\n            sort_type:'asc' \r\n        });\r\n        \r\n\r\n    }\r\n\r\n    _listRoles(group_id){\r\n        const rets = [];\r\n        this.state.userRoles.map((rows)=>{\r\n            rows.map((item2)=>{\r\n                if(parseInt(item2.id) === parseInt(group_id)){\r\n                    rets.push(item2);\r\n                }\r\n            })\r\n        });\r\n        return rets;\r\n\r\n    }\r\n    _detectRoles(group_id,role_id){\r\n        \r\n        let rets = this._listRoles(group_id);\r\n        let ret = false;\r\n        rets.map((item)=>{\r\n            if(parseInt(item.role_id) === parseInt(role_id)){\r\n                ret = true;\r\n            }\r\n        })\r\n        \r\n        return ret;\r\n    }\r\n\r\n    _loadGroupUserRoles(){\r\n        const url = '/listAll/all';\r\n\r\n        this.moGroupUsers.doCall(url,(res)=>{\r\n            const data = res.data;\r\n            if(data.name==='success'){\r\n                \r\n                const rows = data.rows;\r\n                \r\n\r\n                const object = {};\r\n                const result = [];\r\n                const newArr = []\r\n\r\n                // GET DUPLICATED GROUP_USER ID ;\r\n                rows.map((item)=>{\r\n                    if(!object[item.id]){\r\n                        object[item.id] = 0;\r\n                    }\r\n                    object[item.id] +=1 ;\r\n                });\r\n                Object.keys(object).map((item)=>{\r\n                    if(object[item]>=1){\r\n                        result.push(item);\r\n                    }\r\n                });\r\n                \r\n                result.map((item)=>{\r\n                    let arr = [];\r\n                    rows.map((item2)=>{\r\n                        if(parseInt(item)===parseInt(item2.id)){\r\n                            arr.push(item2);\r\n                        }\r\n                    \r\n                    });\r\n                    newArr.push(arr);\r\n                });\r\n\r\n                //console.log(newArr);\r\n                this._fixColumRoles(newArr);\r\n\r\n                this.setState({\r\n                    userRoles:newArr\r\n                });\r\n                \r\n\r\n            }\r\n        })        \r\n\r\n    }\r\n    \r\n\r\n    _openForm(type='post',data={}){\r\n\r\n        \r\n        this.setState({\r\n            isOpenForm:true,\r\n            typeAction:type,\r\n            curGroupInfo:data[0]\r\n        })\r\n    }\r\n    \r\n    \r\n    _onSubmitForm(res){\r\n        if(res.name==='success' || res.name==='ok'){\r\n\r\n            this._curInfo = {}\r\n            \r\n            this.setState({\r\n                isOpenForm:false,\r\n                typeAction:'',\r\n                receiptType:'',\r\n                status:res.name\r\n            });\r\n \r\n         }\r\n    }\r\n    \r\n\r\n    componentDidMount(){\r\n        this._loadGroupUserRoles();\r\n\r\n    }\r\n    componentWillReceiveProps(newProps){  \r\n\r\n        if(!this._isIniData){\r\n            this.model.load();\r\n            this._isIniData = true ; \r\n        }\r\n        this.grid.rowData = newProps[MODE]['list'] || [] ;  \r\n        // CONNECT REDUX STATE \r\n        this._whereStateChange(newProps[MODE]['state']);\r\n\r\n    }\r\n\r\n    /* WHERE*/\r\n    _whereStateChange(newState){\r\n        this.setState(Object.assign(this.state,newState));\r\n    }\r\n\r\n    _fixColumRoles(userRoles){\r\n\r\n        // GROUP BY : GROUP_USER_ID ;\r\n        this.grid.colums.length = 5 ; \r\n\r\n        userRoles.map((item)=>{\r\n            \r\n            // detect colums\r\n            let isDup = false; \r\n            this.grid.colums.map((colum)=>{\r\n                if(colum.field==='field-'+item[0]['id']){\r\n                    isDup = true;\r\n                }\r\n            });\r\n\r\n            if(!isDup){\r\n                this.grid.colums.push(\r\n                    { headerName: <a style={{cursor:'pointer'}} onClick={()=>{ this._openForm('put',item) }} className=\"text-red\">{ item[0]['group_name'] }</a>, field:\"field-\"+item[0]['id'], width:'140px'}\r\n                );\r\n            }\r\n            \r\n        });\r\n        \r\n\r\n        // ADD LASTEST COLUMS\r\n        // REMOVE LASTITEM - AND RE-ADD IT AGAIN \r\n        this.grid.colums.push(\r\n            { \r\n                headerName: <a style={{borderRadius:12,fontSize:9}} className=\"btn btn-xs btn-normal\" onClick={ ()=>{ this._openForm('post') } }> \r\n                    <i className=\"font-12 mr-5 fa fa-plus-circle\"></i> Thêm nhóm phân quyền </a>, \r\n                field:\"field-button\", \r\n                width:'140px'\r\n            }\r\n        );\r\n         \r\n       \r\n        \r\n\r\n    }\r\n\r\n    _toggleSetRoles(isChecked,group_id,role_id){\r\n\r\n        \r\n        if(isChecked){\r\n            // remove user_roles : \r\n            const listRoles = this._listRoles(group_id);\r\n            // GET user_role_id ; \r\n            let userRoleId = 0\r\n            listRoles.map((item)=>{\r\n                if(parseInt(item.role_id) === parseInt(role_id)){\r\n                    userRoleId = item.user_roles_id   \r\n                }\r\n            });\r\n\r\n            this.moUserRoles.delete(userRoleId,(data)=>{\r\n                if(data.name==='success'){\r\n                    this._loadGroupUserRoles()\r\n                }\r\n            });\r\n\r\n        }else{\r\n            this.moUserRoles.post({\r\n                role_id:role_id,\r\n                group_user_id:group_id\r\n            },(data)=>{\r\n                if(data.name==='success'){\r\n                    this._loadGroupUserRoles() \r\n                }\r\n\r\n            })\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    // DELETE GROUP \r\n    _deleteGroup(id){\r\n        this.moGroupUsers.delete(id,(data)=>{\r\n            if(data.name==='success'){\r\n                this._loadGroupUserRoles();\r\n                    this.setState({\r\n                        isOpenForm:false\r\n                    })\r\n            }\r\n        })\r\n    }\r\n    // groupName :''  - selectedUsers : [] \r\n    _submitGroup(state){\r\n\r\n        if(this.state.typeAction!==''){\r\n            let data = {\r\n                name:state.groupName,\r\n                staff_on:state.selectedUsers\r\n            };\r\n    \r\n            if(this.state.typeAction==='put'){\r\n                data['id'] = state.id\r\n            }\r\n    \r\n            this.moGroupUsers.axios(this.state.typeAction,data,(data)=>{\r\n                if(data.name==='success'){\r\n                    this._loadGroupUserRoles();\r\n                    this.setState({\r\n                        isOpenForm:false\r\n                    })\r\n                }\r\n            });\r\n        }\r\n        \r\n    }\r\n    render() {\r\n\r\n        \r\n        return (\r\n            <div hidden={ this.state.tab === this.props.onTab ? false : true } style={{padding:30}} className=\"animated fadeIn\">\r\n\r\n                <FormGroupUser \r\n                    width=\"600\"\r\n                    isOpen={this.state.isOpenForm}\r\n                    onToggle={(isOpen)=>{ this.setState({isOpenForm:isOpen}) }}\r\n                    typeAction={this.state.typeAction}\r\n                    onSubmit={(state)=>{ this._submitGroup(state) }}\r\n                    curGroupInfo={this.state.curGroupInfo}\r\n                    onDeleteGroup={(id)=>{ this._deleteGroup(id) }}\r\n\r\n                />\r\n                <Table className=\"product-board table vk-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            { \r\n                                this.grid.colums.map((item,index)=>{\r\n                                    return(\r\n                                        <th key={index} style={{width:item.width}}>{ item.headerName } </th> \r\n                                    )\r\n                                })\r\n                            }\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody style={{height:'79vh'}}>          \r\n                        {\r\n                            this.grid.rowData.map((item,index)=>{\r\n                                const stt = index + 1;\r\n                                \r\n                                \r\n                                                    \r\n\r\n                                return(\r\n                                    <tr key={item.id}>\r\n                                        {\r\n                                            this.grid.colums.map((item2,index2)=>{\r\n                                                //console.log(item2);\r\n\r\n                                                let value = '';\r\n                                                if(index2===0){\r\n                                                    value = stt  \r\n                                                }else if(item2['field']==='admin'){\r\n                                                    value = <AppSwitch \r\n                                                                 className={'mx-1'} \r\n                                                                variant={'pill'} color={'primary'}  checked={ true } disabled={true} />\r\n                                                }else if(item2['field'].indexOf('field-')>-1){\r\n\r\n                                                    if(item2['field'] !=='field-button'){\r\n                                                        const group_id = parseInt(item2['field'].replace('field-',''));\r\n                                                        const isChecked =  this._detectRoles(group_id,item['id']);\r\n\r\n                                                        value = <AppSwitch \r\n                                                                    onClick={()=>{ this._toggleSetRoles(isChecked,group_id,item['id']) }}  \r\n                                                                    className={'mx-1'} \r\n                                                                    variant={'pill'} color={'primary'}  checked={ isChecked }  \r\n                                                                />\r\n                                                        \r\n                                                    }\r\n                                                \r\n                                                }else{\r\n                                                    value = item[item2['field']];\r\n                                                }\r\n                                                return (\r\n                                                    <td key={index2} style={{ width: item2['width'] }} >  \r\n                                                         { value }\r\n                                                    </td>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                        \r\n                                        \r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tbody> \r\n                </Table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        [MODE]: state[MODE]\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Role);"]},"metadata":{},"sourceType":"module"}