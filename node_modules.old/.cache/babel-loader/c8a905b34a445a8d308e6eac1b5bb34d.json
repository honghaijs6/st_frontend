{"ast":null,"code":"import _defineProperty from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\actions\\\\st_frontend\\\\src\\\\pages\\\\Inventory\\\\Productnew\\\\HistoryForm.js\";\nimport Model from '../../../model/model';\nimport moment from 'moment';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { ButtonGroup } from 'reactstrap';\nimport ViewModal from '../../../components/ViewModal';\nimport { BenGrid } from '../../../components/BenGrid2';\nimport SelectList from '../../../components/SelectList';\nvar MODE = 'product_logs';\n\nvar HistoryForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(HistoryForm, _Component);\n\n  function HistoryForm(props) {\n    var _this;\n\n    _classCallCheck(this, HistoryForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HistoryForm).call(this, props));\n\n    _this._onChangeType = function (e) {\n      var type = e.target.value;\n\n      if (type !== '') {\n        _this.model.set('paginate', {\n          type: type\n        });\n      } else {\n        _this.model.remove('type');\n      }\n\n      _this.model.load();\n    };\n\n    _this.state = {\n      curCode: '',\n      status: ''\n    };\n    _this.grid = {\n      colums: [{\n        headerName: \"Mã Phiếu Kho\",\n        field: \"warehouse_receipt_code\",\n        width: 180,\n        cellRenderer: function cellRenderer(params) {\n          return \"\\n                        <span class=\\\"text-uppercase\\\"> \".concat(params.value, \" </span>\\n                    \");\n        }\n      }, {\n        headerName: \"Sản phẩm\",\n        field: \"product_code\",\n        width: 200\n      }, {\n        headerName: \"Loại\",\n        field: \"type\",\n        width: 100,\n        cellRenderer: function cellRenderer(params) {\n          var bgArr = {\n            in: 'bg-red',\n            out: 'bg-green'\n          };\n          return \"\\n                        <span class=\\\"badge text-uppercase \".concat(bgArr[params.value], \" \\\" > \").concat(params.value, \" <span>\\n                    \");\n        }\n      }, {\n        headerName: \"Mã chứng từ\",\n        field: \"purchase_code\",\n        width: 200\n      }, {\n        headerName: \"S.L\",\n        field: \"balance\",\n        width: 140\n      }, {\n        headerName: \"Kho\",\n        field: \"warehouse_code\",\n        width: 140,\n        cellRenderer: function cellRenderer(params) {\n          return \"\\n                        <span class=\\\"text-uppercase\\\"> \".concat(params.value, \" </span>\\n                     \");\n        }\n      }, {\n        headerName: \"Ngày\",\n        field: \"date_created\",\n        width: 140,\n        cellRenderer: function cellRenderer(params) {\n          return moment(params.value).format('YYYY-MM-DD');\n        }\n      }],\n      rowData: []\n    };\n\n    _this._setup();\n\n    return _this;\n  }\n\n  _createClass(HistoryForm, [{\n    key: \"_setup\",\n    value: function _setup() {\n      this.model = new Model(MODE, this.props.dispatch);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProp) {\n      if (newProp.isOpen) {\n        if (this.state.curCode !== newProp.data.code) {\n          this.model.set('paginate', {\n            product_code: newProp.data.code\n          });\n          this.state.curCode = newProp.data.code;\n          this.model.load();\n        }\n\n        this.grid.rowData = newProp[MODE]['list'] || [];\n        this.setState(Object.assign(this.state, newProp[MODE]['state']));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ViewModal, Object.assign({\n        width: \"68%\",\n        name: React.createElement(\"span\", {\n          className: \"text-uppercase\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, \" \", this.props.data.code, \" \")\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"view-modal-body\",\n        style: {\n          marginBottom: 40,\n          marginTop: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(BenGrid, {\n        gridID: \"id\",\n        rowSelection: \"single\",\n        isRightTool: true,\n        height: \"60vh\",\n        nextColums: this.grid.colums,\n        rowData: this.grid.rowData,\n        model: this.model,\n        customButton: React.createElement(ButtonGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, React.createElement(SelectList, {\n          onChange: this._onChangeType,\n          style: {\n            borderRadius: 0,\n            borderRight: 0\n          },\n          name: \"T\\u1EA5t c\\u1EA3\",\n          rows: [{\n            code: 'in',\n            name: 'Nhập'\n          }, {\n            code: 'out',\n            name: 'Xuất'\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        })),\n        displayBtn: [],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return HistoryForm;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return _defineProperty({}, MODE, state[MODE]);\n};\n\nexport default connect(mapStateToProps)(HistoryForm);","map":{"version":3,"sources":["D:/actions/st_frontend/src/pages/Inventory/Productnew/HistoryForm.js"],"names":["Model","moment","React","Component","connect","ButtonGroup","ViewModal","BenGrid","SelectList","MODE","HistoryForm","props","_onChangeType","e","type","target","value","model","set","remove","load","state","curCode","status","grid","colums","headerName","field","width","cellRenderer","params","bgArr","in","out","format","rowData","_setup","dispatch","newProp","isOpen","data","code","product_code","setState","Object","assign","marginBottom","marginTop","borderRadius","borderRight","name","mapStateToProps"],"mappings":"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","sourcesContent":["import Model from '../../../model/model';\r\nimport moment from 'moment'; \r\n\r\n\r\nimport React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nimport { ButtonGroup } from 'reactstrap' ; \r\n\r\nimport ViewModal from '../../../components/ViewModal';\r\nimport { BenGrid } from '../../../components/BenGrid2';\r\n\r\nimport SelectList from '../../../components/SelectList';\r\n\r\n\r\nconst MODE = 'product_logs';\r\n\r\n\r\nclass HistoryForm extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n\r\n        this.state = {\r\n\r\n            curCode:'',\r\n            status:''\r\n        }\r\n        \r\n        this.grid = {\r\n            colums:[\r\n              { headerName: \"Mã Phiếu Kho\", field: \"warehouse_receipt_code\", width:180,\r\n                cellRenderer(params){\r\n                    return `\r\n                        <span class=\"text-uppercase\"> ${params.value} </span>\r\n                    `;\r\n                }\r\n              },\r\n              { headerName: \"Sản phẩm\", field: \"product_code\", width:200 },\r\n\r\n              { headerName: \"Loại\", field:\"type\",width:100, \r\n                cellRenderer(params){\r\n\r\n                    const bgArr = {\r\n                        in:'bg-red',\r\n                        out:'bg-green'\r\n                    }\r\n                    return `\r\n                        <span class=\"badge text-uppercase ${ bgArr[params.value] } \" > ${ params.value} <span>\r\n                    `\r\n                }\r\n              },\r\n\r\n              {\r\n                  headerName:\"Mã chứng từ\", field:\"purchase_code\", width:200\r\n              },\r\n\r\n              { headerName: \"S.L\", field:\"balance\", width:140 },\r\n              { headerName: \"Kho\", field: \"warehouse_code\", width:140,\r\n                 cellRenderer(params){\r\n                     return `\r\n                        <span class=\"text-uppercase\"> ${params.value} </span>\r\n                     `\r\n                 }\r\n              },\r\n              { headerName: \"Ngày\", field: \"date_created\", width:140,\r\n                cellRenderer(params){\r\n                    return  moment(params.value).format('YYYY-MM-DD');\r\n\r\n                }\r\n              }\r\n              \r\n              \r\n            ],\r\n            rowData:[]\r\n          }\r\n\r\n        this._setup();\r\n\r\n    }\r\n\r\n    _setup(){\r\n\r\n        this.model = new Model(MODE,this.props.dispatch);\r\n        \r\n    }\r\n\r\n    componentWillReceiveProps(newProp){\r\n        if(newProp.isOpen){\r\n\r\n            \r\n            if(this.state.curCode !== newProp.data.code){\r\n                \r\n                this.model.set('paginate',{\r\n                    product_code: newProp.data.code\r\n                });\r\n                this.state.curCode = newProp.data.code;\r\n                \r\n                this.model.load();\r\n            }\r\n\r\n            this.grid.rowData = newProp[MODE]['list'] || [];\r\n            this.setState(Object.assign(this.state,newProp[MODE]['state']));\r\n            \r\n            \r\n        }\r\n    }\r\n\r\n    _onChangeType = (e)=>{\r\n        const type = e.target.value;\r\n\r\n        if(type!==''){\r\n            this.model.set('paginate',{\r\n                type:type\r\n            });\r\n        }else{\r\n            this.model.remove('type');\r\n        }\r\n\r\n        this.model.load();\r\n\r\n        \r\n    }\r\n    render() {\r\n\r\n        \r\n        return (\r\n            <ViewModal\r\n                width=\"68%\"  \r\n                name={ <span className=\"text-uppercase\"> { this.props.data.code } </span> } {...this.props} >\r\n                \r\n                <div className=\"view-modal-body\" style={{marginBottom:40, marginTop:10}}>\r\n                    \r\n                    <BenGrid\r\n\r\n                        \r\n                        gridID='id'\r\n                        rowSelection='single'\r\n\r\n                        isRightTool={ true }\r\n                        height=\"60vh\"\r\n\r\n                        nextColums={ this.grid.colums }\r\n                        rowData={this.grid.rowData}\r\n                        model={ this.model }\r\n                        \r\n                        customButton = {\r\n\r\n                            <ButtonGroup>\r\n\r\n                                <SelectList\r\n\r\n                                    onChange={ this._onChangeType }\r\n\r\n                                    style={{borderRadius:0,borderRight:0}}\r\n                                    name='Tất cả'\r\n                                    rows={[\r\n                                        {code:'in', name:'Nhập'},\r\n                                        {code:'out', name:'Xuất'},\r\n\r\n                                    ]}\r\n                                />\r\n                            </ButtonGroup>\r\n                            \r\n                        }\r\n\r\n                        displayBtn = {[]}\r\n\r\n                        \r\n                        \r\n                    />\r\n\r\n                </div>\r\n\r\n            </ViewModal>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        [MODE]: state[MODE]\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(HistoryForm);\r\n"]},"metadata":{},"sourceType":"module"}