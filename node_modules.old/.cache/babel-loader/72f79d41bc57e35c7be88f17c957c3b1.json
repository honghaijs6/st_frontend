{"ast":null,"code":"import _classCallCheck from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\actions\\\\st_frontend\\\\src\\\\components\\\\ButtonExportXLSTemp.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'reactstrap'; // LIBS \n\nimport XLSX from 'xlsx';\nimport { saveAs } from 'file-saver';\n\nvar ButtonExportXLSTemp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ButtonExportXLSTemp, _Component);\n\n  function ButtonExportXLSTemp() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ButtonExportXLSTemp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ButtonExportXLSTemp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this._onExportXLS = function () {\n      var wb = new XLSX.utils.book_new();\n      wb.props = {\n        Title: _this.props.strModel,\n        Subject: _this.props.strModel,\n        Author: \"Hong Hai\",\n        CreateDate: new Date()\n      };\n      wb.SheetNames.push('Sheet1');\n      var ws = XLSX.utils.aoa_to_sheet([_this.props.columns]);\n      wb.Sheets[\"Sheet1\"] = ws;\n      var wbout = XLSX.write(wb, {\n        bookType: 'xlsx',\n        type: 'binary'\n      });\n\n      function s2ab(s) {\n        var buf = new ArrayBuffer(s.length); //convert s to arrayBuffer\n\n        var view = new Uint8Array(buf); //create uint8array as viewer\n\n        for (var i = 0; i < s.length; i++) {\n          view[i] = s.charCodeAt(i) & 0xFF;\n        } //convert to octet\n\n\n        return buf;\n      }\n\n      var title = _this.props.strModel + '-temp';\n      saveAs(new Blob([s2ab(wbout)], {\n        type: \"application/octet-stream\"\n      }), title + '.xlsx');\n    };\n\n    return _this;\n  }\n\n  _createClass(ButtonExportXLSTemp, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Button, {\n        onClick: this._onExportXLS,\n        title: \"Download file m\\u1EABu\",\n        className: \"btn btn-normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-file-excel-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ButtonExportXLSTemp;\n}(Component);\n\nexport { ButtonExportXLSTemp as default };\nButtonExportXLSTemp.defaultProps = {\n  columns: [],\n  strModel: 'products'\n};","map":{"version":3,"sources":["D:/actions/st_frontend/src/components/ButtonExportXLSTemp.js"],"names":["React","Component","Button","XLSX","saveAs","ButtonExportXLSTemp","_onExportXLS","wb","utils","book_new","props","Title","strModel","Subject","Author","CreateDate","Date","SheetNames","push","ws","aoa_to_sheet","columns","Sheets","wbout","write","bookType","type","s2ab","s","buf","ArrayBuffer","length","view","Uint8Array","i","charCodeAt","title","Blob","defaultProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,YAAvB,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,MAAT,QAAuB,YAAvB;;IAIqBC,mB;;;;;;;;;;;;;;;;;;UAIjBC,Y,GAAe,YAAI;AACf,UAAMC,EAAE,GAAG,IAAIJ,IAAI,CAACK,KAAL,CAAWC,QAAf,EAAX;AAEAF,MAAAA,EAAE,CAACG,KAAH,GAAW;AACPC,QAAAA,KAAK,EAAC,MAAKD,KAAL,CAAWE,QADV;AAEPC,QAAAA,OAAO,EAAC,MAAKH,KAAL,CAAWE,QAFZ;AAGPE,QAAAA,MAAM,EAAC,UAHA;AAIPC,QAAAA,UAAU,EAAE,IAAIC,IAAJ;AAJL,OAAX;AAOAT,MAAAA,EAAE,CAACU,UAAH,CAAcC,IAAd,CAAmB,QAAnB;AACA,UAAIC,EAAE,GAAGhB,IAAI,CAACK,KAAL,CAAWY,YAAX,CAAwB,CAAC,MAAKV,KAAL,CAAWW,OAAZ,CAAxB,CAAT;AAGAd,MAAAA,EAAE,CAACe,MAAH,CAAU,QAAV,IAAsBH,EAAtB;AACA,UAAII,KAAK,GAAGpB,IAAI,CAACqB,KAAL,CAAWjB,EAAX,EAAe;AAACkB,QAAAA,QAAQ,EAAC,MAAV;AAAmBC,QAAAA,IAAI,EAAE;AAAzB,OAAf,CAAZ;;AAEA,eAASC,IAAT,CAAcC,CAAd,EAAiB;AACb,YAAIC,GAAG,GAAG,IAAIC,WAAJ,CAAgBF,CAAC,CAACG,MAAlB,CAAV,CADa,CACwB;;AACrC,YAAIC,IAAI,GAAG,IAAIC,UAAJ,CAAeJ,GAAf,CAAX,CAFa,CAEoB;;AACjC,aAAK,IAAIK,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACN,CAAC,CAACG,MAAlB,EAA0BG,CAAC,EAA3B;AAA+BF,UAAAA,IAAI,CAACE,CAAD,CAAJ,GAAUN,CAAC,CAACO,UAAF,CAAaD,CAAb,IAAkB,IAA5B;AAA/B,SAHa,CAGoD;;;AACjE,eAAOL,GAAP;AACH;;AAED,UAAMO,KAAK,GAAG,MAAK1B,KAAL,CAAWE,QAAX,GAAoB,OAAlC;AACAR,MAAAA,MAAM,CAAC,IAAIiC,IAAJ,CAAS,CAACV,IAAI,CAACJ,KAAD,CAAL,CAAT,EAAuB;AAACG,QAAAA,IAAI,EAAC;AAAN,OAAvB,CAAD,EAA4DU,KAAK,GAAC,OAAlE,CAAN;AACH,K;;;;;;;6BACQ;AACL,aACI,oBAAC,MAAD;AAEI,QAAA,OAAO,EAAG,KAAK9B,YAFnB;AAGI,QAAA,KAAK,EAAC,wBAHV;AAII,QAAA,SAAS,EAAC,gBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKI;AAAG,QAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,CADJ;AASH;;;;EAzC4CL,S;;SAA5BI,mB;AA4CrBA,mBAAmB,CAACiC,YAApB,GAAmC;AAC/BjB,EAAAA,OAAO,EAAC,EADuB;AAE/BT,EAAAA,QAAQ,EAAC;AAFsB,CAAnC","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button } from 'reactstrap';\r\n\r\n// LIBS \r\nimport XLSX from 'xlsx';\r\nimport { saveAs } from 'file-saver';\r\n\r\n\r\n\r\nexport default class ButtonExportXLSTemp extends Component {\r\n\r\n\r\n  \r\n    _onExportXLS = ()=>{\r\n        const wb = new XLSX.utils.book_new();\r\n\r\n        wb.props = {\r\n            Title:this.props.strModel,\r\n            Subject:this.props.strModel,\r\n            Author:\"Hong Hai\",\r\n            CreateDate: new Date()\r\n        }\r\n\r\n        wb.SheetNames.push('Sheet1');\r\n        var ws = XLSX.utils.aoa_to_sheet([this.props.columns]);\r\n        \r\n\r\n        wb.Sheets[\"Sheet1\"] = ws;\r\n        var wbout = XLSX.write(wb, {bookType:'xlsx',  type: 'binary'});\r\n\r\n        function s2ab(s) { \r\n            var buf = new ArrayBuffer(s.length); //convert s to arrayBuffer\r\n            var view = new Uint8Array(buf);  //create uint8array as viewer\r\n            for (var i=0; i<s.length; i++) view[i] = s.charCodeAt(i) & 0xFF; //convert to octet\r\n            return buf;    \r\n        }\r\n\r\n        const title = this.props.strModel+'-temp'; \r\n        saveAs(new Blob([s2ab(wbout)],{type:\"application/octet-stream\"}), title+'.xlsx');\r\n    }\r\n    render() {\r\n        return (\r\n            <Button \r\n\r\n                onClick={ this._onExportXLS }\r\n                title=\"Download file máº«u\" \r\n                className=\"btn btn-normal\">  \r\n                <i className=\"fa fa-file-excel-o\"></i>\r\n            </Button>\r\n        );\r\n    }\r\n}\r\n\r\nButtonExportXLSTemp.defaultProps = {\r\n    columns:[],\r\n    strModel:'products'\r\n}"]},"metadata":{},"sourceType":"module"}