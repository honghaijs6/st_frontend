{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\actions\\\\st_frontend\\\\src\\\\pages\\\\iservice\\\\tickets\\\\index.js\";\n// DATA\nimport { ISERVICE_TYPES } from '../../../config/app.config';\nimport Model from '../../../model/model'; // LIBS \n\nimport moment from 'moment'; // HOOKS \n\nimport doGetModelInfo from '../../../hook/ultil/doGetModelInfo';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, ButtonGroup, FormGroup, Input, Label } from 'reactstrap';\nimport { BenGrid } from '../../../components/BenGrid2';\nimport BenMessage from '../../../components/BenMessage';\nimport ButtonExpand from '../../../components/ButtonExpand';\nimport ButtonExpandList from '../../../components/ButtonExpandList';\nimport RankDatePicker from '../../../components/RankDatePicker';\nimport DeleteForm from '../../../components/DeleteForm';\nimport MyForm from './Form';\nimport ReportForm from './ReportForm';\nimport PrintForm from './PrintForm';\nvar MODE = 'iservices';\n\nvar Tickets =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Tickets, _Component);\n\n  function Tickets(props) {\n    var _this;\n\n    _classCallCheck(this, Tickets);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Tickets).call(this, props));\n    _this._curInfo = {};\n    _this.state = {\n      typeAction: '',\n      onAction: '',\n      status: '',\n      isOpenForm: false,\n      isOpenDeleteForm: false,\n      isOpenReportForm: false,\n      isOpenFormPrint: false,\n      receiptType: 'osv',\n      // MAC DINH LA DỊCH VỤ TẬN NƠI\n      actions: [{\n        code: 'update',\n        icon: 'fa-pencil',\n        name: 'Cập nhật phiếu'\n      }, {\n        code: 'remove',\n        icon: 'fa-trash',\n        name: 'Huỷ phiếu',\n        active: true\n      }, {\n        code: 'report',\n        icon: 'fa-mail-reply',\n        name: 'Báo cáo kết quả'\n      }, {\n        code: 'print',\n        icon: 'fa-print',\n        name: 'In phiếu'\n      }],\n      companyInfo: {}\n    };\n    _this.grid = {\n      colums: [{\n        headerName: \"Mã\",\n        field: \"code\",\n        width: 140,\n        cellRenderer: function cellRenderer(params) {\n          return \"<span class=\\\" finalcial-\".concat(params.data.type, \" text-uppercase\\\"> \").concat(params.value, \" </span>\");\n        }\n      }, {\n        headerName: \"Loại\",\n        field: \"type\",\n        width: 180,\n        cellRenderer: function cellRenderer(params) {\n          return \"<span style=\\\"color:\".concat(ISERVICE_TYPES[params.value]['color'], \"\\\">\\n                              <i class=\\\"fa \").concat(ISERVICE_TYPES[params.value]['icon'], \" mr-5\\\"></i>  \").concat(ISERVICE_TYPES[params.value]['name'], \"                \\n                            </span>\");\n        }\n      }, {\n        headerName: \"Chứng từ\",\n        field: \"ref_code\",\n        width: 180,\n        cellRenderer: function cellRenderer(params) {\n          return \"<span class=\\\"text-uppercase\\\"> \".concat(params.value, \" </span>\");\n        }\n      }, {\n        headerName: \"Nội dung\",\n        field: \"content_issue\",\n        width: 410\n      }, {\n        headerName: \"Trạng thái\",\n        field: \"status\",\n        width: 150,\n        cellRenderer: function cellRenderer(params) {\n          var arr = [{\n            class: 'badge bg-red',\n            name: '<i class=\"fa fa-clock-o mr-5\"></i> Đang xử lý'\n          }, {\n            class: 'badge bg-green',\n            name: '<i class=\"fa fa-check mr-5\"></i> Hoàn thành'\n          }];\n          return \"<span class=\\\"\".concat(arr[params.value]['class'], \"\\\"> \").concat(arr[params.value]['name'], \" </span>\");\n        }\n      }, {\n        headerName: \"Hẹn giờ đến\",\n        field: \"date_arrived\",\n        width: 180,\n        cellRenderer: function cellRenderer(params) {\n          var humanDate = moment(params.value).format('YYYY-MM-DD HH:mm');\n          return humanDate;\n        }\n      }, {\n        headerName: \"Phụ trách\",\n        field: \"belong_user\",\n        width: 140,\n        cellRenderer: function cellRenderer(params) {\n          return \"<i class=\\\"fa fa-user mr-5\\\"></i> \".concat(params.value, \" \");\n        }\n      }, {\n        headerName: \"Người tạo\",\n        field: \"creator\",\n        width: 180,\n        cellRenderer: function cellRenderer(params) {\n          return \"\\n                        <i class=\\\"fa fa-user mr-5\\\"></i> \".concat(params.value, \"\\n                      \");\n        }\n      }, {\n        headerName: \"Ngày tạo\",\n        field: \"date_created\",\n        width: 140,\n        cellRenderer: function cellRenderer(params) {\n          var humanDate = moment(params.value).format('YYYY-MM-DD');\n          return humanDate;\n        }\n      }, {\n        headerName: \"Điều chỉnh\",\n        field: \"date_modified\",\n        width: 140,\n        cellRenderer: function cellRenderer(params) {\n          var humanDate = params.value !== null ? moment(params.value).format('YYYY-MM-DD') : '';\n          return humanDate;\n        }\n      }],\n      rowData: []\n    };\n\n    _this._setup();\n\n    return _this;\n  }\n\n  _createClass(Tickets, [{\n    key: \"_setup\",\n    value: function _setup() {\n      this.model = new Model(MODE, this.props.dispatch);\n    }\n  }, {\n    key: \"_doOpenModalUpdate\",\n    value: function _doOpenModalUpdate() {\n      this.setState({\n        receiptType: this._curInfo.type,\n        isOpenForm: true,\n        typeAction: 'put'\n      });\n    }\n  }, {\n    key: \"_doOpenModal\",\n    value: function _doOpenModal(receiptType) {\n      this.setState({\n        receiptType: receiptType,\n        isOpenForm: true,\n        typeAction: 'post'\n      });\n    }\n  }, {\n    key: \"_onSubmitForm\",\n    value: function _onSubmitForm(res) {\n      if (res.name === 'success' || res.name === 'ok') {\n        this._curInfo = {};\n        this.setState({\n          isOpenForm: false,\n          isOpenDeleteForm: false,\n          isOpenReportForm: false,\n          typeAction: '',\n          receiptType: '',\n          status: res.name\n        });\n      }\n    }\n  }, {\n    key: \"_callAction\",\n    value: function _callAction(item) {\n      document.querySelector('body').click();\n\n      if (JSON.stringify(this._curInfo) !== '{}') {\n        switch (item.code) {\n          case 'update':\n            this._doOpenModalUpdate();\n\n            break;\n\n          case 'remove':\n            this.setState({\n              isOpenDeleteForm: true\n            });\n            break;\n\n          case 'report':\n            this.setState({\n              isOpenReportForm: true\n            });\n            break;\n\n          case 'print':\n            this.setState({\n              isOpenFormPrint: true\n            });\n            break;\n        }\n      } else {\n        BenMessage({\n          title: 'Thông báo',\n          message: 'Vui lòng chọn chọn dữ liệu cần xử lý '\n        });\n      }\n    }\n  }, {\n    key: \"_loadWithDate\",\n    value: function _loadWithDate(jsonDate) {\n      var formatDate = {\n        start: moment(jsonDate.start).format('YYYY-MM-DD'),\n        end: moment(jsonDate.end).format('YYYY-MM-DD')\n      };\n      this.model.set('paginate', _objectSpread({}, formatDate));\n      this.model.load();\n    }\n  }, {\n    key: \"_onChange\",\n    value: function _onChange(field, value) {\n      if (value !== '') {\n        this.model.set('paginate', _defineProperty({}, field, value));\n      } else {\n        this.model.remove(field);\n      }\n\n      this.model.load();\n    }\n    /* WHERE*/\n\n  }, {\n    key: \"_whereStateChange\",\n    value: function _whereStateChange(newState) {\n      this.setState(Object.assign(this.state, newState));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var resCom;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.model.load();\n                _context.next = 3;\n                return doGetModelInfo('companies', window.USERINFO.company_id);\n\n              case 3:\n                resCom = _context.sent;\n\n                if (resCom.name === 'success') {\n                  this.setState({\n                    companyInfo: resCom.data\n                  });\n                }\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      this.grid.rowData = newProps[MODE]['list']; // CONNECT REDUX STATE \n\n      this._whereStateChange(newProps[MODE]['state']);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"blank-app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, React.createElement(PrintForm, {\n        width: \"72%\",\n        data: this._curInfo,\n        isOpen: this.state.isOpenFormPrint,\n        onToggle: function onToggle(isOpen) {\n          _this2.setState({\n            isOpenFormPrint: isOpen\n          });\n        },\n        companyInfo: this.state.companyInfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }), React.createElement(DeleteForm, {\n        data: this._curInfo,\n        isOpen: this.state.isOpenDeleteForm,\n        onToggle: function onToggle(isOpen) {\n          _this2.setState({\n            isOpenDeleteForm: isOpen\n          });\n        },\n        model: this.model,\n        onSubmitForm: function onSubmitForm(res) {\n          _this2._onSubmitForm(res);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }), React.createElement(MyForm, {\n        width: \"63%\",\n        isOpen: this.state.isOpenForm,\n        onToggle: function onToggle(isOpen) {\n          _this2.setState({\n            isOpenForm: isOpen\n          });\n        },\n        model: this.model,\n        receiptType: this.state.receiptType,\n        typeAction: this.state.typeAction,\n        onSubmitForm: function onSubmitForm(res) {\n          _this2._onSubmitForm(res);\n        },\n        data: this._curInfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }), React.createElement(ReportForm, {\n        isOpen: this.state.isOpenReportForm,\n        onToggle: function onToggle(isOpen) {\n          _this2.setState({\n            isOpenReportForm: isOpen\n          });\n        },\n        model: this.model,\n        onSubmitForm: function onSubmitForm(res) {\n          _this2._onSubmitForm(res);\n        },\n        data: this._curInfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }), React.createElement(BenGrid, {\n        onBtnEdit: function onBtnEdit(data) {\n          _this2._doOpenModalUpdate();\n        },\n        onCellSelected: function onCellSelected(json) {\n          _this2._curInfo = json;\n        },\n        gridID: \"id\",\n        rowSelection: \"single\",\n        isRightTool: true,\n        height: \"77.5vh\",\n        nextColums: this.grid.colums,\n        rowData: this.grid.rowData,\n        model: this.model,\n        formStatus: this.state.status,\n        displayBtn: [],\n        customButton: React.createElement(ButtonGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 342\n          },\n          __self: this\n        }, React.createElement(Button, {\n          onClick: function onClick() {\n            _this2._doOpenModal('osv');\n          },\n          className: \"btn btn-normal\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 344\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fa fa-plus-circle mr-5\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 346\n          },\n          __self: this\n        }), \" Phi\\u1EBFu D\\u1ECBch v\\u1EE5\"), React.createElement(ButtonExpandList, {\n          onSelected: function onSelected(item) {\n            _this2._callAction(item);\n          },\n          data: this.state.actions,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 354\n          },\n          __self: this\n        }), React.createElement(RankDatePicker, {\n          onChange: function onChange(rank) {\n            _this2._loadWithDate(rank);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 357\n          },\n          __self: this\n        }), React.createElement(ButtonExpand, {\n          style: {\n            borderRight: 0\n          },\n          icon: \"fa-filter\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 359\n          },\n          __self: this\n        }, React.createElement(FormGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 361\n          },\n          __self: this\n        }, React.createElement(Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 362\n          },\n          __self: this\n        }, \" Lo\\u1EA1i Phi\\u1EBFu  \"), React.createElement(Input, {\n          type: \"select\",\n          onChange: function onChange(e) {\n            _this2._onChange('type', e.target.value);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 363\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          value: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 364\n          },\n          __self: this\n        }, \" T\\u1EA5t c\\u1EA3 \"), React.createElement(\"option\", {\n          value: \"osv\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 365\n          },\n          __self: this\n        }, \" Phi\\u1EBFu d\\u1ECBch v\\u1EE5 \"), React.createElement(\"option\", {\n          value: \"isv\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 366\n          },\n          __self: this\n        }, \" Phi\\u1EBFu ti\\u1EBFp nh\\u1EADn \"))), React.createElement(FormGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 369\n          },\n          __self: this\n        }, React.createElement(Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 370\n          },\n          __self: this\n        }, \" Tr\\u1EA1ng th\\xE1i \"), React.createElement(Input, {\n          type: \"select\",\n          onChange: function onChange(e) {\n            _this2._onChange('status', e.target.value);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 371\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          value: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 372\n          },\n          __self: this\n        }, \" T\\u1EA5t c\\u1EA3 \"), React.createElement(\"option\", {\n          value: \"0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 373\n          },\n          __self: this\n        }, \" \\u0110ang x\\u1EED l\\xFD \"), React.createElement(\"option\", {\n          value: \"1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 374\n          },\n          __self: this\n        }, \" Ho\\xE0n t\\u1EA5t \"))))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Tickets;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return _defineProperty({}, MODE, state[MODE]);\n};\n\nexport default connect(mapStateToProps)(Tickets);","map":{"version":3,"sources":["D:/actions/st_frontend/src/pages/iservice/tickets/index.js"],"names":["ISERVICE_TYPES","Model","moment","doGetModelInfo","React","Component","connect","Button","ButtonGroup","FormGroup","Input","Label","BenGrid","BenMessage","ButtonExpand","ButtonExpandList","RankDatePicker","DeleteForm","MyForm","ReportForm","PrintForm","MODE","Tickets","props","_curInfo","state","typeAction","onAction","status","isOpenForm","isOpenDeleteForm","isOpenReportForm","isOpenFormPrint","receiptType","actions","code","icon","name","active","companyInfo","grid","colums","headerName","field","width","cellRenderer","params","data","type","value","arr","class","humanDate","format","rowData","_setup","model","dispatch","setState","res","item","document","querySelector","click","JSON","stringify","_doOpenModalUpdate","title","message","jsonDate","formatDate","start","end","set","load","remove","newState","Object","assign","window","USERINFO","company_id","resCom","newProps","_whereStateChange","isOpen","_onSubmitForm","json","_doOpenModal","_callAction","rank","_loadWithDate","borderRight","e","_onChange","target","mapStateToProps","ownProps"],"mappings":"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","sourcesContent":["\r\n// DATA\r\nimport {ISERVICE_TYPES} from '../../../config/app.config';\r\nimport Model from '../../../model/model';\r\n\r\n// LIBS \r\nimport moment from 'moment';\r\n\r\n// HOOKS \r\nimport doGetModelInfo from '../../../hook/ultil/doGetModelInfo';\r\n\r\n\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button, ButtonGroup, FormGroup, Input, Label } from 'reactstrap'; \r\n\r\nimport { BenGrid } from '../../../components/BenGrid2' ; \r\n\r\nimport BenMessage from '../../../components/BenMessage'; \r\nimport ButtonExpand from '../../../components/ButtonExpand';\r\nimport ButtonExpandList from '../../../components/ButtonExpandList'; \r\n\r\n\r\nimport RankDatePicker from '../../../components/RankDatePicker'; \r\nimport DeleteForm from '../../../components/DeleteForm';\r\n\r\n\r\nimport MyForm from './Form'; \r\nimport ReportForm from './ReportForm';\r\nimport PrintForm from './PrintForm';\r\n\r\n\r\n\r\nconst MODE = 'iservices';\r\n \r\nclass Tickets extends Component {\r\n\r\n    _curInfo={};\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            typeAction:'',\r\n            onAction:'',\r\n            status:'',\r\n\r\n            isOpenForm:false,\r\n            isOpenDeleteForm:false,\r\n            isOpenReportForm:false,\r\n            isOpenFormPrint:false,\r\n\r\n            receiptType:'osv', // MAC DINH LA DỊCH VỤ TẬN NƠI\r\n            actions:[\r\n                {code:'update',icon:'fa-pencil',name:'Cập nhật phiếu'},\r\n                {code:'remove',icon:'fa-trash',name:'Huỷ phiếu',active:true},\r\n                {code:'report',icon:'fa-mail-reply',name:'Báo cáo kết quả'},\r\n                {code:'print',icon:'fa-print',name:'In phiếu'}\r\n            ],\r\n\r\n            companyInfo:{}\r\n\r\n\r\n\r\n        }\r\n\r\n        this.grid = {\r\n            colums:[\r\n              {headerName: \"Mã\", field: \"code\",width:140, \r\n                cellRenderer(params){\r\n                    return `<span class=\" finalcial-${params.data.type} text-uppercase\"> ${params.value} </span>`\r\n                }\r\n              },\r\n              {headerName: \"Loại\", field: \"type\",width:180,\r\n                cellRenderer(params){\r\n\r\n\r\n                    return `<span style=\"color:${ISERVICE_TYPES[params.value]['color']}\">\r\n                              <i class=\"fa ${ISERVICE_TYPES[params.value]['icon']} mr-5\"></i>  ${ISERVICE_TYPES[params.value]['name']}                \r\n                            </span>`;\r\n                }\r\n              },\r\n              {headerName: \"Chứng từ\", field: \"ref_code\", width:180,\r\n                 cellRenderer(params){\r\n                     return `<span class=\"text-uppercase\"> ${params.value} </span>`\r\n                 }\r\n              },\r\n              \r\n              {headerName: \"Nội dung\", field: \"content_issue\",width:410 },\r\n              {\r\n                  headerName:\"Trạng thái\", field:\"status\", width:150,\r\n                  cellRenderer(params){\r\n                      const arr = [\r\n                          { class:'badge bg-red', name:'<i class=\"fa fa-clock-o mr-5\"></i> Đang xử lý' },\r\n                          { class:'badge bg-green', name:'<i class=\"fa fa-check mr-5\"></i> Hoàn thành'}\r\n                      ]\r\n                      return `<span class=\"${arr[params.value]['class']}\"> ${arr[params.value]['name']} </span>`\r\n                  }\r\n              },\r\n              {\r\n                  headerName:\"Hẹn giờ đến\", field:\"date_arrived\", width:180,\r\n                  cellRenderer(params){\r\n                    const humanDate = moment(params.value).format('YYYY-MM-DD HH:mm');\r\n                    return humanDate;\r\n                  }\r\n              },\r\n              {headerName: \"Phụ trách\", field:\"belong_user\",width:140,\r\n                cellRenderer(params){\r\n                    return `<i class=\"fa fa-user mr-5\"></i> ${params.value} `\r\n                }\r\n              },  \r\n              \r\n              {\r\n                  headerName: \"Người tạo\", field: \"creator\",width:180,\r\n                  cellRenderer(params){\r\n                      return `\r\n                        <i class=\"fa fa-user mr-5\"></i> ${params.value}\r\n                      `\r\n                  }\r\n              },\r\n\r\n              {headerName: \"Ngày tạo\", field: \"date_created\",width:140,\r\n                  cellRenderer(params){\r\n                      const humanDate = moment(params.value).format('YYYY-MM-DD');\r\n                      return humanDate;\r\n                  }\r\n              },\r\n              {\r\n                  headerName:\"Điều chỉnh\",field:\"date_modified\",width:140,\r\n                  cellRenderer(params){\r\n                    const humanDate =  params.value !== null ? moment(params.value).format('YYYY-MM-DD') : '' ;\r\n                    return humanDate;\r\n                  }\r\n              }\r\n      \r\n            ],\r\n            rowData: []\r\n        }\r\n\r\n        this._setup();\r\n\r\n\r\n\r\n    }\r\n\r\n    _setup(){\r\n        \r\n        this.model = new Model(MODE,this.props.dispatch);\r\n\r\n    }\r\n\r\n    _doOpenModalUpdate(){\r\n        \r\n        \r\n        this.setState({\r\n            receiptType:this._curInfo.type,\r\n            isOpenForm:true,\r\n            typeAction:'put'\r\n        });\r\n    }\r\n    _doOpenModal(receiptType){\r\n\r\n        this.setState({\r\n            receiptType:receiptType,\r\n            isOpenForm:true,\r\n            typeAction:'post'\r\n        });\r\n\r\n        \r\n\r\n\r\n    }\r\n    _onSubmitForm(res){\r\n        if(res.name==='success' || res.name==='ok'){\r\n\r\n           this._curInfo = {}\r\n\r\n           this.setState({\r\n               isOpenForm:false,\r\n               isOpenDeleteForm:false,\r\n               isOpenReportForm:false,\r\n               typeAction:'',\r\n               receiptType:'',\r\n               status:res.name\r\n           });\r\n\r\n        }\r\n    }\r\n\r\n    _callAction(item){\r\n\r\n        document.querySelector('body').click();\r\n        \r\n        if(JSON.stringify(this._curInfo)!=='{}'){\r\n            switch(item.code){\r\n\r\n                case 'update':\r\n                    this._doOpenModalUpdate() ; \r\n                break;\r\n\r\n                case 'remove':\r\n                    this.setState({\r\n                        isOpenDeleteForm:true\r\n                    });\r\n                \r\n                break ;\r\n                case 'report':\r\n                    this.setState({\r\n                        isOpenReportForm:true\r\n                    });\r\n                break ;\r\n\r\n                case 'print':\r\n                    this.setState({\r\n                        isOpenFormPrint:true\r\n                    });\r\n                break ;\r\n            }\r\n        }else{ \r\n            BenMessage({\r\n            title:'Thông báo',\r\n            message:'Vui lòng chọn chọn dữ liệu cần xử lý '\r\n            }) ;\r\n        }\r\n    }\r\n\r\n    _loadWithDate(jsonDate){\r\n        const formatDate = {\r\n            start: moment(jsonDate.start).format('YYYY-MM-DD'),\r\n            end:moment(jsonDate.end).format('YYYY-MM-DD')\r\n         }\r\n        this.model.set('paginate',{\r\n            ...formatDate\r\n        });\r\n\r\n        this.model.load();\r\n        \r\n    }\r\n    _onChange(field,value){\r\n\r\n        if(value!==''){\r\n            this.model.set('paginate',{\r\n              [field]:value\r\n            });\r\n        }else{ this.model.remove(field) }\r\n          \r\n        this.model.load(); \r\n    }\r\n\r\n    /* WHERE*/\r\n    _whereStateChange(newState){\r\n        \r\n        this.setState(Object.assign(this.state,newState));\r\n    }\r\n\r\n    async componentDidMount(){\r\n\r\n        this.model.load();\r\n\r\n        const resCom = await doGetModelInfo('companies',window.USERINFO.company_id);\r\n        if(resCom.name==='success'){\r\n            \r\n            this.setState({\r\n                companyInfo:resCom.data\r\n            });\r\n        }\r\n\r\n    }\r\n    componentWillReceiveProps(newProps){\r\n        this.grid.rowData = newProps[MODE]['list'];\r\n        \r\n        // CONNECT REDUX STATE \r\n        this._whereStateChange(newProps[MODE]['state']);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"animated fadeIn\">\r\n                <div className=\"blank-app\">\r\n                    \r\n\r\n                        <PrintForm\r\n                            width=\"72%\"\r\n                            data={this._curInfo}\r\n                            isOpen={ this.state.isOpenFormPrint }\r\n                            onToggle={(isOpen)=>{ this.setState({isOpenFormPrint:isOpen}) }}\r\n                            companyInfo={this.state.companyInfo}\r\n                        /> \r\n                        \r\n                        <DeleteForm  \r\n                            data={this._curInfo}\r\n                            isOpen={ this.state.isOpenDeleteForm }\r\n                            onToggle={(isOpen)=>{ this.setState({isOpenDeleteForm:isOpen}) }}\r\n                            model={this.model}\r\n                            onSubmitForm={(res)=>{ this._onSubmitForm(res) }}\r\n                        />\r\n\r\n                        <MyForm\r\n                            width=\"63%\"\r\n\r\n                            isOpen={this.state.isOpenForm}\r\n                            onToggle={(isOpen)=>{ this.setState({isOpenForm:isOpen}) }}\r\n\r\n                            model={this.model}\r\n                            receiptType={this.state.receiptType}\r\n                            typeAction={this.state.typeAction}\r\n                            onSubmitForm={ (res)=>{ this._onSubmitForm(res) }}\r\n\r\n                            data={this._curInfo}\r\n                        />\r\n\r\n                        <ReportForm\r\n                            isOpen={this.state.isOpenReportForm}\r\n                            onToggle={(isOpen)=>{ this.setState({isOpenReportForm:isOpen}) }}\r\n                            model={this.model}\r\n                            onSubmitForm={(res)=>{ this._onSubmitForm(res) }}\r\n                            data={this._curInfo}\r\n                        />\r\n\r\n                        <BenGrid\r\n\r\n                            onBtnEdit={(data)=>{ this._doOpenModalUpdate()  }}\r\n                            \r\n                            onCellSelected={(json)=>{ this._curInfo = json  }}\r\n        \r\n                            gridID='id'\r\n                            rowSelection='single'\r\n        \r\n                            isRightTool={ true }\r\n                            height=\"77.5vh\"\r\n        \r\n                            nextColums={ this.grid.colums }\r\n                            rowData={this.grid.rowData}\r\n                            model={ this.model }\r\n                            formStatus={ this.state.status }\r\n\r\n                            displayBtn={[]}\r\n\r\n                            customButton={\r\n                                <ButtonGroup>\r\n                                    \r\n                                    <Button \r\n                                        onClick={()=>{ this._doOpenModal('osv') }} className=\"btn btn-normal\">\r\n                                        <i className=\"fa fa-plus-circle mr-5\"></i> Phiếu Dịch vụ  \r\n                                    </Button>\r\n\r\n                                    {/*<Button \r\n                                        onClick={()=>{ this._doOpenModal('isv') }} className=\"btn btn-normal\">\r\n                                        <i className=\"fa fa-plus-circle mr-5\"></i> Phiếu tiếp nhận \r\n                                    </Button>*/}\r\n                                     \r\n                                    <ButtonExpandList onSelected={(item)=>{  this._callAction(item) }} data={ this.state.actions } />\r\n                                    \r\n                                    \r\n                                    <RankDatePicker onChange={(rank)=>{ this._loadWithDate(rank) }} />\r\n                                    \r\n                                    <ButtonExpand style={{borderRight:0}}  icon=\"fa-filter\">\r\n                                        \r\n                                        <FormGroup>\r\n                                            <Label> Loại Phiếu  </Label>\r\n                                            <Input type=\"select\" onChange={(e)=>{ this._onChange('type',e.target.value) }}>\r\n                                                <option value=\"\"> Tất cả </option>\r\n                                                <option value=\"osv\"> Phiếu dịch vụ </option>\r\n                                                <option value=\"isv\"> Phiếu tiếp nhận </option>\r\n                                            </Input>\r\n                                        </FormGroup>\r\n                                        <FormGroup>\r\n                                            <Label> Trạng thái </Label>\r\n                                            <Input type=\"select\" onChange={(e)=>{ this._onChange('status',e.target.value) }} >\r\n                                                <option value=\"\"> Tất cả </option>\r\n                                                <option value=\"0\"> Đang xử lý </option>\r\n                                                <option value=\"1\"> Hoàn tất </option>\r\n\r\n                                            </Input>\r\n\r\n                                        </FormGroup>\r\n\r\n                                    </ButtonExpand>\r\n                                    \r\n                                </ButtonGroup>\r\n                            \r\n                            }\r\n                            \r\n                        />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        [MODE]: state[MODE]\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Tickets) ; \r\n"]},"metadata":{},"sourceType":"module"}