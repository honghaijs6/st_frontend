{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\actions\\\\st_frontend\\\\src\\\\pages\\\\Order\\\\Setting\\\\productPage\\\\index.js\";\nimport { PRODUCT_TYPE_DECO, LIST_PRODUCT_TYPE } from '../../../../config/product.conf';\nimport { PRICE_SETTING } from '../../../../config/app.config';\n/* OBJECT - PLUGIN*/\n\nimport Model from '../../../../model/model';\n/*  HOOKS */\n\nimport { doGetModelInfo } from '../../../../hook/ultil';\nimport React, { Component } from 'react';\nimport { ButtonGroup, FormGroup } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport numeral from 'numeral';\n/* MODAL FORM & CTRL */\n\nimport MyForm from './Form';\nimport formCtrl from './formCtrl';\nimport FormFollow from './FormFollow';\n/*INCLUDE OTHER COMPONENT*/\n\nimport { BenGrid } from '../../../../components/BenGrid2';\nimport SelectListModel from '../../../../components/SelectListModel';\nimport SelectList from '../../../../components/SelectList';\nimport ButtonExpand from '../../../../components/ButtonExpand';\nimport ButtonImportXLS from '../../../../components/ButtonImportXLS';\nimport ButtonExportXLS from '../../../../components/ButtonExportXLS';\nimport ButtonExportXLSTemp from '../../../../components/ButtonExportXLSTemp';\nvar MODE = 'products';\nvar MODE_NAME = 'Sản phẩm';\nvar MODE_TAB = 'productPage';\n\nvar ProductPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProductPage, _Component);\n\n  function ProductPage(props) {\n    var _this;\n\n    _classCallCheck(this, ProductPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProductPage).call(this, props));\n    _this.state = {\n      typeAction: '',\n      // post - put - delete ...\n      onAction: '',\n      // string method\n      status: '',\n      // status\n      selectedData: {},\n      price_setting: {},\n      tab: MODE_TAB\n    };\n    _this.data = _defineProperty({}, MODE, []);\n    _this.grid = {\n      colums: [{\n        headerName: \"Mã\",\n        field: \"code\",\n        width: 140\n      }, {\n        headerName: \"Tên SP\",\n        field: \"name\",\n        width: 280\n      }, {\n        headerName: \"Loại\",\n        field: \"type\",\n        width: 100,\n        cellRenderer: function cellRenderer(params) {\n          return PRODUCT_TYPE_DECO[params.value];\n        }\n      }, {\n        headerName: \"Danh Mục\",\n        field: \"category\",\n        width: 140\n      }, {\n        headerName: \"Nhà Cung Cấp\",\n        field: \"supplier_codes\",\n        width: 160,\n        cellRenderer: function cellRenderer(params) {\n          return \"\\n              <i class=\\\"fa fa-user mr-5\\\"></i> \".concat(params.value, \"\\n            \");\n        }\n      }, {\n        headerName: \"Giá nhà máy\",\n        field: \"price_1\",\n        width: 140,\n        cellRenderer: function cellRenderer(params) {\n          var price_1 = numeral(params.value).format('0,0') + ' đ';\n          return \"<span class=\\\"text-green\\\"> \".concat(price_1, \" </span>\");\n        }\n      }, {\n        headerName: \"Giá gốc\",\n        field: \"price_2\",\n        width: 140,\n        cellRenderer: function cellRenderer(params) {\n          var price_2 = numeral(params.value).format('0,0') + ' đ';\n          return \"<span class=\\\"text-green\\\"> \".concat(price_2, \" </span>\");\n        }\n      }, {\n        headerName: \"Giá đại lý\",\n        field: \"price_3\",\n        width: 140,\n        cellRenderer: function cellRenderer(params) {\n          var price_3 = numeral(params.value).format('0,0') + ' đ';\n          return \"<span class=\\\"text-green\\\"> \".concat(price_3, \" </span>\");\n        }\n      }, {\n        headerName: \"Giá lẻ\",\n        field: \"price_4\",\n        width: 140,\n        cellRenderer: function cellRenderer(params) {\n          var price_4 = numeral(params.value).format('0,0') + ' đ';\n          return \"<span class=\\\"text-green\\\"> \".concat(price_4, \" </span>\");\n        }\n      }, {\n        headerName: \"ĐVT\",\n        field: \"unit_name\",\n        width: 100\n      }, {\n        headerName: \"BH\",\n        field: \"guran_month\",\n        width: 100\n      }, {\n        headerName: \"Serial\",\n        field: \"is_serial\",\n        width: 100\n      }, {\n        headerName: \"Người tạo\",\n        field: \"creator\",\n        width: 160,\n        cellRenderer: function cellRenderer(params) {\n          return \"\\n              <i class=\\\"fa fa-user mr-5\\\"></i> \".concat(params.value, \"\\n            \");\n        }\n      }, {\n        headerName: \"Ngày tạo\",\n        field: \"date_created\",\n        cellRenderer: function cellRenderer(params) {\n          var humanDate = moment(params.value).format('YYYY-MM-DD');\n          return \"\\n              \".concat(humanDate, \"\\n            \");\n        }\n      }],\n      rowData: []\n    };\n\n    _this._setup();\n\n    _this.onBtnNew = _this.onBtnNew.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ProductPage, [{\n    key: \"_setup\",\n    value: function _setup() {\n      this.model = new Model(MODE, this.props.dispatch);\n      this.model.set('method', {\n        name: 'listAll',\n        params: 'all'\n      });\n      this.modal = new formCtrl(this.model, this.props.dispatch);\n    }\n    /* HOW */\n\n  }, {\n    key: \"resetGrid\",\n    value: function resetGrid() {\n      this.grid.rowData = this.data[MODE];\n\n      this._whereStateChange({\n        selectedData: this.state.status === 'closed' ? {} : this.state.selectedData,\n        // update current selected data on close form\n        onAction: 'resetGrid'\n      });\n    }\n  }, {\n    key: \"_doOpenModalPost\",\n    value: function _doOpenModalPost() {\n      this.modal.open('post');\n    }\n  }, {\n    key: \"_doOpenModalUpdate\",\n    value: function () {\n      var _doOpenModalUpdate2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(data) {\n        var info;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return doGetModelInfo('products', data.id);\n\n              case 2:\n                info = _context.sent;\n                Object.assign(data, info.data);\n                this.modal.open('put', data);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function _doOpenModalUpdate(_x) {\n        return _doOpenModalUpdate2.apply(this, arguments);\n      }\n\n      return _doOpenModalUpdate;\n    }()\n    /* END HOW*/\n\n    /* WHEN*/\n\n  }, {\n    key: \"onBtnNew\",\n    value: function onBtnNew() {\n      this._doOpenModalPost();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var comInfo, price_setting;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                //this._isMounted = true;\n                this.model.initData(); // GET COMPANY INFO \n\n                _context2.next = 3;\n                return doGetModelInfo('companies', window.USERINFO.company_id);\n\n              case 3:\n                comInfo = _context2.sent;\n\n                if (comInfo.name === 'success') {\n                  price_setting = typeof comInfo.data.price_setting === 'string' ? JSON.parse(comInfo.data.price_setting) : PRICE_SETTING;\n                  this.setState({\n                    price_setting: price_setting\n                  });\n                }\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      // revice redux data\n      this.data[MODE] = newProps[MODE]['list'] || []; // UPDATE CURRRENT STATE \n\n      Object.assign(this.state, newProps[MODE]['state']);\n      this.resetGrid(); // HAD INSIDE setSatte \n    }\n    /* WHERE*/\n\n  }, {\n    key: \"_whereStateChange\",\n    value: function () {\n      var _whereStateChange2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(newState) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.setState(Object.assign(this.state, newState));\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function _whereStateChange(_x2) {\n        return _whereStateChange2.apply(this, arguments);\n      }\n\n      return _whereStateChange;\n    }()\n  }, {\n    key: \"_doFilter\",\n    value: function _doFilter(name, value) {\n      if (value !== '') {\n        this.model.set('paginate', _defineProperty({}, name, value));\n      } else {\n        this.model.remove(name);\n      }\n\n      this.model.load();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        hidden: this.props.onTab === this.state.tab ? false : true,\n        style: {\n          padding: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(MyForm, {\n        name: MODE_NAME,\n        modal: this.modal,\n        width: \"70%\",\n        price_setting: this.state.price_setting,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }), React.createElement(BenGrid, {\n        height: \"78vh\",\n        rowSelection: \"single\",\n        gridID: \"id\",\n        onBtnEdit: function onBtnEdit(data) {\n          _this2._doOpenModalUpdate(data);\n        },\n        onBtnAdd: this.onBtnNew,\n        formStatus: this.state.status,\n        isRightTool: true,\n        nextColums: this.grid.colums,\n        rowData: this.grid.rowData,\n        model: this.model,\n        onCellSelected: function onCellSelected(json) {\n          _this2.setState({\n            selectedData: json\n          });\n        },\n        customButton: React.createElement(ButtonGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276\n          },\n          __self: this\n        }, React.createElement(ButtonExportXLSTemp, {\n          strModel: MODE,\n          columns: ['code', 'name', 'type', 'supplier_codes', 'price_1', 'price_2', 'price_3', 'price_4', 'is_serial'],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278\n          },\n          __self: this\n        }), React.createElement(ButtonImportXLS, {\n          title: \"Import File Excel \",\n          strModel: MODE,\n          columns: ['code', 'name', 'type', 'supplier_codes', 'price_1', 'price_2', 'price_3', 'price_4', 'is_serial'],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284\n          },\n          __self: this\n        }), React.createElement(ButtonExportXLS, {\n          title: \"Export File Excel\",\n          strModel: MODE,\n          columns: ['code', 'name', 'type', 'supplier_codes', 'price_1', 'price_2', 'price_3', 'price_4', 'is_serial'],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290\n          },\n          __self: this\n        }), React.createElement(ButtonExpand, {\n          width: 720,\n          icon: \"fa-tags\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296\n          },\n          __self: this\n        }, React.createElement(FormFollow, {\n          data: this.state.selectedData,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297\n          },\n          __self: this\n        })), React.createElement(ButtonExpand, {\n          icon: \"fa-filter\",\n          style: {\n            borderRight: 0\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300\n          },\n          __self: this\n        }, React.createElement(FormGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 301\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 302\n          },\n          __self: this\n        }, \" Danh m\\u1EE5c \"), React.createElement(SelectListModel, {\n          onChange: function onChange(e) {\n            _this2._doFilter('categories_id', e.target.value);\n          },\n          name: \"T\\u1EA5t c\\u1EA3\",\n          strModel: \"categories\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 303\n          },\n          __self: this\n        })), React.createElement(FormGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306\n          },\n          __self: this\n        }, \" Lo\\u1EA1i h\\xECnh\"), React.createElement(SelectList, {\n          onChange: function onChange(e) {\n            _this2._doFilter('type', e.target.value);\n          },\n          name: \"T\\u1EA5t c\\u1EA3\",\n          style: {\n            borderRadius: 0\n          },\n          rows: LIST_PRODUCT_TYPE,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 307\n          },\n          __self: this\n        })))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ProductPage;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return _defineProperty({}, MODE, state[MODE]);\n}\n\nexport default connect(mapStateToProps)(ProductPage);","map":{"version":3,"sources":["D:/actions/st_frontend/src/pages/Order/Setting/productPage/index.js"],"names":["PRODUCT_TYPE_DECO","LIST_PRODUCT_TYPE","PRICE_SETTING","Model","doGetModelInfo","React","Component","ButtonGroup","FormGroup","connect","moment","numeral","MyForm","formCtrl","FormFollow","BenGrid","SelectListModel","SelectList","ButtonExpand","ButtonImportXLS","ButtonExportXLS","ButtonExportXLSTemp","MODE","MODE_NAME","MODE_TAB","ProductPage","props","state","typeAction","onAction","status","selectedData","price_setting","tab","data","grid","colums","headerName","field","width","cellRenderer","params","value","price_1","format","price_2","price_3","price_4","humanDate","rowData","_setup","onBtnNew","bind","model","dispatch","set","name","modal","_whereStateChange","open","id","info","Object","assign","_doOpenModalPost","initData","window","USERINFO","company_id","comInfo","JSON","parse","setState","newProps","resetGrid","newState","remove","load","onTab","padding","_doOpenModalUpdate","json","borderRight","e","_doFilter","target","borderRadius","mapStateToProps"],"mappings":"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","sourcesContent":["import {PRODUCT_TYPE_DECO,LIST_PRODUCT_TYPE} from '../../../../config/product.conf';\r\nimport { PRICE_SETTING } from '../../../../config/app.config'; \r\n\r\n/* OBJECT - PLUGIN*/\r\nimport Model from '../../../../model/model';\r\n\r\n/*  HOOKS */\r\nimport { doGetModelInfo } from '../../../../hook/ultil'\r\nimport React, { Component } from 'react';\r\nimport {ButtonGroup, FormGroup} from 'reactstrap';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nimport moment from 'moment';\r\nimport numeral from 'numeral';\r\n\r\n  \r\n\r\n/* MODAL FORM & CTRL */\r\nimport MyForm from './Form';\r\nimport formCtrl from './formCtrl';\r\n\r\nimport FormFollow from './FormFollow'; \r\n\r\n\r\n\r\n/*INCLUDE OTHER COMPONENT*/\r\nimport { BenGrid } from '../../../../components/BenGrid2';\r\nimport SelectListModel  from '../../../../components/SelectListModel';\r\nimport SelectList from '../../../../components/SelectList'; \r\n\r\nimport ButtonExpand from '../../../../components/ButtonExpand'; \r\n\r\nimport ButtonImportXLS from '../../../../components/ButtonImportXLS' ; \r\nimport ButtonExportXLS from '../../../../components/ButtonExportXLS';\r\nimport ButtonExportXLSTemp from '../../../../components/ButtonExportXLSTemp';\r\n\r\n\r\n\r\nconst MODE = 'products';\r\nconst MODE_NAME = 'Sản phẩm';\r\nconst MODE_TAB = 'productPage';\r\n\r\n\r\n\r\n\r\nclass ProductPage extends Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      typeAction:'', // post - put - delete ...\r\n      onAction:'', // string method\r\n      status:'', // status\r\n      \r\n      selectedData:{},\r\n      price_setting:{},\r\n\r\n      tab:MODE_TAB\r\n    }\r\n\r\n    this.data = {\r\n      [MODE]:[]\r\n    }\r\n\r\n    this.grid = {\r\n      colums:[\r\n        {headerName: \"Mã\", field: \"code\",width:140},\r\n        {headerName: \"Tên SP\", field: \"name\",width:280},\r\n        {headerName: \"Loại\", field: \"type\",width:100,\r\n          cellRenderer(params){\r\n\r\n            return PRODUCT_TYPE_DECO[params.value];\r\n          }\r\n        },\r\n        {headerName: \"Danh Mục\", field: \"category\",width:140},\r\n        {headerName: \"Nhà Cung Cấp\", field: \"supplier_codes\",width:160,\r\n          cellRenderer(params){\r\n            return `\r\n              <i class=\"fa fa-user mr-5\"></i> ${params.value}\r\n            `;\r\n          }\r\n        },\r\n\r\n        {headerName: \"Giá nhà máy\", field: \"price_1\",width:140,\r\n          cellRenderer(params){\r\n\r\n            const price_1 = numeral(params.value).format('0,0')+' đ';\r\n            return `<span class=\"text-green\"> ${price_1} </span>`\r\n          }\r\n        },\r\n        {headerName: \"Giá gốc\", field: \"price_2\",width:140,\r\n          cellRenderer(params){\r\n\r\n            const price_2 = numeral(params.value).format('0,0')+' đ';\r\n            return `<span class=\"text-green\"> ${price_2} </span>`\r\n          }\r\n        },\r\n        {headerName: \"Giá đại lý\", field: \"price_3\",width:140,\r\n          cellRenderer(params){\r\n\r\n            const price_3 = numeral(params.value).format('0,0')+' đ';\r\n            return `<span class=\"text-green\"> ${price_3} </span>`\r\n          }\r\n        },\r\n        {headerName: \"Giá lẻ\", field: \"price_4\",width:140,\r\n          cellRenderer(params){\r\n            const price_4 = numeral(params.value).format('0,0')+' đ';\r\n            return `<span class=\"text-green\"> ${price_4} </span>`\r\n          }\r\n        },\r\n        {headerName: \"ĐVT\", field: \"unit_name\",width:100},\r\n        {headerName: \"BH\", field: \"guran_month\",width:100},\r\n        {headerName: \"Serial\", field: \"is_serial\",width:100},\r\n        {headerName: \"Người tạo\", field: \"creator\",width:160,\r\n          cellRenderer(params){\r\n            return `\r\n              <i class=\"fa fa-user mr-5\"></i> ${params.value}\r\n            `;\r\n          }\r\n        },\r\n        {headerName: \"Ngày tạo\", field: \"date_created\",\r\n          cellRenderer(params){\r\n            const humanDate = moment(params.value).format('YYYY-MM-DD')\r\n            return `\r\n              ${ humanDate }\r\n            `\r\n          }\r\n        }\r\n\r\n      ],\r\n      rowData: []\r\n    }\r\n\r\n    this._setup();\r\n    this.onBtnNew = this.onBtnNew.bind(this)\r\n\r\n\r\n  }\r\n\r\n  _setup(){\r\n\r\n    this.model = new Model(MODE,this.props.dispatch);\r\n    this.model.set('method',{\r\n      name:'listAll',\r\n      params:'all'\r\n    });\r\n\r\n    this.modal = new formCtrl(this.model,this.props.dispatch);\r\n\r\n\r\n  }\r\n\r\n  /* HOW */\r\n  resetGrid(){\r\n\r\n      this.grid.rowData = this.data[MODE];\r\n      \r\n      this._whereStateChange({\r\n        selectedData: this.state.status === 'closed' ? {} : this.state.selectedData,  // update current selected data on close form\r\n        onAction:'resetGrid'\r\n      });\r\n\r\n\r\n  }\r\n\r\n  _doOpenModalPost(){\r\n\r\n    this.modal.open('post');\r\n    \r\n\r\n  }\r\n  async _doOpenModalUpdate(data){\r\n      \r\n      const info =  await doGetModelInfo('products',data.id);\r\n      Object.assign(data,info.data); \r\n      this.modal.open('put',data);\r\n      \r\n\r\n  }\r\n  /* END HOW*/\r\n\r\n  /* WHEN*/\r\n\r\n  onBtnNew(){\r\n    this._doOpenModalPost();\r\n  }\r\n\r\n  async componentDidMount(){\r\n    //this._isMounted = true;\r\n    this.model.initData();\r\n\r\n    // GET COMPANY INFO \r\n    const comInfo = await doGetModelInfo('companies',window.USERINFO.company_id);\r\n\r\n    if(comInfo.name==='success'){\r\n\r\n      let price_setting =  typeof comInfo.data.price_setting === 'string' ? JSON.parse(comInfo.data.price_setting) : PRICE_SETTING\r\n\r\n      this.setState({price_setting});\r\n      \r\n    }      \r\n\r\n    \r\n  }\r\n\r\n\r\n  componentWillReceiveProps(newProps){\r\n\r\n    // revice redux data\r\n    this.data[MODE] = newProps[MODE]['list'] || [] ;\r\n    // UPDATE CURRRENT STATE \r\n    Object.assign(this.state,newProps[MODE]['state']);\r\n    this.resetGrid(); // HAD INSIDE setSatte \r\n    \r\n\r\n  }\r\n\r\n  /* WHERE*/\r\n  async _whereStateChange(newState){\r\n    this.setState(Object.assign(this.state,newState));\r\n    \r\n  }\r\n\r\n  _doFilter(name,value){\r\n    \r\n    if(value!==''){\r\n      this.model.set('paginate',{\r\n        [name]:value\r\n      });\r\n    }else{\r\n      this.model.remove(name) ; \r\n    }\r\n\r\n    this.model.load(); \r\n      \r\n  }\r\n\r\n  render(){\r\n\r\n    \r\n\r\n    return(\r\n      <div hidden={  this.props.onTab === this.state.tab ? false : true } style={{padding:10}} >\r\n\r\n          <MyForm\r\n            name={ MODE_NAME }\r\n            \r\n            modal={this.modal}\r\n            width='70%'\r\n            \r\n            price_setting = {this.state.price_setting}\r\n\r\n          />\r\n          <BenGrid\r\n             \r\n             height='78vh'\r\n             rowSelection=\"single\"\r\n             gridID=\"id\"\r\n             onBtnEdit={(data)=>{ this._doOpenModalUpdate(data)  }}\r\n             onBtnAdd={this.onBtnNew} \r\n\r\n             formStatus={ this.state.status }\r\n\r\n             isRightTool={ true }\r\n             nextColums={ this.grid.colums }\r\n             rowData={this.grid.rowData}\r\n             model={ this.model }\r\n\r\n             onCellSelected={(json)=>{  this.setState({selectedData:json})  }}\r\n             \r\n\r\n             customButton={\r\n                  <ButtonGroup > \r\n\r\n                      <ButtonExportXLSTemp\r\n                        strModel={MODE}\r\n                        \r\n                        columns={['code','name','type','supplier_codes','price_1','price_2','price_3','price_4','is_serial']}\r\n                      />\r\n\r\n                      <ButtonImportXLS \r\n                         title=\"Import File Excel \"\r\n                         strModel={MODE}\r\n                         columns={ ['code','name','type','supplier_codes','price_1','price_2','price_3','price_4','is_serial'] }\r\n                      />\r\n \r\n                      <ButtonExportXLS  \r\n                        title=\"Export File Excel\"\r\n                        strModel={MODE}\r\n                        columns={ ['code','name','type','supplier_codes','price_1','price_2','price_3','price_4','is_serial'] }\r\n                      />\r\n\r\n                      <ButtonExpand width={720} icon=\"fa-tags\">\r\n                          <FormFollow data={this.state.selectedData} />\r\n                      </ButtonExpand>\r\n                      \r\n                      <ButtonExpand icon=\"fa-filter\" style={{borderRight:0}}>\r\n                          <FormGroup>\r\n                                <label> Danh mục </label>\r\n                                <SelectListModel onChange={(e)=>{ this._doFilter('categories_id',e.target.value) }} name=\"Tất cả\" strModel='categories' />\r\n                          </FormGroup>\r\n                          <FormGroup>\r\n                                <label> Loại hình</label>\r\n                                <SelectList onChange={(e)=>{ this._doFilter('type',e.target.value) }} name=\"Tất cả\" style={{borderRadius:0}} rows={ LIST_PRODUCT_TYPE } />\r\n\r\n                          </FormGroup>\r\n                          \r\n                      </ButtonExpand>     \r\n                      \r\n                  </ButtonGroup>\r\n                  \r\n             }\r\n          />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return {\r\n     [MODE]:state[MODE]\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(ProductPage)\r\n"]},"metadata":{},"sourceType":"module"}