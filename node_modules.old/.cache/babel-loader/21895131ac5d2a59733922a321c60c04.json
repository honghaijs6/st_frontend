{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\actions\\\\st_frontend\\\\src\\\\pages\\\\Inventory\\\\Receipt\\\\index.js\";\nimport { WAREHOUSE_RECEIPT, WAREHOUSE_TYPES, WAREHOUSE_TRACKS } from '../../../config/app.config';\nimport Model from '../../../model/model'; // HOOKS \n\nimport doGetModelInfo from '../../../hook/ultil/doGetModelInfo'; // LIBS \n\nimport moment from 'moment';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, ButtonGroup, FormGroup, Input, Label } from 'reactstrap';\nimport { BenGrid } from '../../../components/BenGrid2';\nimport BenMessage from '../../../components/BenMessage';\nimport ButtonExpand from '../../../components/ButtonExpand';\nimport ButtonExpandList from '../../../components/ButtonExpandList';\nimport SelectList from '../../../components/SelectList';\nimport RankDatePicker from '../../../components/RankDatePicker';\nimport ReceiptForm from './Form';\nimport DeleteForm from './DeleteForm';\nimport PrintForm from './PrintForm';\nvar MODE = 'warehouse_receipts';\n\nvar ReceiptWarehouse =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ReceiptWarehouse, _Component);\n\n  function ReceiptWarehouse(props) {\n    var _this;\n\n    _classCallCheck(this, ReceiptWarehouse);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ReceiptWarehouse).call(this, props));\n    _this._curInfo = {};\n    _this.state = {\n      typeAction: '',\n      onAction: '',\n      status: '',\n      isOpenForm: false,\n      isOpenDeleteForm: false,\n      isOpenPrintForm: false,\n      companyInfo: {},\n      receiptType: '',\n      actions: [{\n        code: 'update',\n        icon: 'fa-pencil',\n        name: 'Cập nhật phiếu'\n      }, {\n        code: 'remove',\n        icon: 'fa-trash',\n        name: 'Huỷ phiếu',\n        active: true\n      }, {\n        code: 'print',\n        icon: 'fa-print',\n        name: 'In phiếu'\n      }]\n    };\n    _this.grid = {\n      colums: [{\n        headerName: \"Phiếu\",\n        field: \"type\",\n        width: 120,\n        cellRenderer: function cellRenderer(params) {\n          return \"\\n                        <span class=\\\"badge \".concat(WAREHOUSE_TYPES[params.value]['code'], \" \\\"> \\n                            <i class=\\\"\").concat(WAREHOUSE_TYPES[params.value]['icon'], \" mr-5\\\"></i> \").concat(WAREHOUSE_TYPES[params.value]['name'], \" \\n                        </span>\\n                    \");\n        }\n      }, {\n        headerName: \"Mã phiếu\",\n        field: \"code_in\",\n        width: 150,\n        cellRenderer: function cellRenderer(params) {\n          var code = params.data.type === 'in' ? params.value : params.data.code_out;\n          return \"\\n                        <span class=\\\"text-uppercase\\\"> \".concat(code, \" </span>\\n                    \");\n        }\n      }, {\n        headerName: \"Trạng thái\",\n        field: \"status\",\n        width: 180,\n        cellRenderer: function cellRenderer(params) {\n          return \"\\n                        <span style=\\\"color:\".concat(WAREHOUSE_RECEIPT[params.value]['color'], \"\\\"> \\n                            <i class=\\\"mr-5 fa \").concat(WAREHOUSE_RECEIPT[params.value]['icon'], \" \\\"></i> \").concat(WAREHOUSE_RECEIPT[params.value]['name'], \" \\n                        </span>\\n                    \");\n        }\n      }, {\n        headerName: \"Số lượng\",\n        field: \"total\",\n        width: 120\n      }, {\n        headerName: \"Kho\",\n        field: \"warehouse_code\",\n        width: 140,\n        cellRenderer: function cellRenderer(params) {\n          return \"\\n                        <span class=\\\"text-uppercase\\\"> <i class=\\\"fa fa-home\\\"></i> \".concat(params.value, \" </span>\\n                    \");\n        }\n      }, {\n        headerName: \"Loại\",\n        field: \"track_code\",\n        width: 160,\n        cellRenderer: function cellRenderer(params) {\n          var name = '';\n          WAREHOUSE_TRACKS[params.data.type].map(function (item) {\n            if (params.value === item['code']) {\n              name = item['name'];\n            }\n          });\n          return \"\\n                        \".concat(name, \"\\n                    \");\n        }\n      }, {\n        headerName: \"Mã đơn hàng\",\n        field: \"order_code\",\n        width: 180,\n        cellRenderer: function cellRenderer(params) {\n          var code = params.data.type === 'in' ? params.data.purchase_code : params.value;\n          return \"<span class=\\\"text-uppercase\\\"> \".concat(code || 'n/a', \" </span>\");\n        }\n      }, {\n        headerName: \"Người tạo\",\n        field: \"creator\",\n        width: 200\n      }, {\n        headerName: \"Ngày Tạo\",\n        field: \"date_created\",\n        width: 140,\n        cellRenderer: function cellRenderer(params) {\n          var humanDate = params.value === null ? '<i class=\"fa fa-clock-o\"></i>' : moment(params.value).format('YYYY-MM-DD');\n          return \"\\n                        \".concat(humanDate, \"\\n                    \");\n        }\n      }, {\n        headerName: \"Ngày cập nhật\",\n        field: \"date_modified\",\n        width: 155,\n        cellRenderer: function cellRenderer(params) {\n          var humanDate = params.value === null ? '<i class=\"fa fa-clock-o\"></i>' : moment(params.value).format('YYYY-MM-DD');\n          return \"\\n                        \".concat(humanDate, \"\\n                    \");\n        }\n      }],\n      rowData: []\n    };\n\n    _this._setup();\n\n    return _this;\n  }\n\n  _createClass(ReceiptWarehouse, [{\n    key: \"_setup\",\n    value: function _setup() {\n      this.model = new Model(MODE, this.props.dispatch);\n    }\n  }, {\n    key: \"_doOpenModalUpdate\",\n    value: function _doOpenModalUpdate() {\n      this.setState({\n        receiptType: this.state.receiptType,\n        isOpenForm: true,\n        typeAction: 'put'\n      });\n    }\n  }, {\n    key: \"_doOpenModal\",\n    value: function _doOpenModal(receiptType) {\n      this.setState({\n        receiptType: receiptType,\n        isOpenForm: true,\n        typeAction: 'post'\n      });\n    }\n  }, {\n    key: \"_onSubmitForm\",\n    value: function _onSubmitForm(res) {\n      if (res.name === 'success' || res.name === 'ok') {\n        this._curInfo = {};\n        this.setState({\n          isOpenForm: false,\n          isOpenDeleteForm: false,\n          typeAction: '',\n          receiptType: '',\n          status: res.name\n        });\n      }\n    }\n  }, {\n    key: \"_callAction\",\n    value: function _callAction(item) {\n      document.querySelector('body').click();\n\n      if (JSON.stringify(this._curInfo) !== '{}') {\n        switch (item.code) {\n          case 'update':\n            this._doOpenModalUpdate();\n\n            break;\n\n          case 'remove':\n            this.setState({\n              isOpenDeleteForm: true\n            });\n            break;\n\n          case 'progress':\n            this.setState({\n              isOpenProgressForm: true\n            });\n            break;\n\n          case 'print':\n            this.setState({\n              isOpenPrintForm: true\n            });\n            break;\n        }\n      } else {\n        BenMessage({\n          title: 'Thông báo',\n          message: 'Vui lòng chọn chọn dữ liệu cần xử lý '\n        });\n      }\n    }\n  }, {\n    key: \"_loadWithDate\",\n    value: function _loadWithDate(jsonDate) {\n      var formatDate = {\n        start: moment(jsonDate.start).format('YYYY-MM-DD'),\n        end: moment(jsonDate.end).format('YYYY-MM-DD')\n      };\n      this.model.set('paginate', _objectSpread({}, formatDate));\n      this.model.load();\n    }\n  }, {\n    key: \"_onChange\",\n    value: function _onChange(field, value) {\n      if (value !== '') {\n        this.model.set('paginate', _defineProperty({}, field, value));\n      } else {\n        this.model.remove(field);\n      }\n\n      this.model.load();\n    }\n    /* WHERE*/\n\n  }, {\n    key: \"_whereStateChange\",\n    value: function _whereStateChange(newState) {\n      this.setState(Object.assign(this.state, newState));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var resCom;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.model.load();\n                _context.next = 3;\n                return doGetModelInfo('companies', window.USERINFO.company_id);\n\n              case 3:\n                resCom = _context.sent;\n\n                if (resCom.name === 'success') {\n                  this.setState({\n                    companyInfo: resCom.data\n                  });\n                }\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      this.grid.rowData = newProps[MODE]['list']; // CONNECT REDUX STATE \n\n      this._whereStateChange(newProps[MODE]['state']);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"blank-app \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(PrintForm, {\n        width: \"72%\",\n        data: this._curInfo,\n        isOpen: this.state.isOpenPrintForm,\n        onToggle: function onToggle(isOpen) {\n          _this2.setState({\n            isOpenPrintForm: isOpen\n          });\n        },\n        companyInfo: this.state.companyInfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }), React.createElement(DeleteForm, {\n        data: this._curInfo,\n        isOpen: this.state.isOpenDeleteForm,\n        onToggle: function onToggle(isOpen) {\n          _this2.setState({\n            isOpenDeleteForm: isOpen\n          });\n        },\n        model: this.model,\n        onSubmitForm: function onSubmitForm(res) {\n          _this2._onSubmitForm(res);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }), React.createElement(ReceiptForm, {\n        width: \"72%\",\n        isOpen: this.state.isOpenForm,\n        onToggle: function onToggle(isOpen) {\n          _this2.setState({\n            isOpenForm: isOpen\n          });\n        },\n        receiptType: this.state.receiptType,\n        typeAction: this.state.typeAction,\n        data: this._curInfo,\n        onSubmitForm: function onSubmitForm(res) {\n          _this2._onSubmitForm(res);\n        },\n        model: this.model,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }), React.createElement(BenGrid, {\n        onBtnEdit: function onBtnEdit(data) {\n          _this2._doOpenModalUpdate();\n        },\n        onBtnAdd: this._doOpenModal,\n        onCellSelected: function onCellSelected(json) {\n          _this2._curInfo = json;\n        },\n        gridID: \"id\",\n        rowSelection: \"single\",\n        isRightTool: true,\n        height: \"77.5vh\",\n        nextColums: this.grid.colums,\n        rowData: this.grid.rowData,\n        model: this.model,\n        formStatus: this.state.status,\n        displayBtn: [],\n        customButton: React.createElement(ButtonGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 332\n          },\n          __self: this\n        }, React.createElement(Button, {\n          onClick: function onClick() {\n            _this2._doOpenModal('in');\n          },\n          className: \"btn btn-normal\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 334\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fa fa-plus-circle mr-5\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 334\n          },\n          __self: this\n        }), \" T\\u1EA1o phi\\u1EBFu nh\\u1EADp \"), React.createElement(Button, {\n          onClick: function onClick() {\n            _this2._doOpenModal('out');\n          },\n          className: \"btn btn-normal\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 335\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fa fa-plus-circle mr-5\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 335\n          },\n          __self: this\n        }), \" T\\u1EA1o phi\\u1EBFu xu\\u1EA5t \"), React.createElement(ButtonExpandList, {\n          onSelected: function onSelected(item) {\n            _this2._callAction(item);\n          },\n          data: this.state.actions,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 337\n          },\n          __self: this\n        }), React.createElement(RankDatePicker, {\n          onChange: function onChange(rank) {\n            _this2._loadWithDate(rank);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 340\n          },\n          __self: this\n        }), React.createElement(ButtonExpand, {\n          style: {\n            borderRight: 0\n          },\n          icon: \"fa-filter\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 342\n          },\n          __self: this\n        }, React.createElement(FormGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 343\n          },\n          __self: this\n        }, React.createElement(Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 344\n          },\n          __self: this\n        }, \" Tr\\u1EA1ng th\\xE1i \"), React.createElement(SelectList, {\n          name: \"T\\u1EA5t C\\u1EA3\",\n          onChange: function onChange(e) {\n            _this2._onChange('status', e.target.value);\n          },\n          rows: WAREHOUSE_RECEIPT,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 345\n          },\n          __self: this\n        })), React.createElement(FormGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 347\n          },\n          __self: this\n        }, React.createElement(Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 348\n          },\n          __self: this\n        }, \" Phi\\u1EBFu  \"), React.createElement(Input, {\n          type: \"select\",\n          onChange: function onChange(e) {\n            _this2._onChange('type', e.target.value);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 349\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          value: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 350\n          },\n          __self: this\n        }, \" T\\u1EA5t c\\u1EA3 \"), React.createElement(\"option\", {\n          value: \"in\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 351\n          },\n          __self: this\n        }, \" Phi\\u1EBFu nh\\u1EADp \"), React.createElement(\"option\", {\n          value: \"out\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 352\n          },\n          __self: this\n        }, \" Phi\\u1EBFu xu\\u1EA5t \"))), React.createElement(FormGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 355\n          },\n          __self: this\n        }, React.createElement(Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 356\n          },\n          __self: this\n        }, \" Lo\\u1EA1i \"), React.createElement(Input, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 357\n          },\n          __self: this\n        })))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ReceiptWarehouse;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return _defineProperty({}, MODE, state[MODE]);\n};\n\nexport default connect(mapStateToProps)(ReceiptWarehouse);","map":{"version":3,"sources":["D:/actions/st_frontend/src/pages/Inventory/Receipt/index.js"],"names":["WAREHOUSE_RECEIPT","WAREHOUSE_TYPES","WAREHOUSE_TRACKS","Model","doGetModelInfo","moment","React","Component","connect","Button","ButtonGroup","FormGroup","Input","Label","BenGrid","BenMessage","ButtonExpand","ButtonExpandList","SelectList","RankDatePicker","ReceiptForm","DeleteForm","PrintForm","MODE","ReceiptWarehouse","props","_curInfo","state","typeAction","onAction","status","isOpenForm","isOpenDeleteForm","isOpenPrintForm","companyInfo","receiptType","actions","code","icon","name","active","grid","colums","headerName","field","width","cellRenderer","params","value","data","type","code_out","map","item","purchase_code","humanDate","format","rowData","_setup","model","dispatch","setState","res","document","querySelector","click","JSON","stringify","_doOpenModalUpdate","isOpenProgressForm","title","message","jsonDate","formatDate","start","end","set","load","remove","newState","Object","assign","window","USERINFO","company_id","resCom","newProps","_whereStateChange","isOpen","_onSubmitForm","_doOpenModal","json","_callAction","rank","_loadWithDate","borderRight","e","_onChange","target","mapStateToProps"],"mappings":"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","sourcesContent":["import { WAREHOUSE_RECEIPT, WAREHOUSE_TYPES, WAREHOUSE_TRACKS } from '../../../config/app.config';\r\nimport Model from '../../../model/model';\r\n\r\n// HOOKS \r\nimport doGetModelInfo from '../../../hook/ultil/doGetModelInfo';\r\n\r\n// LIBS \r\nimport moment from 'moment';\r\n\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux' ; \r\nimport { Button, ButtonGroup, FormGroup, Input, Label } from 'reactstrap'; \r\n\r\n\r\n\r\n\r\nimport { BenGrid } from '../../../components/BenGrid2' ; \r\n\r\nimport BenMessage from '../../../components/BenMessage'; \r\nimport ButtonExpand from '../../../components/ButtonExpand';\r\nimport ButtonExpandList from '../../../components/ButtonExpandList'; \r\n\r\nimport SelectList from '../../../components/SelectList'; \r\nimport RankDatePicker from '../../../components/RankDatePicker'; \r\n\r\n\r\nimport ReceiptForm from './Form'; \r\nimport DeleteForm from './DeleteForm'; \r\nimport PrintForm from './PrintForm'; \r\n\r\n\r\n\r\nconst MODE = 'warehouse_receipts';\r\n\r\n\r\nclass ReceiptWarehouse extends Component {\r\n\r\n    _curInfo = {} \r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            typeAction:'',\r\n            onAction:'',\r\n            status:'',\r\n            \r\n            isOpenForm:false,\r\n            isOpenDeleteForm:false,\r\n            isOpenPrintForm:false,\r\n            companyInfo:{},\r\n            receiptType:'',\r\n            actions:[\r\n                {code:'update',icon:'fa-pencil',name:'Cập nhật phiếu'},\r\n                {code:'remove',icon:'fa-trash',name:'Huỷ phiếu',active:true},\r\n                {code:'print',icon:'fa-print',name:'In phiếu'}\r\n            ]\r\n        }\r\n\r\n        this.grid = {\r\n            colums:[\r\n              {headerName: \"Phiếu\", field: \"type\",width:120,\r\n                cellRenderer(params){\r\n\r\n                    \r\n                    return `\r\n                        <span class=\"badge ${WAREHOUSE_TYPES[params.value]['code']} \"> \r\n                            <i class=\"${WAREHOUSE_TYPES[params.value]['icon']} mr-5\"></i> ${ WAREHOUSE_TYPES[params.value]['name'] } \r\n                        </span>\r\n                    `\r\n                }\r\n              },\r\n              {headerName: \"Mã phiếu\", field: \"code_in\",width:150,\r\n                cellRenderer(params){\r\n\r\n                    const code = params.data.type === 'in' ? params.value : params.data.code_out;\r\n                    return `\r\n                        <span class=\"text-uppercase\"> ${ code } </span>\r\n                    `\r\n                }\r\n              },\r\n              \r\n              {headerName: \"Trạng thái\", field: \"status\",width:180,\r\n                cellRenderer(params){\r\n                    return `\r\n                        <span style=\"color:${ WAREHOUSE_RECEIPT[params.value]['color'] }\"> \r\n                            <i class=\"mr-5 fa ${ WAREHOUSE_RECEIPT[params.value]['icon'] } \"></i> ${ WAREHOUSE_RECEIPT[params.value]['name'] } \r\n                        </span>\r\n                    `\r\n                }\r\n              },\r\n              {\r\n                headerName:\"Số lượng\", field:\"total\", width:120\r\n\r\n              },\r\n\r\n              {headerName: \"Kho\", field: \"warehouse_code\",width:140,\r\n\r\n                cellRenderer(params){\r\n                    return `\r\n                        <span class=\"text-uppercase\"> <i class=\"fa fa-home\"></i> ${params.value} </span>\r\n                    `\r\n                }\r\n\r\n              },\r\n              {headerName: \"Loại\", field: \"track_code\",width:160,\r\n\r\n                cellRenderer(params){\r\n\r\n                    let name = '';\r\n                    WAREHOUSE_TRACKS[ params.data.type ].map((item)=>{\r\n                        if( params.value ===item['code']){\r\n                            name = item['name']\r\n                        }\r\n                    });\r\n                    \r\n                    return `\r\n                        ${ name }\r\n                    `\r\n                }\r\n              },\r\n              {headerName: \"Mã đơn hàng\", field: \"order_code\",width:180,\r\n                cellRenderer(params){\r\n\r\n                    const code = params.data.type === 'in' ?  params.data.purchase_code  : params.value ;\r\n                    return `<span class=\"text-uppercase\"> ${ code || 'n/a' } </span>`\r\n                }\r\n              },\r\n              {headerName: \"Người tạo\", field: \"creator\",width:200},\r\n              {\r\n                headerName: \"Ngày Tạo\", field: \"date_created\",width:140,\r\n                cellRenderer(params){\r\n                    const humanDate =   params.value ===null ? '<i class=\"fa fa-clock-o\"></i>': moment(params.value).format('YYYY-MM-DD') ; \r\n                    return `\r\n                        ${ humanDate }\r\n                    `\r\n                }\r\n              },\r\n              {\r\n                  headerName:\"Ngày cập nhật\", field:\"date_modified\", width:155,\r\n                  cellRenderer(params){\r\n                    const humanDate =   params.value === null ? '<i class=\"fa fa-clock-o\"></i>': moment(params.value).format('YYYY-MM-DD') ; \r\n                    return `\r\n                        ${ humanDate }\r\n                    `\r\n                  }\r\n              }\r\n            ],\r\n            rowData: []\r\n        }\r\n        \r\n        this._setup(); \r\n        \r\n    }\r\n    \r\n    _setup(){\r\n        this.model = new Model(MODE,this.props.dispatch);\r\n    }\r\n\r\n    _doOpenModalUpdate(){\r\n        \r\n        this.setState({\r\n            receiptType:this.state.receiptType,\r\n            isOpenForm:true,\r\n            typeAction:'put'\r\n        });\r\n    }\r\n    _doOpenModal(receiptType){\r\n\r\n        this.setState({\r\n            receiptType:receiptType,\r\n            isOpenForm:true,\r\n            typeAction:'post'\r\n        });\r\n        \r\n\r\n    }\r\n    _onSubmitForm(res){\r\n        if(res.name==='success' || res.name==='ok'){\r\n           this._curInfo = {}\r\n\r\n           this.setState({\r\n               isOpenForm:false,\r\n               isOpenDeleteForm:false,\r\n               typeAction:'',\r\n               receiptType:'',\r\n               status:res.name\r\n           });\r\n\r\n        }\r\n    }\r\n    _callAction(item){\r\n        document.querySelector('body').click();\r\n        \r\n        if(JSON.stringify(this._curInfo)!=='{}'){\r\n            switch(item.code){\r\n\r\n                case 'update':\r\n                    this._doOpenModalUpdate() ; \r\n                break;\r\n\r\n                case 'remove':\r\n                    this.setState({\r\n                        isOpenDeleteForm:true\r\n                    });\r\n                \r\n                break ;\r\n\r\n                case 'progress':\r\n                    this.setState({\r\n                        isOpenProgressForm:true\r\n                    }); \r\n                break ;\r\n\r\n                case 'print':\r\n                    this.setState({\r\n                        isOpenPrintForm:true\r\n                    });\r\n                break;\r\n        \r\n            }\r\n        }else{ \r\n            BenMessage({\r\n            title:'Thông báo',\r\n            message:'Vui lòng chọn chọn dữ liệu cần xử lý '\r\n            }) ;\r\n        }\r\n    }\r\n    _loadWithDate(jsonDate){\r\n        const formatDate = {\r\n            start: moment(jsonDate.start).format('YYYY-MM-DD'),\r\n            end:moment(jsonDate.end).format('YYYY-MM-DD')\r\n         }\r\n        this.model.set('paginate',{\r\n            ...formatDate\r\n        });\r\n\r\n        this.model.load();\r\n        \r\n    }\r\n    _onChange(field,value){\r\n\r\n        if(value!==''){\r\n            this.model.set('paginate',{\r\n              [field]:value\r\n            });\r\n        }else{ this.model.remove(field) }\r\n          \r\n        this.model.load(); \r\n    }\r\n\r\n    /* WHERE*/\r\n    _whereStateChange(newState){\r\n        this.setState(Object.assign(this.state,newState));\r\n    }\r\n\r\n\r\n    async componentDidMount(){\r\n        this.model.load(); \r\n        const resCom = await doGetModelInfo('companies',window.USERINFO.company_id);\r\n\r\n        if(resCom.name==='success'){\r\n            this.setState({\r\n                companyInfo:resCom.data\r\n            });\r\n        }\r\n\r\n    }\r\n    componentWillReceiveProps(newProps){\r\n        this.grid.rowData = newProps[MODE]['list'];\r\n\r\n        // CONNECT REDUX STATE \r\n        this._whereStateChange(newProps[MODE]['state']);\r\n    }\r\n    render() {\r\n\r\n        \r\n        return (\r\n            <div className=\"animated fadeIn\">\r\n                <div className=\"blank-app \">\r\n                   \r\n\r\n\r\n                        <PrintForm\r\n                            width=\"72%\"\r\n                            data={this._curInfo}\r\n                            isOpen={ this.state.isOpenPrintForm }\r\n                            onToggle={ (isOpen)=>{ this.setState({isOpenPrintForm:isOpen}) } }\r\n                            companyInfo={this.state.companyInfo}\r\n                        />\r\n                        <DeleteForm  \r\n                            data={this._curInfo}\r\n                            isOpen={ this.state.isOpenDeleteForm }\r\n                            onToggle={(isOpen)=>{ this.setState({isOpenDeleteForm:isOpen}) }}\r\n                            model={this.model}\r\n                            onSubmitForm={(res)=>{ this._onSubmitForm(res) }}\r\n\r\n                        />\r\n                        <ReceiptForm \r\n\r\n                            \r\n                            width=\"72%\"\r\n                            isOpen={ this.state.isOpenForm }\r\n                            onToggle={(isOpen)=>{this.setState({isOpenForm:isOpen}) }}\r\n                            receiptType={ this.state.receiptType }\r\n                            typeAction={ this.state.typeAction }\r\n \r\n                            data={this._curInfo}\r\n                            onSubmitForm={ (res)=>{ this._onSubmitForm(res) }}\r\n                            model={this.model}\r\n                        />\r\n\r\n                        <BenGrid\r\n\r\n                            onBtnEdit={(data)=>{ this._doOpenModalUpdate()  }}\r\n                            onBtnAdd={ this._doOpenModal }\r\n                            onCellSelected={(json)=>{ this._curInfo = json  }}\r\n        \r\n                            gridID='id'\r\n                            rowSelection='single'\r\n        \r\n                            isRightTool={ true }\r\n                            height=\"77.5vh\"\r\n        \r\n                            nextColums={ this.grid.colums }\r\n                            rowData={this.grid.rowData}\r\n                            model={ this.model }\r\n                            formStatus={ this.state.status }\r\n                            displayBtn={[]}\r\n\r\n                            customButton={\r\n                                <ButtonGroup>\r\n                                    \r\n                                    <Button onClick={()=>{ this._doOpenModal('in') }} className=\"btn btn-normal\"><i className=\"fa fa-plus-circle mr-5\"></i> Tạo phiếu nhập </Button>\r\n                                    <Button onClick={()=>{ this._doOpenModal('out') }} className=\"btn btn-normal\"><i className=\"fa fa-plus-circle mr-5\"></i> Tạo phiếu xuất </Button>\r\n                                    \r\n                                    <ButtonExpandList onSelected={(item)=>{  this._callAction(item) }} data={ this.state.actions } />\r\n                                    \r\n                                    \r\n                                    <RankDatePicker onChange={(rank)=>{ this._loadWithDate(rank) }} />\r\n                                    \r\n                                    <ButtonExpand style={{borderRight:0}}  icon=\"fa-filter\">\r\n                                        <FormGroup>\r\n                                            <Label> Trạng thái </Label>\r\n                                            <SelectList name=\"Tất Cả\" onChange={(e)=>{ this._onChange('status',e.target.value) }}  rows={ WAREHOUSE_RECEIPT } />\r\n                                        </FormGroup>\r\n                                        <FormGroup>\r\n                                            <Label> Phiếu  </Label>\r\n                                            <Input type=\"select\" onChange={(e)=>{ this._onChange('type',e.target.value) }}>\r\n                                                <option value=\"\"> Tất cả </option>\r\n                                                <option value=\"in\"> Phiếu nhập </option>\r\n                                                <option value=\"out\"> Phiếu xuất </option>\r\n                                            </Input>\r\n                                        </FormGroup>\r\n                                        <FormGroup>\r\n                                            <Label> Loại </Label>\r\n                                            <Input />\r\n\r\n                                        </FormGroup>\r\n\r\n                                    </ButtonExpand>\r\n                                    \r\n                                </ButtonGroup>\r\n                            \r\n                            }\r\n                            \r\n                        />\r\n                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        [MODE]: state[MODE]\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ReceiptWarehouse); \r\n"]},"metadata":{},"sourceType":"module"}