{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\actions\\\\st_frontend\\\\src\\\\pages\\\\Order\\\\Setting\\\\supplierPage\\\\index.js\";\n\n/*\r\nsupplier page\r\n*/\n\n/* OBJECT - PLUGIN*/\nimport Model from '../../../../model/model';\nimport React, { Component } from 'react';\nimport { ButtonGroup, FormGroup } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n/*............*/\n\n/* MODAL FORM & CTRL */\n\nimport MyForm from './Form';\nimport formCtrl from './formCtrl';\n/*INCLUDE OTHER COMPONENT*/\n\nimport { BenGrid } from '../../../../components/BenGrid2';\nimport ButtonImportXLS from '../../../../components/ButtonImportXLS';\nimport ButtonExportXLS from '../../../../components/ButtonExportXLS';\nimport ButtonExportXLSTemp from '../../../../components/ButtonExportXLSTemp';\nvar MODE = 'suppliers';\nvar MODE_NAME = 'Nhà cung cấp';\nvar MODE_TAB = 'supplierPage';\n\nvar SupplierPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SupplierPage, _Component);\n\n  function SupplierPage(props) {\n    var _this;\n\n    _classCallCheck(this, SupplierPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SupplierPage).call(this, props));\n\n    _this._onComplete = function (isFinish) {\n      if (isFinish) {\n        _this._doInitData();\n      }\n    };\n\n    _this.state = {\n      typeAction: '',\n      // post - put - delete ...\n      onAction: '',\n      // string method\n      status: '',\n      // status\n      tab: MODE_TAB,\n      isIniData: false\n    };\n    _this.data = _defineProperty({}, MODE, []);\n    _this.grid = {\n      colums: [{\n        headerName: \"Mã\",\n        field: \"code\",\n        width: 150\n      }, {\n        headerName: \"Tên công ty\",\n        field: \"name\",\n        width: 300\n      }, {\n        headerName: \"Loại hình\",\n        field: \"type\",\n        width: 140\n      }, {\n        headerName: \"Cho công nợ\",\n        field: \"dept\",\n        width: 150\n      }, {\n        headerName: \"Sản phẩm\",\n        field: \"total_product\",\n        width: 150\n      }, {\n        headerName: \"Người liên hệ\",\n        field: \"contact_name\",\n        width: 200\n      }, {\n        headerName: \"Số ĐT\",\n        field: \"phone\",\n        width: 150\n      }, {\n        headerName: \"Email\",\n        field: \"email\",\n        width: 200\n      }, {\n        headerName: \"Người tạo\",\n        field: \"creator\",\n        width: 200\n      }, {\n        headerName: \"Ngày tạo\",\n        field: \"date_created\",\n        width: 150,\n        cellRenderer: function cellRenderer(params) {\n          var humanDate = moment(params.value).format('YYYY-MM-DD');\n          return \"\\n             \".concat(humanDate, \"\\n           \");\n        }\n      }, {\n        headerName: \"Hiệu chỉnh\",\n        field: \"date_modified\",\n        width: 150,\n        cellRenderer: function cellRenderer(params) {\n          var humanDate = params.value !== null ? moment(params.value).format('YYYY-MM-DD') : '';\n          return \"\\n             \".concat(humanDate, \"\\n           \");\n        }\n      }],\n      rowData: []\n    };\n\n    _this._setup();\n\n    _this.onBtnNew = _this.onBtnNew.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this._doOpenModalUpdate = _this._doOpenModalUpdate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(SupplierPage, [{\n    key: \"_setup\",\n    value: function _setup() {\n      this.model = new Model(MODE, this.props.dispatch);\n      this.model.set('method', {\n        name: 'listAll',\n        params: 'all'\n      });\n      this.modal = new formCtrl(this.model, this.props.dispatch);\n    }\n    /* HOW */\n\n  }, {\n    key: \"_doInitData\",\n    value: function () {\n      var _doInitData2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.model.initData();\n\n              case 2:\n                this._whereStateChange({\n                  isIniData: true\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function _doInitData() {\n        return _doInitData2.apply(this, arguments);\n      }\n\n      return _doInitData;\n    }()\n  }, {\n    key: \"resetGrid\",\n    value: function resetGrid() {\n      this.grid.rowData = this.data[MODE];\n\n      this._whereStateChange({\n        onAction: 'resetGrid'\n      });\n    }\n  }, {\n    key: \"_doOpenModalPost\",\n    value: function _doOpenModalPost() {\n      this.modal.open('post');\n    }\n  }, {\n    key: \"_doOpenModalUpdate\",\n    value: function _doOpenModalUpdate(data) {\n      this._whereStateChange({\n        typeAction: 'put',\n        onAction: '_doOpenModalUpdate'\n      });\n\n      this.modal.open('put', data);\n    }\n    /* END HOW*/\n\n    /* WHEN*/\n\n  }, {\n    key: \"onBtnNew\",\n    value: function onBtnNew() {\n      this._doOpenModalPost();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {//this.unsubscribe();\n      //this.state.isIniData = false ;\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      if (!this.state.isIniData) {\n        this._doInitData();\n      }\n\n      this.data[MODE] = newProps[MODE]['list'] || []; // UPDATE STATE FORM DATA\n\n      Object.assign(this.state, newProps[MODE]['state']);\n      this.resetGrid();\n    }\n    /* WHERE*/\n\n  }, {\n    key: \"_whereStateChange\",\n    value: function _whereStateChange(newState) {\n      this.setState(Object.assign(this.state, newState));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        hidden: this.props.onTab === this.state.tab ? false : true,\n        style: {\n          padding: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(MyForm, {\n        width: \"60%\",\n        name: MODE_NAME,\n        modal: this.modal,\n        status: this.state.status,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }), React.createElement(BenGrid, {\n        height: \"78vh\",\n        gridID: \"id\",\n        rowSelection: \"single\",\n        formStatus: this.state.status,\n        onBtnEdit: this._doOpenModalUpdate,\n        onBtnAdd: this.onBtnNew,\n        isRightTool: true,\n        nextColums: this.grid.colums,\n        rowData: this.grid.rowData,\n        model: this.model,\n        customButton: React.createElement(ButtonGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        }, React.createElement(ButtonExportXLSTemp, {\n          strModel: MODE,\n          columns: ['code', 'name', 'tax_no', 'address', 'subregion_code', 'region_code', 'address_2', 'phone'],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        }), React.createElement(ButtonImportXLS, {\n          title: \"Upload file\",\n          strModel: MODE,\n          columns: ['code', 'name', 'tax_no', 'address', 'subregion_code', 'region_code', 'address_2', 'phone'],\n          onComplete: this._onComplete,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237\n          },\n          __self: this\n        }), React.createElement(ButtonExportXLS, {\n          style: {\n            borderRadius: 0,\n            borderRight: 0\n          },\n          title: \"Download file\",\n          strModel: MODE,\n          columns: ['code', 'name', 'tax_no', 'address', 'subregion_code', 'region_code', 'address_2', 'phone'],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return SupplierPage;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return _defineProperty({}, MODE, state[MODE]);\n}\n\nexport default connect(mapStateToProps)(SupplierPage);","map":{"version":3,"sources":["D:/actions/st_frontend/src/pages/Order/Setting/supplierPage/index.js"],"names":["Model","React","Component","ButtonGroup","FormGroup","connect","moment","MyForm","formCtrl","BenGrid","ButtonImportXLS","ButtonExportXLS","ButtonExportXLSTemp","MODE","MODE_NAME","MODE_TAB","SupplierPage","props","_onComplete","isFinish","_doInitData","state","typeAction","onAction","status","tab","isIniData","data","grid","colums","headerName","field","width","cellRenderer","params","humanDate","value","format","rowData","_setup","onBtnNew","bind","_doOpenModalUpdate","model","dispatch","set","name","modal","initData","_whereStateChange","open","_doOpenModalPost","newProps","Object","assign","resetGrid","newState","setState","onTab","padding","borderRadius","borderRight","mapStateToProps"],"mappings":";;;;;;;;;;;AACA;;;;AAIA;AACA,OAAOA,KAAP,MAAkB,yBAAlB;AAEA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,WAAR,EAAqBC,SAArB,QAAqC,YAArC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,MAAP,MAAmB,QAAnB;AAEA;;AAGA;;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA;;AACA,SAASC,OAAT,QAAwB,iCAAxB;AAEA,OAAOC,eAAP,MAA4B,wCAA5B;AACA,OAAOC,eAAP,MAA4B,wCAA5B;AACA,OAAOC,mBAAP,MAAgC,4CAAhC;AAGA,IAAMC,IAAI,GAAG,WAAb;AACA,IAAMC,SAAS,GAAG,cAAlB;AACA,IAAMC,QAAQ,GAAG,cAAjB;;IAEMC,Y;;;;;AAGJ,wBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,sFAAMA,KAAN;;AADgB,UA0JlBC,WA1JkB,GA0JJ,UAACC,QAAD,EAAa;AACzB,UAAGA,QAAH,EAAY;AACV,cAAKC,WAAL;AAED;AACF,KA/JiB;;AAGhB,UAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAC,EADA;AACI;AACfC,MAAAA,QAAQ,EAAC,EAFE;AAEE;AACbC,MAAAA,MAAM,EAAC,EAHI;AAGA;AAEXC,MAAAA,GAAG,EAACV,QALO;AAMXW,MAAAA,SAAS,EAAC;AANC,KAAb;AASA,UAAKC,IAAL,uBACGd,IADH,EACS,EADT;AAIA,UAAKe,IAAL,GAAY;AACVC,MAAAA,MAAM,EAAC,CACL;AAACC,QAAAA,UAAU,EAAE,IAAb;AAAmBC,QAAAA,KAAK,EAAE,MAA1B;AAAiCC,QAAAA,KAAK,EAAC;AAAvC,OADK,EAEL;AAACF,QAAAA,UAAU,EAAE,aAAb;AAA4BC,QAAAA,KAAK,EAAE,MAAnC;AAA0CC,QAAAA,KAAK,EAAC;AAAhD,OAFK,EAGL;AAACF,QAAAA,UAAU,EAAE,WAAb;AAA0BC,QAAAA,KAAK,EAAE,MAAjC;AAAwCC,QAAAA,KAAK,EAAC;AAA9C,OAHK,EAIL;AAACF,QAAAA,UAAU,EAAE,aAAb;AAA4BC,QAAAA,KAAK,EAAE,MAAnC;AAA0CC,QAAAA,KAAK,EAAC;AAAhD,OAJK,EAML;AAACF,QAAAA,UAAU,EAAE,UAAb;AAAyBC,QAAAA,KAAK,EAAE,eAAhC;AAAgDC,QAAAA,KAAK,EAAC;AAAtD,OANK,EAQL;AAACF,QAAAA,UAAU,EAAE,eAAb;AAA8BC,QAAAA,KAAK,EAAE,cAArC;AAAoDC,QAAAA,KAAK,EAAC;AAA1D,OARK,EASL;AAACF,QAAAA,UAAU,EAAE,OAAb;AAAsBC,QAAAA,KAAK,EAAE,OAA7B;AAAqCC,QAAAA,KAAK,EAAC;AAA3C,OATK,EAUL;AAACF,QAAAA,UAAU,EAAE,OAAb;AAAsBC,QAAAA,KAAK,EAAE,OAA7B;AAAqCC,QAAAA,KAAK,EAAC;AAA3C,OAVK,EAYL;AAACF,QAAAA,UAAU,EAAE,WAAb;AAA0BC,QAAAA,KAAK,EAAE,SAAjC;AAA2CC,QAAAA,KAAK,EAAC;AAAjD,OAZK,EAaL;AAACF,QAAAA,UAAU,EAAE,UAAb;AAAyBC,QAAAA,KAAK,EAAE,cAAhC;AAA+CC,QAAAA,KAAK,EAAC,GAArD;AAEEC,QAAAA,YAFF,wBAEeC,MAFf,EAEsB;AAElB,cAAMC,SAAS,GAAG7B,MAAM,CAAC4B,MAAM,CAACE,KAAR,CAAN,CAAqBC,MAArB,CAA4B,YAA5B,CAAlB;AACA,0CACIF,SADJ;AAGD;AARH,OAbK,EAwBL;AAACL,QAAAA,UAAU,EAAE,YAAb;AAA2BC,QAAAA,KAAK,EAAE,eAAlC;AAAkDC,QAAAA,KAAK,EAAC,GAAxD;AAEEC,QAAAA,YAFF,wBAEeC,MAFf,EAEsB;AAElB,cAAMC,SAAS,GAAGD,MAAM,CAACE,KAAP,KAAiB,IAAjB,GAAwB9B,MAAM,CAAC4B,MAAM,CAACE,KAAR,CAAN,CAAqBC,MAArB,CAA4B,YAA5B,CAAxB,GAAmE,EAArF;AACA,0CACIF,SADJ;AAGD;AARH,OAxBK,CADG;AAuCVG,MAAAA,OAAO,EAAE;AAvCC,KAAZ;;AA0CA,UAAKC,MAAL;;AAEA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,uDAAhB;AACA,UAAKC,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBD,IAAxB,uDAA1B;AA7DgB;AAgEjB;;;;6BAEO;AAEN,WAAKE,KAAL,GAAa,IAAI3C,KAAJ,CAAUa,IAAV,EAAe,KAAKI,KAAL,CAAW2B,QAA1B,CAAb;AAEA,WAAKD,KAAL,CAAWE,GAAX,CAAe,QAAf,EAAwB;AACtBC,QAAAA,IAAI,EAAC,SADiB;AAEtBZ,QAAAA,MAAM,EAAC;AAFe,OAAxB;AAKA,WAAKa,KAAL,GAAa,IAAIvC,QAAJ,CAAa,KAAKmC,KAAlB,EAAwB,KAAK1B,KAAL,CAAW2B,QAAnC,CAAb;AAGD;AAED;;;;;;;;;;;;;uBAIQ,KAAKD,KAAL,CAAWK,QAAX,E;;;AAEN,qBAAKC,iBAAL,CAAuB;AACrBvB,kBAAAA,SAAS,EAAC;AADW,iBAAvB;;;;;;;;;;;;;;;;;;gCAMS;AAGP,WAAKE,IAAL,CAAUU,OAAV,GAAoB,KAAKX,IAAL,CAAUd,IAAV,CAApB;;AACA,WAAKoC,iBAAL,CAAuB;AACrB1B,QAAAA,QAAQ,EAAC;AADY,OAAvB;AAKH;;;uCAEiB;AAGhB,WAAKwB,KAAL,CAAWG,IAAX,CAAgB,MAAhB;AACD;;;uCACkBvB,I,EAAK;AAEtB,WAAKsB,iBAAL,CAAuB;AACrB3B,QAAAA,UAAU,EAAC,KADU;AAErBC,QAAAA,QAAQ,EAAC;AAFY,OAAvB;;AAKA,WAAKwB,KAAL,CAAWG,IAAX,CAAgB,KAAhB,EAAsBvB,IAAtB;AAGD;AACD;;AAEA;;;;+BAEU;AACR,WAAKwB,gBAAL;AACD;;;2CAGsB,CACrB;AACA;AACD;;;8CAEyBC,Q,EAAS;AAEjC,UAAG,CAAC,KAAK/B,KAAL,CAAWK,SAAf,EAAyB;AACvB,aAAKN,WAAL;AACD;;AAED,WAAKO,IAAL,CAAUd,IAAV,IAAkBuC,QAAQ,CAACvC,IAAD,CAAR,CAAe,MAAf,KAA0B,EAA5C,CANiC,CAOjC;;AACAwC,MAAAA,MAAM,CAACC,MAAP,CAAc,KAAKjC,KAAnB,EAAyB+B,QAAQ,CAACvC,IAAD,CAAR,CAAe,OAAf,CAAzB;AACA,WAAK0C,SAAL;AAID;AAED;;;;sCACkBC,Q,EAAS;AACzB,WAAKC,QAAL,CAAcJ,MAAM,CAACC,MAAP,CAAc,KAAKjC,KAAnB,EAAyBmC,QAAzB,CAAd;AACD;;;6BASO;AAGN,aACE;AAAK,QAAA,MAAM,EAAI,KAAKvC,KAAL,CAAWyC,KAAX,KAAqB,KAAKrC,KAAL,CAAWI,GAAhC,GAAsC,KAAtC,GAA8C,IAA7D;AAAoE,QAAA,KAAK,EAAE;AAACkC,UAAAA,OAAO,EAAC;AAAT,SAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,MAAD;AACE,QAAA,KAAK,EAAC,KADR;AAEE,QAAA,IAAI,EAAG7C,SAFT;AAIE,QAAA,KAAK,EAAE,KAAKiC,KAJd;AAKE,QAAA,MAAM,EAAE,KAAK1B,KAAL,CAAWG,MALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAUI,oBAAC,OAAD;AAEG,QAAA,MAAM,EAAC,MAFV;AAGG,QAAA,MAAM,EAAC,IAHV;AAIG,QAAA,YAAY,EAAC,QAJhB;AAMG,QAAA,UAAU,EAAG,KAAKH,KAAL,CAAWG,MAN3B;AAQG,QAAA,SAAS,EAAG,KAAKkB,kBARpB;AASG,QAAA,QAAQ,EAAE,KAAKF,QATlB;AAWG,QAAA,WAAW,EAAG,IAXjB;AAaG,QAAA,UAAU,EAAG,KAAKZ,IAAL,CAAUC,MAb1B;AAcG,QAAA,OAAO,EAAE,KAAKD,IAAL,CAAUU,OAdtB;AAeG,QAAA,KAAK,EAAG,KAAKK,KAfhB;AAiBG,QAAA,YAAY,EACT,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEI,oBAAC,mBAAD;AACE,UAAA,QAAQ,EAAE9B,IADZ;AAEE,UAAA,OAAO,EAAE,CAAC,MAAD,EAAQ,MAAR,EAAe,QAAf,EAAwB,SAAxB,EAAkC,gBAAlC,EAAmD,aAAnD,EAAiE,WAAjE,EAA6E,OAA7E,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,EAOI,oBAAC,eAAD;AACI,UAAA,KAAK,EAAC,aADV;AAEI,UAAA,QAAQ,EAAEA,IAFd;AAGI,UAAA,OAAO,EAAG,CAAC,MAAD,EAAQ,MAAR,EAAe,QAAf,EAAwB,SAAxB,EAAkC,gBAAlC,EAAmD,aAAnD,EAAiE,WAAjE,EAA6E,OAA7E,CAHd;AAII,UAAA,UAAU,EAAG,KAAKK,WAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPJ,EAcI,oBAAC,eAAD;AACE,UAAA,KAAK,EAAE;AACL0C,YAAAA,YAAY,EAAC,CADR;AAELC,YAAAA,WAAW,EAAC;AAFP,WADT;AAKE,UAAA,KAAK,EAAC,eALR;AAME,UAAA,QAAQ,EAAEhD,IANZ;AAOE,UAAA,OAAO,EAAG,CAAC,MAAD,EAAQ,MAAR,EAAe,QAAf,EAAwB,SAAxB,EAAkC,gBAAlC,EAAmD,aAAnD,EAAiE,WAAjE,EAA6E,OAA7E,CAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAdJ,CAlBN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVJ,CADF;AA0DD;;;;EAhOwBX,S;;AAmO3B,SAAS4D,eAAT,CAAyBzC,KAAzB,EAA+B;AAC7B,6BACIR,IADJ,EACUQ,KAAK,CAACR,IAAD,CADf;AAGD;;AAED,eAAeR,OAAO,CAACyD,eAAD,CAAP,CAAyB9C,YAAzB,CAAf","sourcesContent":["\r\n/*\r\nsupplier page\r\n*/\r\n\r\n/* OBJECT - PLUGIN*/\r\nimport Model from '../../../../model/model';\r\n\r\nimport React, { Component } from 'react';\r\nimport {ButtonGroup, FormGroup} from 'reactstrap'\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport moment from 'moment';\r\n\r\n/*............*/\r\n\r\n\r\n/* MODAL FORM & CTRL */\r\nimport MyForm from './Form';\r\nimport formCtrl from './formCtrl';\r\n\r\n/*INCLUDE OTHER COMPONENT*/\r\nimport { BenGrid } from '../../../../components/BenGrid2';\r\n\r\nimport ButtonImportXLS from '../../../../components/ButtonImportXLS' ; \r\nimport ButtonExportXLS from '../../../../components/ButtonExportXLS';\r\nimport ButtonExportXLSTemp from '../../../../components/ButtonExportXLSTemp' ; \r\n\r\n\r\nconst MODE = 'suppliers';\r\nconst MODE_NAME = 'Nhà cung cấp';\r\nconst MODE_TAB = 'supplierPage';\r\n\r\nclass SupplierPage extends Component{\r\n\r\n  \r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      typeAction:'', // post - put - delete ...\r\n      onAction:'', // string method\r\n      status:'', // status\r\n\r\n      tab:MODE_TAB,\r\n      isIniData:false\r\n    }\r\n\r\n    this.data = {\r\n      [MODE]:[]\r\n    }\r\n\r\n    this.grid = {\r\n      colums:[\r\n        {headerName: \"Mã\", field: \"code\",width:150},\r\n        {headerName: \"Tên công ty\", field: \"name\",width:300},\r\n        {headerName: \"Loại hình\", field: \"type\",width:140},\r\n        {headerName: \"Cho công nợ\", field: \"dept\",width:150},\r\n        \r\n        {headerName: \"Sản phẩm\", field: \"total_product\",width:150},\r\n        \r\n        {headerName: \"Người liên hệ\", field: \"contact_name\",width:200},\r\n        {headerName: \"Số ĐT\", field: \"phone\",width:150},\r\n        {headerName: \"Email\", field: \"email\",width:200},\r\n        \r\n        {headerName: \"Người tạo\", field: \"creator\",width:200},\r\n        {headerName: \"Ngày tạo\", field: \"date_created\",width:150,\r\n\r\n          cellRenderer(params){\r\n\r\n            const humanDate = moment(params.value).format('YYYY-MM-DD');\r\n            return `\r\n             ${ humanDate }\r\n           `\r\n          }\r\n\r\n        },\r\n        {headerName: \"Hiệu chỉnh\", field: \"date_modified\",width:150,\r\n\r\n          cellRenderer(params){\r\n\r\n            const humanDate = params.value !== null ? moment(params.value).format('YYYY-MM-DD') :''\r\n            return `\r\n             ${ humanDate }\r\n           `\r\n          }\r\n\r\n        },\r\n        \r\n\r\n      ],\r\n      rowData: []\r\n    }\r\n\r\n    this._setup();\r\n\r\n    this.onBtnNew = this.onBtnNew.bind(this)\r\n    this._doOpenModalUpdate = this._doOpenModalUpdate.bind(this);\r\n\r\n\r\n  }\r\n\r\n  _setup(){\r\n\r\n    this.model = new Model(MODE,this.props.dispatch);\r\n\r\n    this.model.set('method',{\r\n      name:'listAll',\r\n      params:'all'\r\n    });\r\n\r\n    this.modal = new formCtrl(this.model,this.props.dispatch);\r\n\r\n\r\n  }\r\n\r\n  /* HOW */\r\n\r\n  async _doInitData(){\r\n\r\n    await this.model.initData();\r\n    \r\n    this._whereStateChange({\r\n      isIniData:true\r\n    })\r\n\r\n  }\r\n\r\n  resetGrid(){\r\n\r\n\r\n      this.grid.rowData = this.data[MODE] ;\r\n      this._whereStateChange({\r\n        onAction:'resetGrid'\r\n      });\r\n\r\n\r\n  }\r\n\r\n  _doOpenModalPost(){\r\n\r\n    \r\n    this.modal.open('post');\r\n  }\r\n  _doOpenModalUpdate(data){\r\n\r\n    this._whereStateChange({\r\n      typeAction:'put',\r\n      onAction:'_doOpenModalUpdate'\r\n    });\r\n\r\n    this.modal.open('put',data);\r\n\r\n\r\n  }\r\n  /* END HOW*/\r\n\r\n  /* WHEN*/\r\n\r\n  onBtnNew(){\r\n    this._doOpenModalPost();\r\n  }\r\n\r\n\r\n  componentWillUnmount() {\r\n    //this.unsubscribe();\r\n    //this.state.isIniData = false ;\r\n  }\r\n\r\n  componentWillReceiveProps(newProps){\r\n\r\n    if(!this.state.isIniData){\r\n      this._doInitData();\r\n    }\r\n\r\n    this.data[MODE] = newProps[MODE]['list'] || [] ;\r\n    // UPDATE STATE FORM DATA\r\n    Object.assign(this.state,newProps[MODE]['state']) ;\r\n    this.resetGrid();\r\n\r\n\r\n\r\n  }\r\n\r\n  /* WHERE*/\r\n  _whereStateChange(newState){\r\n    this.setState(Object.assign(this.state,newState));\r\n  }\r\n\r\n\r\n  _onComplete = (isFinish) =>{\r\n    if(isFinish){\r\n      this._doInitData();\r\n\r\n    }\r\n  }\r\n  render(){\r\n\r\n\r\n    return(\r\n      <div hidden={  this.props.onTab === this.state.tab ? false : true } style={{padding:10}} >\r\n\r\n          <MyForm\r\n            width='60%'\r\n            name={ MODE_NAME }\r\n            \r\n            modal={this.modal}\r\n            status={this.state.status}\r\n            \r\n          />\r\n          <BenGrid\r\n\r\n             height='78vh'\r\n             gridID='id'\r\n             rowSelection='single'\r\n\r\n             formStatus={ this.state.status }\r\n\r\n             onBtnEdit={ this._doOpenModalUpdate }\r\n             onBtnAdd={this.onBtnNew}\r\n\r\n             isRightTool={ true }\r\n\r\n             nextColums={ this.grid.colums }\r\n             rowData={this.grid.rowData}\r\n             model={ this.model }\r\n\r\n             customButton={\r\n                <ButtonGroup>\r\n\r\n                    <ButtonExportXLSTemp\r\n                      strModel={MODE}\r\n                      columns={['code','name','tax_no','address','subregion_code','region_code','address_2','phone']}\r\n                    />\r\n                    \r\n                    <ButtonImportXLS \r\n                        title=\"Upload file\"\r\n                        strModel={MODE}\r\n                        columns={ ['code','name','tax_no','address','subregion_code','region_code','address_2','phone'] }\r\n                        onComplete={ this._onComplete }\r\n                    />\r\n\r\n                    <ButtonExportXLS  \r\n                      style={{\r\n                        borderRadius:0,\r\n                        borderRight:0\r\n                      }}\r\n                      title=\"Download file\"\r\n                      strModel={MODE}\r\n                      columns={ ['code','name','tax_no','address','subregion_code','region_code','address_2','phone'] }\r\n                    />\r\n                </ButtonGroup>\r\n             }\r\n\r\n          />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return {\r\n     [MODE]:state[MODE]\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SupplierPage);\r\n"]},"metadata":{},"sourceType":"module"}