{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\actions\\\\st_frontend\\\\src\\\\pages\\\\Employee\\\\Role\\\\FormGroupUser.js\";\n// HOOKS \nimport doLoadAll from '../../../hook/ultil/doLoadAll';\nimport detechForm from '../../../hook/before/detectform';\nimport React, { Component } from 'react';\nimport ViewModal from '../../../components/ViewModal';\nimport { FormGroup, Input, Col } from 'reactstrap';\nimport Select from 'react-select';\nimport BenConfirm from '../../../components/BenConfirm';\n\nvar FormGroupUser =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FormGroupUser, _Component);\n\n  function FormGroupUser() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FormGroupUser);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FormGroupUser)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {};\n    _this._users = [];\n\n    _this._onSubmit = function () {\n      //this.props.onSubmit\n      //alert(JSON.stringify(this.state.selectedUsers));\n      var fields = ['groupName'];\n\n      if (detechForm(fields, _this.state) === '') {\n        if (_this.state.selectedUsers.length > 0) {\n          _this.props.onSubmit(_this.state);\n        } else {\n          var el = document.querySelector(\"#form-err\");\n          el.innerHTML = 'Vui lòng gán nhân viên';\n        }\n      }\n    };\n\n    _this._removeGroup =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return BenConfirm({\n                title: 'Cảnh báo',\n                message: \"Bạn có chắc là muốn xoá nhóm này ?\"\n              });\n\n            case 2:\n              result = _context.sent;\n\n              if (result) {\n                _this.props.onDeleteGroup(_this.state.id);\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _this;\n  }\n\n  _createClass(FormGroupUser, [{\n    key: \"_resetForm\",\n    value: function _resetForm() {\n      return {\n        groupName: '',\n        selectedUsers: [],\n        users: []\n      };\n    }\n  }, {\n    key: \"_loadUser\",\n    value: function () {\n      var _loadUser2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var res, users;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return doLoadAll('users');\n\n              case 2:\n                res = _context2.sent;\n\n                if (res.name === 'success') {\n                  users = [];\n                  res.rows.map(function (item) {\n                    users.push({\n                      value: item.email,\n                      label: item.name\n                    });\n                  });\n                  this.users = users;\n                }\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function _loadUser() {\n        return _loadUser2.apply(this, arguments);\n      }\n\n      return _loadUser;\n    }()\n  }, {\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this._loadUser();\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      if (newProps.typeAction === 'post') {\n        this.setState(this._resetForm);\n      } else {\n        // UPDATE MEMBERS \n        if (JSON.stringify(newProps.curGroupInfo) !== '{}') {\n          var info = newProps.curGroupInfo;\n          this.setState({\n            id: info.id,\n            groupName: info.group_name,\n            selectedUsers: JSON.parse(info.staff_on)\n          });\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var title = this.props.typeAction === 'post' ? 'Tạo nhóm mới' : 'Chỉnh sửa nhóm';\n      return React.createElement(ViewModal, Object.assign({\n        isFooter: true,\n        name: title\n      }, this.props, {\n        onSubmit: this._onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"view-modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \" Nh\\xF3m \"), React.createElement(Input, {\n        id: \"groupName\",\n        defaultValue: this.state.groupName,\n        onChange: function onChange(e) {\n          _this2.setState({\n            groupName: e.target.value\n          });\n        },\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \" G\\xE1n nh\\xE2n vi\\xEAn \"), React.createElement(Select, {\n        placeholder: \"Th\\xEAm ng\\u01B0\\u1EDDi nh\\u1EADn\",\n        isSearchable: true,\n        isMulti: true,\n        value: this.state.selectedUsers,\n        onChange: function onChange(option) {\n          _this2.setState({\n            selectedUsers: option\n          });\n        },\n        options: this.users,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }))), this.props.typeAction === 'put' ? React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: this._removeGroup,\n        className: \"text-red\",\n        style: {\n          cursor: 'pointer',\n          fontSize: 12\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \" Xo\\xE1 nh\\xF3m ph\\u1EA7n quy\\u1EC1n n\\xE0y \"))) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return FormGroupUser;\n}(Component);\n\nFormGroupUser.defaultProps = {\n  typeAction: 'post',\n  onSubmit: function onSubmit() {},\n  onDeleteGroup: function onDeleteGroup() {}\n};\nexport default FormGroupUser;","map":{"version":3,"sources":["D:/actions/st_frontend/src/pages/Employee/Role/FormGroupUser.js"],"names":["doLoadAll","detechForm","React","Component","ViewModal","FormGroup","Input","Col","Select","BenConfirm","FormGroupUser","state","_users","_onSubmit","fields","selectedUsers","length","props","onSubmit","el","document","querySelector","innerHTML","_removeGroup","title","message","result","onDeleteGroup","id","groupName","users","res","name","rows","map","item","push","value","email","label","_loadUser","newProps","typeAction","setState","_resetForm","JSON","stringify","curGroupInfo","info","group_name","parse","staff_on","e","target","option","cursor","fontSize","defaultProps"],"mappings":";;;;;;;;AACA;AACA,OAAOA,SAAP,MAAsB,+BAAtB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AAEA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AAEA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,GAA3B,QAAsC,YAAtC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAGA,OAAOC,UAAP,MAAuB,gCAAvB;;IAKMC,a;;;;;;;;;;;;;;;;;UAGFC,K,GAAM,E;UACNC,M,GAAO,E;;UA2BPC,S,GAAY,YAAI;AACZ;AACA;AAEA,UAAMC,MAAM,GAAG,CAAC,WAAD,CAAf;;AACA,UAAGb,UAAU,CAACa,MAAD,EAAQ,MAAKH,KAAb,CAAV,KAAiC,EAApC,EAAuC;AAEnC,YAAG,MAAKA,KAAL,CAAWI,aAAX,CAAyBC,MAAzB,GAAkC,CAArC,EAAuC;AAEnC,gBAAKC,KAAL,CAAWC,QAAX,CAAoB,MAAKP,KAAzB;AAEH,SAJD,MAIK;AACD,cAAIQ,EAAE,GAAGC,QAAQ,CAACC,aAAT,CAAuB,WAAvB,CAAT;AACAF,UAAAA,EAAE,CAACG,SAAH,GAAe,wBAAf;AAEH;AAEJ;AAGJ,K;;UAyBDC,Y;;;;6BAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACQd,UAAU,CAAC;AAC1Be,gBAAAA,KAAK,EAAE,UADmB;AAE1BC,gBAAAA,OAAO,EAAE;AAFiB,eAAD,CADlB;;AAAA;AACPC,cAAAA,MADO;;AAMX,kBAAGA,MAAH,EAAU;AACN,sBAAKT,KAAL,CAAWU,aAAX,CAAyB,MAAKhB,KAAL,CAAWiB,EAApC;AACH;;AARU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;iCAtEH;AACR,aAAO;AACHC,QAAAA,SAAS,EAAC,EADP;AAEHd,QAAAA,aAAa,EAAC,EAFX;AAGHe,QAAAA,KAAK,EAAC;AAHH,OAAP;AAKH;;;;;;;;;;;;;uBAEqB9B,SAAS,CAAC,OAAD,C;;;AAArB+B,gBAAAA,G;;AAEN,oBAAGA,GAAG,CAACC,IAAJ,KAAW,SAAd,EAAwB;AAEhBF,kBAAAA,KAFgB,GAER,EAFQ;AAGpBC,kBAAAA,GAAG,CAACE,IAAJ,CAASC,GAAT,CAAa,UAACC,IAAD,EAAQ;AACjBL,oBAAAA,KAAK,CAACM,IAAN,CAAW;AACPC,sBAAAA,KAAK,EAACF,IAAI,CAACG,KADJ;AAEPC,sBAAAA,KAAK,EAACJ,IAAI,CAACH;AAFJ,qBAAX;AAKH,mBAND;AAOA,uBAAKF,KAAL,GAAaA,KAAb;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;uBAyBK,KAAKU,SAAL,E;;;;;;;;;;;;;;;;;;8CAGgBC,Q,EAAS;AAC/B,UAAGA,QAAQ,CAACC,UAAT,KAAsB,MAAzB,EAAgC;AAC5B,aAAKC,QAAL,CAAc,KAAKC,UAAnB;AAEH,OAHD,MAGK;AACD;AACA,YAAGC,IAAI,CAACC,SAAL,CAAeL,QAAQ,CAACM,YAAxB,MAAwC,IAA3C,EAAgD;AAE5C,cAAMC,IAAI,GAAGP,QAAQ,CAACM,YAAtB;AAEA,eAAKJ,QAAL,CAAc;AACVf,YAAAA,EAAE,EAACoB,IAAI,CAACpB,EADE;AAEVC,YAAAA,SAAS,EAACmB,IAAI,CAACC,UAFL;AAGVlC,YAAAA,aAAa,EAAC8B,IAAI,CAACK,KAAL,CAAWF,IAAI,CAACG,QAAhB;AAHJ,WAAd;AAMH;AACJ;AACJ;;;6BAYQ;AAAA;;AACL,UAAM3B,KAAK,GAAG,KAAKP,KAAL,CAAWyB,UAAX,KAA0B,MAA1B,GAAmC,cAAnC,GAAoD,gBAAlE;AACA,aACI,oBAAC,SAAD;AAAW,QAAA,QAAQ,EAAE,IAArB;AAA2B,QAAA,IAAI,EAAElB;AAAjC,SAA4C,KAAKP,KAAjD;AAAwD,QAAA,QAAQ,EAAG,KAAKJ,SAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAW,QAAA,GAAG,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,EAAE,EAAC,WAAV;AAAsB,QAAA,YAAY,EAAE,KAAKF,KAAL,CAAWkB,SAA/C;AAA0D,QAAA,QAAQ,EAAE,kBAACuB,CAAD,EAAK;AAAG,UAAA,MAAI,CAACT,QAAL,CAAc;AAACd,YAAAA,SAAS,EAACuB,CAAC,CAACC,MAAF,CAAShB;AAApB,WAAd;AAA4C,SAAxH;AAA0H,QAAA,IAAI,EAAC,MAA/H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,CADJ,EAOI,oBAAC,SAAD;AAAW,QAAA,GAAG,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADJ,EAEI,oBAAC,MAAD;AAEI,QAAA,WAAW,EAAC,mCAFhB;AAGI,QAAA,YAAY,EAAG,IAHnB;AAII,QAAA,OAAO,EAAG,IAJd;AAKI,QAAA,KAAK,EAAE,KAAK1B,KAAL,CAAWI,aALtB;AAMI,QAAA,QAAQ,EAAE,kBAACuC,MAAD,EAAU;AAAE,UAAA,MAAI,CAACX,QAAL,CAAc;AAAE5B,YAAAA,aAAa,EAACuC;AAAhB,WAAd;AAAyC,SANnE;AAOI,QAAA,OAAO,EAAE,KAAKxB,KAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,CAPJ,EAsBQ,KAAKb,KAAL,CAAWyB,UAAX,KAA0B,KAA1B,GACA,oBAAC,SAAD;AAAW,QAAA,GAAG,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,OAAO,EAAE,KAAKnB,YAAjB;AAA+B,QAAA,SAAS,EAAC,UAAzC;AAAoD,QAAA,KAAK,EAAE;AACvDgC,UAAAA,MAAM,EAAC,SADgD;AAEvDC,UAAAA,QAAQ,EAAC;AAF8C,SAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDADJ,CADJ,CADA,GASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA/BR,CADJ,CADJ;AAyCH;;;;EAjIuBrD,S;;AAoI5BO,aAAa,CAAC+C,YAAd,GAA4B;AACxBf,EAAAA,UAAU,EAAC,MADa;AAExBxB,EAAAA,QAAQ,EAAC,oBAAI,CAAE,CAFS;AAGxBS,EAAAA,aAAa,EAAC,yBAAI,CAAE;AAHI,CAA5B;AAMA,eAAejB,aAAf","sourcesContent":["\r\n// HOOKS \r\nimport doLoadAll from '../../../hook/ultil/doLoadAll';\r\nimport detechForm from '../../../hook/before/detectform';\r\n\r\nimport React, { Component } from 'react';\r\nimport ViewModal from '../../../components/ViewModal';\r\n \r\nimport { FormGroup, Input, Col } from 'reactstrap';\r\nimport Select from 'react-select';\r\n\r\n\r\nimport BenConfirm from '../../../components/BenConfirm';\r\n\r\n\r\n\r\n\r\nclass FormGroupUser extends Component {\r\n\r\n    \r\n    state={}\r\n    _users=[];\r\n\r\n    _resetForm(){\r\n        return {\r\n            groupName:'',\r\n            selectedUsers:[],\r\n            users:[]\r\n        }\r\n    }\r\n    async _loadUser(){\r\n        const res = await doLoadAll('users');\r\n        \r\n        if(res.name==='success'){\r\n\r\n            let users = [];\r\n            res.rows.map((item)=>{\r\n                users.push({\r\n                    value:item.email,\r\n                    label:item.name\r\n                });\r\n\r\n            });\r\n            this.users = users;\r\n            \r\n        }\r\n    }\r\n\r\n    _onSubmit = ()=>{\r\n        //this.props.onSubmit\r\n        //alert(JSON.stringify(this.state.selectedUsers));\r\n\r\n        const fields = ['groupName'] ; \r\n        if(detechForm(fields,this.state) ===''){\r\n            \r\n            if(this.state.selectedUsers.length > 0){\r\n\r\n                this.props.onSubmit(this.state);\r\n\r\n            }else{  \r\n                let el = document.querySelector(\"#form-err\");\r\n                el.innerHTML = 'Vui lòng gán nhân viên';\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n    async componentDidMount(){\r\n        await this._loadUser();\r\n    }\r\n\r\n    componentWillReceiveProps(newProps){\r\n        if(newProps.typeAction==='post'){\r\n            this.setState(this._resetForm);\r\n            \r\n        }else{\r\n            // UPDATE MEMBERS \r\n            if(JSON.stringify(newProps.curGroupInfo)!=='{}'){\r\n\r\n                const info = newProps.curGroupInfo;\r\n                \r\n                this.setState({\r\n                    id:info.id,\r\n                    groupName:info.group_name,\r\n                    selectedUsers:JSON.parse(info.staff_on)\r\n                });\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    _removeGroup = async ()=>{\r\n        let result = await BenConfirm({\r\n            title: 'Cảnh báo',\r\n            message: \"Bạn có chắc là muốn xoá nhóm này ?\"\r\n        });\r\n\r\n        if(result){\r\n            this.props.onDeleteGroup(this.state.id);\r\n        }\r\n    }\r\n    render() {\r\n        const title = this.props.typeAction === 'post' ? 'Tạo nhóm mới' : 'Chỉnh sửa nhóm' \r\n        return (\r\n            <ViewModal isFooter={true} name={title} {...this.props} onSubmit={ this._onSubmit } >\r\n                <div className=\"view-modal-body\"> \r\n                    <FormGroup row>\r\n                        <Col>\r\n                            <label> Nhóm </label>\r\n                            <Input id=\"groupName\" defaultValue={this.state.groupName} onChange={(e)=>{  this.setState({groupName:e.target.value})  }} type=\"text\" />\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <Col> \r\n                            <label> Gán nhân viên </label>\r\n                            <Select\r\n                                \r\n                                placeholder=\"Thêm người nhận\"\r\n                                isSearchable ={true}\r\n                                isMulti ={true}\r\n                                value={this.state.selectedUsers}\r\n                                onChange={(option)=>{ this.setState({ selectedUsers:option }) }} \r\n                                options={this.users}\r\n                             />\r\n                        </Col>\r\n                    </FormGroup>\r\n                    {\r\n                        this.props.typeAction === 'put' ? \r\n                        <FormGroup row>\r\n                            <Col>\r\n                                <a onClick={this._removeGroup} className=\"text-red\" style={{\r\n                                    cursor:'pointer',\r\n                                    fontSize:12\r\n                                }}> Xoá nhóm phần quyền này </a>\r\n                            </Col>\r\n                        </FormGroup> :\r\n                        <div></div>\r\n                    }\r\n                    \r\n\r\n\r\n                </div>\r\n            </ViewModal>\r\n        );\r\n    }\r\n}\r\n\r\nFormGroupUser.defaultProps= {\r\n    typeAction:'post',\r\n    onSubmit:()=>{},\r\n    onDeleteGroup:()=>{}\r\n}\r\n\r\nexport default FormGroupUser;"]},"metadata":{},"sourceType":"module"}