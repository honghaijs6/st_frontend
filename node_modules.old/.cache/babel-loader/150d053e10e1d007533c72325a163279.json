{"ast":null,"code":"import _defineProperty from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\actions\\\\st_frontend\\\\src\\\\pages\\\\Inventory\\\\Productnew\\\\index.js\";\n// DATA \nimport Model from '../../../model/model';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { ButtonGroup, Button } from 'reactstrap';\nimport { BenGrid } from '../../../components/BenGrid2';\nimport BenMessage from '../../../components/BenMessage';\nimport ButtonExportXLS from '../../../components/ButtonExportXLS';\nimport HistoryForm from './HistoryForm';\nimport SerialForm from './SerialForm';\nvar MODE = 'products';\n\nvar ProductNew =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProductNew, _Component);\n\n  function ProductNew(props) {\n    var _this;\n\n    _classCallCheck(this, ProductNew);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProductNew).call(this, props));\n\n    _this._openForm = function (json) {\n      if (JSON.stringify(_this.state.selectedData) !== '{}') {\n        _this.setState(_objectSpread({}, json));\n      } else {\n        BenMessage({\n          message: 'Vui lòng chọn dữ liệu để xem'\n        });\n      }\n    };\n\n    _this.state = {\n      selectedData: {},\n      isOpen: false,\n      isOpenSerialForm: false\n    };\n    _this.grid = {\n      colums: [{\n        headerName: \"Mã\",\n        field: \"code\",\n        width: 180\n      }, {\n        headerName: \"Sản phẩm\",\n        field: \"name\",\n        width: 600\n      }, {\n        headerName: \"ĐVT\",\n        field: \"unit_name\",\n        width: 140\n      }, {\n        headerName: \"Serial/Emei\",\n        field: \"SERIAL_NUM\",\n        width: 140\n      }, {\n        headerName: \"Tổng nhập\",\n        field: \"NHAP\",\n        width: 180\n      }, {\n        headerName: \"Tổng xuất\",\n        field: \"XUAT\",\n        width: 180\n      }, {\n        headerName: \"Tồn kho\",\n        field: \"total_available\",\n        width: 180\n      }],\n      rowData: []\n    };\n\n    _this._setup();\n\n    return _this;\n  }\n\n  _createClass(ProductNew, [{\n    key: \"_setup\",\n    value: function _setup() {\n      this.model = new Model(MODE, this.props.dispatch);\n      this.model.set('method', {\n        name: 'listAll',\n        params: 'inventory'\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.model.initData();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      this.grid.rowData = newProps[MODE]['list'] || [];\n      this.setState(Object.assign(this.state, newProps[MODE]['state']));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"blank-app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(SerialForm, {\n        isOpen: this.state.isOpenSerialForm,\n        onToggle: function onToggle(isOpen) {\n          _this2.setState({\n            isOpenSerialForm: isOpen\n          });\n        },\n        data: this.state.selectedData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(HistoryForm, {\n        isOpen: this.state.isOpen,\n        onToggle: function onToggle(isOpen) {\n          _this2.setState({\n            isOpen: isOpen\n          });\n        },\n        data: this.state.selectedData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(BenGrid, {\n        gridID: \"id\",\n        rowSelection: \"single\",\n        isRightTool: true,\n        height: \"77.5vh\",\n        nextColums: this.grid.colums,\n        rowData: this.grid.rowData,\n        model: this.model,\n        onCellSelected: function onCellSelected(json) {\n          _this2.setState({\n            selectedData: json\n          });\n        },\n        displayBtn: [],\n        customButton: React.createElement(ButtonGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, React.createElement(Button, {\n          onClick: function onClick() {\n            _this2._openForm({\n              isOpen: true\n            });\n          },\n          className: \"btn btn-normal\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fa fa-history mr-5\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }), \" Xem lich s\\u1EED\"), React.createElement(Button, {\n          onClick: function onClick() {\n            _this2._openForm({\n              isOpenSerialForm: true\n            });\n          },\n          className: \"btn btn-normal\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fa fa-ticket mr-5\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }), \" Xem Serial/Emei\"), React.createElement(ButtonExportXLS, {\n          style: {\n            borderTopRightRadius: 0,\n            borderBottomRightRadius: 0,\n            borderRight: 0\n          },\n          title: \"Export File Excel\",\n          strModel: MODE,\n          columns: ['code', 'name', 'type', 'supplier_codes', 'price_1', 'price_2', 'price_3', 'price_4', 'is_serial'],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ProductNew;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return _defineProperty({}, MODE, state[MODE]);\n};\n\nexport default connect(mapStateToProps)(ProductNew);","map":{"version":3,"sources":["D:/actions/st_frontend/src/pages/Inventory/Productnew/index.js"],"names":["Model","React","Component","connect","ButtonGroup","Button","BenGrid","BenMessage","ButtonExportXLS","HistoryForm","SerialForm","MODE","ProductNew","props","_openForm","json","JSON","stringify","state","selectedData","setState","message","isOpen","isOpenSerialForm","grid","colums","headerName","field","width","rowData","_setup","model","dispatch","set","name","params","initData","newProps","Object","assign","borderTopRightRadius","borderBottomRightRadius","borderRight","mapStateToProps"],"mappings":"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","sourcesContent":["// DATA \r\nimport Model from '../../../model/model';\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { ButtonGroup, Button } from 'reactstrap';\r\n\r\nimport { BenGrid } from '../../../components/BenGrid2'; \r\nimport BenMessage from '../../../components/BenMessage';\r\n\r\nimport ButtonExportXLS from '../../../components/ButtonExportXLS'; \r\nimport HistoryForm from './HistoryForm';\r\nimport SerialForm from './SerialForm'; \r\n\r\n\r\nconst MODE = 'products';\r\n\r\n\r\n\r\nclass ProductNew extends Component {\r\n\r\n    \r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      selectedData:{},\r\n\r\n      isOpen:false,\r\n      isOpenSerialForm:false\r\n    }\r\n\r\n    this.grid = {\r\n      colums:[\r\n        { headerName: \"Mã\", field: \"code\", width:180} ,\r\n        { headerName: \"Sản phẩm\", field: \"name\", width:600 },\r\n        { headerName: \"ĐVT\", field:\"unit_name\",width:140 },\r\n        { headerName: \"Serial/Emei\", field:\"SERIAL_NUM\", width:140},\r\n        { headerName: \"Tổng nhập\", field: \"NHAP\", width:180 },\r\n        { headerName: \"Tổng xuất\", field: \"XUAT\", width:180 },\r\n        { headerName: \"Tồn kho\", field: \"total_available\", width:180 },\r\n        \r\n        \r\n      ],\r\n      \r\n      rowData:[]\r\n    }\r\n\r\n    this._setup();\r\n  }\r\n  \r\n  _setup(){\r\n    this.model = new Model(MODE,this.props.dispatch);\r\n\r\n    this.model.set('method',{\r\n      name:'listAll',\r\n      params:'inventory'\r\n    });\r\n    \r\n  }\r\n\r\n  componentDidMount(){\r\n\r\n\r\n    this.model.initData();\r\n  }\r\n\r\n  componentWillReceiveProps(newProps){\r\n    this.grid.rowData = newProps[MODE]['list'] || [];\r\n    this.setState(Object.assign(this.state,newProps[MODE]['state']));\r\n\r\n  }\r\n\r\n  _openForm = (json)=>{\r\n\r\n    if(JSON.stringify(this.state.selectedData)!=='{}'){\r\n      \r\n      this.setState({\r\n       ...json\r\n      });\r\n\r\n    }else{\r\n      BenMessage({\r\n        message:'Vui lòng chọn dữ liệu để xem'\r\n      });\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <div className=\"blank-app\">\r\n          \r\n                <SerialForm\r\n                  \r\n                  isOpen={this.state.isOpenSerialForm}\r\n                  onToggle={(isOpen)=>{ this.setState({isOpenSerialForm:isOpen}) }}\r\n                  data={this.state.selectedData}\r\n\r\n                />\r\n                <HistoryForm\r\n        \r\n                  isOpen={this.state.isOpen}\r\n                  onToggle={(isOpen)=>{ this.setState({isOpen:isOpen}) }}\r\n                  data={this.state.selectedData}\r\n\r\n\r\n                />\r\n                <BenGrid\r\n\r\n                  \r\n                  gridID='id'\r\n                  rowSelection='single'\r\n\r\n                  isRightTool={ true }\r\n                  height=\"77.5vh\"\r\n\r\n                  nextColums={ this.grid.colums }\r\n                  rowData={this.grid.rowData}\r\n                  model={ this.model }\r\n                  \r\n                  onCellSelected={(json)=>{  this.setState({selectedData:json})  }}\r\n\r\n\r\n                  displayBtn = {[]}\r\n\r\n                  customButton={\r\n                        <ButtonGroup> \r\n      \r\n                            <Button onClick={ ()=>{ this._openForm({isOpen:true}) } } className=\"btn btn-normal\">\r\n                              <i className=\"fa fa-history mr-5\"></i> Xem lich sử\r\n                            </Button>\r\n\r\n                            <Button onClick={ ()=>{ this._openForm({isOpenSerialForm:true}) } } className=\"btn btn-normal\" >\r\n                              <i className=\"fa fa-ticket mr-5\"></i> Xem Serial/Emei\r\n                            </Button>\r\n                            \r\n                            <ButtonExportXLS  \r\n                              style={{\r\n                                borderTopRightRadius:0,\r\n                                borderBottomRightRadius: 0,\r\n                                borderRight:0\r\n                              }}\r\n                              \r\n                              title=\"Export File Excel\"\r\n                              strModel={MODE}\r\n                              columns={ ['code','name','type','supplier_codes','price_1','price_2','price_3','price_4','is_serial'] }\r\n                            />\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                  }\r\n\r\n                  \r\n              />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    [MODE]: state[MODE]\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProductNew);\r\n"]},"metadata":{},"sourceType":"module"}