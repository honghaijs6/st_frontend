{"ast":null,"code":"import _classCallCheck from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport axios from 'axios';\nimport server from '../config/server';\nimport { reject } from 'q';\n\nvar zkpush =\n/*#__PURE__*/\nfunction () {\n  function zkpush() {\n    _classCallCheck(this, zkpush);\n\n    this.base = server.base() + '/pushapi/createCmd?cmdType=userDefined';\n  }\n\n  _createClass(zkpush, [{\n    key: \"createCmd\",\n    value: function createCmd() {\n      var cmd = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var sn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n      return new Promise(function (resolve, reject) {\n        var url = server.base() + '/pushapi/createCmd?cmdType=userDefined&sn=' + sn.trim();\n        axios.post(url, {\n          \"originalCmd\": cmd\n        }).then(function (responese) {\n          var res = responese.data;\n          resolve(res);\n        });\n      });\n    }\n  }], [{\n    key: \"loadDevice\",\n    value: function loadDevice() {\n      return new Promise(function (resolve, reject) {\n        var url = server.base() + '/pushapi/deviceServlet?type=1';\n        axios.post(url).then(function (responese) {\n          var res = responese.data;\n\n          if (res.desc === 'ok') {\n            resolve(res.data); //this.grid.rowData = res.data ;\n          }\n        });\n      });\n    }\n  }]);\n\n  return zkpush;\n}();\n\nexport default zkpush;","map":{"version":3,"sources":["D:/actions/st_frontend/src/model/zkpush.js"],"names":["axios","server","reject","zkpush","base","cmd","sn","Promise","resolve","url","trim","post","then","responese","res","data","desc"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,MAAT,QAAuB,GAAvB;;IAIMC,M;;;AAEJ,oBAAa;AAAA;;AAGX,SAAKC,IAAL,GAAaH,MAAM,CAACG,IAAP,KAAc,wCAA3B;AAGD;;;;gCAyBsB;AAAA,UAAbC,GAAa,uEAAT,EAAS;AAAA,UAANC,EAAM,uEAAH,EAAG;AAGrB,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAASN,MAAT,EAAkB;AAInC,YAAMO,GAAG,GAAGR,MAAM,CAACG,IAAP,KAAc,4CAAd,GAA2DE,EAAE,CAACI,IAAH,EAAvE;AAEEV,QAAAA,KAAK,CAACW,IAAN,CAAWF,GAAX,EAAe;AAEb,yBAAcJ;AAFD,SAAf,EAGGO,IAHH,CAGQ,UAACC,SAAD,EAAa;AACnB,cAAMC,GAAG,GAAGD,SAAS,CAACE,IAAtB;AAEAP,UAAAA,OAAO,CAACM,GAAD,CAAP;AAGD,SATD;AAYH,OAlBM,CAAP;AAsBD;;;iCAhDkB;AAEjB,aAAO,IAAIP,OAAJ,CAAY,UAACC,OAAD,EAAUN,MAAV,EAAmB;AAEpC,YAAMO,GAAG,GAAGR,MAAM,CAACG,IAAP,KAAc,+BAA1B;AACAJ,QAAAA,KAAK,CAACW,IAAN,CAAWF,GAAX,EAAgBG,IAAhB,CAAqB,UAACC,SAAD,EAAa;AAChC,cAAMC,GAAG,GAAGD,SAAS,CAACE,IAAtB;;AACA,cAAGD,GAAG,CAACE,IAAJ,KAAW,IAAd,EAAmB;AAGjBR,YAAAA,OAAO,CAACM,GAAG,CAACC,IAAL,CAAP,CAHiB,CAMjB;AAED;AACF,SAXD;AAaD,OAhBM,CAAP;AAmBD;;;;;;AAmCH,eAAeZ,MAAf","sourcesContent":["\r\nimport axios from 'axios' ;\r\nimport server from '../config/server';\r\nimport { reject } from 'q';\r\n\r\n\r\n\r\nclass zkpush {\r\n\r\n  constructor(){\r\n\r\n\r\n    this.base =  server.base()+'/pushapi/createCmd?cmdType=userDefined'\r\n\r\n\r\n  }\r\n\r\n  static loadDevice(){\r\n\r\n    return new Promise((resolve, reject)=>{\r\n\r\n      const url = server.base()+'/pushapi/deviceServlet?type=1';\r\n      axios.post(url).then((responese)=>{\r\n        const res = responese.data ;\r\n        if(res.desc==='ok'){\r\n\r\n\r\n          resolve(res.data) ;\r\n\r\n\r\n          //this.grid.rowData = res.data ;\r\n\r\n        }\r\n      });\r\n\r\n    })\r\n\r\n\r\n  }\r\n\r\n  createCmd(cmd='',sn=''){\r\n\r\n\r\n    return new Promise((resolve,reject)=>{\r\n\r\n\r\n\r\n      const url = server.base()+'/pushapi/createCmd?cmdType=userDefined&sn='+sn.trim();\r\n\r\n        axios.post(url,{\r\n\r\n          \"originalCmd\":cmd\r\n        }).then((responese)=>{\r\n          const res = responese.data ;\r\n\r\n          resolve(res) ;\r\n\r\n\r\n        });\r\n\r\n\r\n    })\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default zkpush ;\r\n"]},"metadata":{},"sourceType":"module"}