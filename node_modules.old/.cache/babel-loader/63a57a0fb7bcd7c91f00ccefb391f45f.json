{"ast":null,"code":"import _defineProperty from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\actions\\\\st_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\actions\\\\st_frontend\\\\src\\\\pages\\\\pages\\\\DemoTicket\\\\Components\\\\tabs\\\\Tickets.js\";\nimport Model from '../../../../../model/model';\nimport zkpush from '../../../../../model/zkpush';\nimport socket from '../../../../../model/socket';\nimport moment from 'moment';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { ButtonGroup, Button } from 'reactstrap';\nimport { BenGrid } from '../../../../../components/BenGrid2';\nimport BenMessage from '../../../../../components/BenMessage';\nimport MyForm from './FormTicket';\nimport FormPrint from './FormPrintTicket';\nvar MODE = 'coupons';\n\nfunction calculateDay(start, end) {\n  start = moment(start, \"YYYY-MM-DD\");\n  end = moment(end, \"YYYY-MM-DD\");\n  return parseInt(moment.duration(end.diff(start)).asDays());\n}\n\nvar Ticket =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Ticket, _React$Component);\n\n  function Ticket(props) {\n    var _this;\n\n    _classCallCheck(this, Ticket);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Ticket).call(this, props));\n    _this._curInfo = {};\n    _this.indexDevice = 0;\n\n    _this._onCellSelected = function (data) {\n      _this._curInfo = data === undefined ? {} : data;\n    };\n\n    _this._doOpenForm = function (type) {\n      _this.setState({\n        typeAction: type,\n        isOpen: true\n      });\n    };\n\n    _this._doOpenFormPrint = function () {\n      if (JSON.stringify(_this._curInfo) !== '{}') {\n        _this.setState({\n          isOpenFormPrint: true\n        });\n      } else {\n        BenMessage({\n          message: 'You have to select record first '\n        });\n      }\n    };\n\n    _this.state = {\n      typeAction: '',\n      onAction: '',\n      status: '',\n      isOpen: false,\n      isOpenFormPrint: false,\n      devices: [],\n      listSelectedDevice: [],\n      logs: []\n    };\n    _this.grid = {\n      colums: [{\n        headerName: \"Mã\",\n        field: \"code\",\n        width: 180,\n        cellRenderer: function cellRenderer(params) {\n          return \"\\n                        <span class=\\\"badge bg-green font-12\\\"> <i class=\\\"fa fa-tags\\\"></i> \".concat(params.value, \" <span>\\n                    \");\n        }\n      }, {\n        headerName: \"Loại\",\n        field: \"type\",\n        width: 180,\n        cellRenderer: function cellRenderer(params) {\n          var types = {\n            nguoilon: '<span class=\"badge bg-blue\"> Người lớn </span>',\n            treem: '<span class=\"badge bg-red\"> Trẻ em </span>'\n          };\n          return \"\\n                      \".concat(types[params.value], \"\\n                  \");\n        }\n      }, {\n        headerName: \"ST Xu\",\n        field: \"value\",\n        width: 140,\n        cellRenderer: function cellRenderer(params) {\n          return \"\\n                      \".concat(params.value, \"\\n                    \");\n        }\n      }, {\n        headerName: \"Từ ngày\",\n        field: \"date_begin\",\n        width: 140,\n        cellRenderer: function cellRenderer(params) {\n          return moment(params.value).format('YYYY-MM-DD');\n        }\n      }, {\n        headerName: \"Đến ngày\",\n        field: \"date_finish\",\n        width: 140,\n        cellRenderer: function cellRenderer(params) {\n          return moment(params.value).format('YYYY-MM-DD');\n        }\n      }, {\n        headerName: \"Remain\",\n        field: \"remain\",\n        width: 140,\n        cellRenderer: function cellRenderer(params) {\n          return calculateDay(moment(), params.data['date_finish']) + ' days';\n        }\n      }, {\n        headerName: \"Trạng thái\",\n        field: \"status\",\n        width: 140,\n        cellRenderer: function cellRenderer(params) {\n          var num = calculateDay(moment(), params.data['date_finish']);\n          return num >= 0 ? '<span class=\"badge bg-green\">Available</span>' : '<span class=\"badge bg-black\">Expired</span>';\n        }\n      }, {\n        headerName: \"Giới hạn quét\",\n        field: \"number_offer\",\n        width: 140\n      }, {\n        headerName: \"Đã quét\",\n        field: \"used_count\",\n        width: 140\n      }, {\n        headerName: \"Ngày tạo \",\n        field: \"date_created\",\n        width: 180,\n        cellRenderer: function cellRenderer(params) {\n          return moment(params.value).format('YYYY-MM-DD');\n        }\n      }],\n      rowData: []\n    };\n\n    _this._setup();\n\n    return _this;\n  }\n\n  _createClass(Ticket, [{\n    key: \"_setup\",\n    value: function _setup() {\n      this.model = new Model(MODE, this.props.dispatch);\n      this.zkpush = new zkpush();\n    }\n  }, {\n    key: \"_addUserToDevice\",\n    // WILL ADD USER TO ALL DEVICES\n    value: function _addUserToDevice(data) {\n      var _this2 = this;\n\n      if (this.state.devices.length > this.indexDevice) {\n        var curDevice = this.state.devices[this.indexDevice];\n        var sn = curDevice.sn;\n        var cmd = \"DATA UPDATE user cardno=\" + data.code + \"\tpin=\" + data.code + \"\tpassword=\tstarttime=0\tendtime=0\tname=ticket\tsuperauthorize=1\tdisable=0\";\n        this.zkpush.createCmd(cmd, sn).then(function (res) {\n          _this2.indexDevice += 1; // PUSH ACCESS LEVEL\n\n          var cmd2 = \"DATA UPDATE userauthorize pin=\" + data.code + \"\tauthorizetimezoneid=1\tauthorizedoorid=15\";\n\n          _this2.zkpush.createCmd(cmd2, sn).then(function (res2) {\n            _this2._addUserToDevice(data);\n          });\n        });\n      } else {\n        this.indexDevice = 0;\n      }\n    } //WILL REMOVE USER TO ALL DEVICE\n\n  }, {\n    key: \"_deleteUserToDevice\",\n    value: function _deleteUserToDevice(code) {\n      var _this3 = this;\n\n      if (this.state.devices.length > this.indexDevice) {\n        var curDevice = this.state.devices[this.indexDevice];\n        var sn = curDevice.sn;\n        var cmd = \"DATA DELETE user pin=\" + code;\n        this.zkpush.createCmd(cmd, sn).then(function (res) {\n          _this3.indexDevice += 1;\n\n          _this3._deleteUserToDevice(code);\n        });\n      } else {\n        this.indexDevice = 0;\n      }\n    } // EVENT\n\n  }, {\n    key: \"_onSubmit\",\n    value: function _onSubmit(data) {\n      var _this4 = this;\n\n      this.model.axios(this.state.typeAction, data, function (res) {\n        if (res.name === 'success') {\n          _this4._addUserToDevice(res.data);\n\n          _this4.setState({\n            status: res.name,\n            isOpen: false\n          });\n        } else {\n          BenMessage({\n            message: res.message\n          });\n        }\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      this.grid.rowData = newProps[MODE]['list'] || []; // CONNECT REDUX STATE\n\n      this._whereStateChange(newProps[MODE]['state']);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this5 = this;\n\n      this.model.load();\n      zkpush.loadDevice().then(function (list) {\n        _this5.setState({\n          devices: list\n        });\n      }); //this._iniSocket();\n    }\n  }, {\n    key: \"_iniSocket\",\n    value: function _iniSocket() {\n      var _this6 = this;\n\n      socket.client.service('coupons').on('logs', function (res) {\n        //const data = res.data;\n        var data = res.data;\n\n        if (data.length > 0) {\n          _this6.setState(function (prevState) {\n            return {\n              logs: [].concat(_toConsumableArray(prevState), _toConsumableArray(data))\n            };\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_whereStateChange\",\n    value: function _whereStateChange(newState) {\n      this.setState(Object.assign(this.state, newState));\n    }\n  }, {\n    key: \"_onGridDeleted\",\n    value: function _onGridDeleted(list) {\n      var item = list[this.indexDevice];\n\n      this._deleteUserToDevice(item.code);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n\n      return React.createElement(\"div\", {\n        className: \"ubuntu-app\",\n        style: {\n          border: 0,\n          marginLeft: -10,\n          marginTop: -10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, React.createElement(MyForm, {\n        typeAction: this.state.typeAction,\n        isOpen: this.state.isOpen,\n        onToggle: function onToggle(isOpen) {\n          _this7.setState({\n            isOpen: isOpen\n          });\n        },\n        width: \"20%\",\n        data: this._curInfo,\n        onSubmit: function onSubmit(state) {\n          _this7._onSubmit(state);\n        },\n        devices: this.state.devices,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }), React.createElement(FormPrint, {\n        isOpen: this.state.isOpenFormPrint,\n        onToggle: function onToggle(isOpen) {\n          _this7.setState({\n            isOpenFormPrint: isOpen\n          });\n        },\n        data: this._curInfo,\n        name: \"Print QR Code\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }), React.createElement(BenGrid, {\n        gridID: \"id\",\n        rowSelection: \"single\",\n        onBtnAdd: function onBtnAdd() {\n          _this7._doOpenForm('post');\n        },\n        onBtnEdit: function onBtnEdit() {\n          _this7._doOpenForm('put');\n        },\n        onCellSelected: this._onCellSelected,\n        isRightTool: true,\n        isLeftTool: false,\n        formStatus: this.state.status,\n        onDeleted: function onDeleted(list) {\n          _this7._onGridDeleted(list);\n        },\n        customButton: React.createElement(ButtonGroup, {\n          style: {\n            marginRight: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 355\n          },\n          __self: this\n        }, React.createElement(Button, {\n          className: \"btn-normal\",\n          onClick: function onClick() {\n            _this7._doOpenForm('post');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 357\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fa fa-plus mr-5\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 360\n          },\n          __self: this\n        }), \"  T\\u1EA1o v\\xE9\"), React.createElement(Button, {\n          className: \"btn-normal\",\n          onClick: this._doOpenFormPrint,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 362\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fa fa-print mr-5\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 366\n          },\n          __self: this\n        }), \"In QR Code\")),\n        height: \"67vh\",\n        nextColums: this.grid.colums,\n        rowData: this.grid.rowData,\n        model: this.model,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Ticket;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return _defineProperty({}, MODE, state[MODE]);\n};\n\nexport default connect(mapStateToProps)(Ticket);","map":{"version":3,"sources":["D:/actions/st_frontend/src/pages/pages/DemoTicket/Components/tabs/Tickets.js"],"names":["Model","zkpush","socket","moment","React","connect","ButtonGroup","Button","BenGrid","BenMessage","MyForm","FormPrint","MODE","calculateDay","start","end","parseInt","duration","diff","asDays","Ticket","props","_curInfo","indexDevice","_onCellSelected","data","undefined","_doOpenForm","type","setState","typeAction","isOpen","_doOpenFormPrint","JSON","stringify","isOpenFormPrint","message","state","onAction","status","devices","listSelectedDevice","logs","grid","colums","headerName","field","width","cellRenderer","params","value","types","nguoilon","treem","format","num","rowData","_setup","model","dispatch","length","curDevice","sn","cmd","code","createCmd","then","res","cmd2","res2","_addUserToDevice","_deleteUserToDevice","axios","name","newProps","_whereStateChange","load","loadDevice","list","client","service","on","prevState","newState","Object","assign","item","border","marginLeft","marginTop","_onSubmit","_onGridDeleted","marginRight","Component","mapStateToProps"],"mappings":"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","sourcesContent":["\r\n\r\nimport Model from '../../../../../model/model';\r\nimport zkpush from '../../../../../model/zkpush';\r\nimport socket from '../../../../../model/socket';\r\n\r\n\r\nimport moment from 'moment';\r\n\r\n\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { ButtonGroup, Button } from 'reactstrap';\r\n\r\nimport { BenGrid } from '../../../../../components/BenGrid2'\r\nimport BenMessage from '../../../../../components/BenMessage';\r\n\r\n\r\nimport MyForm from './FormTicket';\r\nimport FormPrint from './FormPrintTicket';\r\n\r\n\r\n\r\nconst MODE = 'coupons' ;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction calculateDay(start,end){\r\n\r\n  start = moment(start,\"YYYY-MM-DD\");\r\n  end = moment(end,\"YYYY-MM-DD\");\r\n\r\n  return parseInt(moment.duration(end.diff(start)).asDays());\r\n\r\n}\r\n\r\n\r\n\r\nclass Ticket extends React.Component {\r\n\r\n\r\n  _curInfo = {} ;\r\n\r\n\r\n  constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            typeAction:'',\r\n            onAction:'',\r\n            status:'',\r\n            isOpen:false,\r\n            isOpenFormPrint:false,\r\n\r\n            devices : [],\r\n            listSelectedDevice:[],\r\n\r\n            logs:[]\r\n        }\r\n\r\n        this.grid = {\r\n            colums:[\r\n              {headerName: \"Mã\", field: \"code\",width:180,\r\n                cellRenderer(params){\r\n                    return `\r\n                        <span class=\"badge bg-green font-12\"> <i class=\"fa fa-tags\"></i> ${params.value} <span>\r\n                    `\r\n                }\r\n              },\r\n              {\r\n                headerName:\"Loại\", field:\"type\", width:180,\r\n                cellRenderer(params){\r\n\r\n                  const types = {\r\n                    nguoilon:'<span class=\"badge bg-blue\"> Người lớn </span>',\r\n                    treem:'<span class=\"badge bg-red\"> Trẻ em </span>'\r\n                  } ;\r\n                  return `\r\n                      ${types[params.value]}\r\n                  `\r\n\r\n\r\n                }\r\n              },\r\n              {headerName: \"ST Xu\",field: \"value\",width:140,\r\n                cellRenderer(params){\r\n                    return `\r\n                      ${params.value}\r\n                    `\r\n                }\r\n              },\r\n\r\n              {headerName: \"Từ ngày\",field: \"date_begin\",width:140,\r\n                cellRenderer(params){\r\n                    return moment(params.value).format('YYYY-MM-DD');\r\n                }\r\n              },\r\n              {headerName: \"Đến ngày\",field: \"date_finish\", width:140,\r\n                cellRenderer(params){\r\n                    return moment(params.value).format('YYYY-MM-DD');\r\n                }\r\n              },\r\n              {headerName: \"Remain\",field: \"remain\", width:140,\r\n                cellRenderer(params){\r\n\r\n                    return  calculateDay(moment(),params.data['date_finish'])+' days';\r\n                }\r\n              },\r\n              {headerName: \"Trạng thái\",field: \"status\", width:140,\r\n                cellRenderer(params){\r\n\r\n                    const num = calculateDay(moment(),params.data['date_finish']);\r\n                    return  num >= 0 ? '<span class=\"badge bg-green\">Available</span>' : '<span class=\"badge bg-black\">Expired</span>'\r\n                }\r\n              },\r\n\r\n              {headerName: \"Giới hạn quét\",field: \"number_offer\",width:140},\r\n              {headerName: \"Đã quét\",field: \"used_count\",width:140},\r\n\r\n              {headerName: \"Ngày tạo \", field: \"date_created\", width:180,\r\n                cellRenderer(params){\r\n                  return moment(params.value).format('YYYY-MM-DD')\r\n\r\n                }\r\n              }\r\n            ],\r\n            rowData: []\r\n        }\r\n\r\n          this._setup();\r\n\r\n  }\r\n\r\n  _setup(){\r\n    this.model =  new Model(MODE,this.props.dispatch);\r\n    this.zkpush = new zkpush() ;\r\n\r\n\r\n  }\r\n\r\n\r\n  indexDevice = 0 ;\r\n\r\n  // WILL ADD USER TO ALL DEVICES\r\n  _addUserToDevice(data){\r\n\r\n      if(this.state.devices.length > this.indexDevice ){\r\n\r\n        const curDevice = this.state.devices[this.indexDevice] ;\r\n        const sn = curDevice.sn ;\r\n\r\n        const cmd = \"DATA UPDATE user cardno=\"+data.code+\"\tpin=\"+data.code+\"\tpassword=\tstarttime=0\tendtime=0\tname=ticket\tsuperauthorize=1\tdisable=0\"\r\n\r\n        this.zkpush.createCmd(cmd,sn).then((res)=>{\r\n\r\n          this.indexDevice += 1 ;\r\n\r\n          // PUSH ACCESS LEVEL\r\n          const cmd2 = \"DATA UPDATE userauthorize pin=\"+data.code+\"\tauthorizetimezoneid=1\tauthorizedoorid=15\" ;\r\n          this.zkpush.createCmd(cmd2,sn).then((res2)=>{\r\n\r\n            this._addUserToDevice(data) ;\r\n\r\n          }) ;\r\n\r\n\r\n\r\n\r\n        })\r\n      }else{\r\n        this.indexDevice = 0;\r\n      }\r\n  }\r\n\r\n  //WILL REMOVE USER TO ALL DEVICE\r\n  _deleteUserToDevice(code){\r\n\r\n    if(this.state.devices.length > this.indexDevice ){\r\n\r\n        const curDevice = this.state.devices[this.indexDevice] ;\r\n        const sn = curDevice.sn ;\r\n\r\n        const cmd = \"DATA DELETE user pin=\"+code\r\n\r\n        this.zkpush.createCmd(cmd,sn).then((res)=>{\r\n\r\n          this.indexDevice += 1 ;\r\n          this._deleteUserToDevice(code) ;\r\n\r\n        });\r\n\r\n    }else{ this.indexDevice = 0 }\r\n\r\n  }\r\n\r\n\r\n  // EVENT\r\n  _onSubmit(data){\r\n\r\n    this.model.axios(this.state.typeAction,data,(res)=>{\r\n\r\n\r\n        if(res.name==='success'){\r\n\r\n\r\n            this._addUserToDevice(res.data) ;\r\n\r\n            this.setState({\r\n                status:res.name,\r\n                isOpen:false,\r\n            }) ;\r\n\r\n\r\n        }else{\r\n\r\n            BenMessage({\r\n                message:res.message\r\n            });\r\n\r\n        }\r\n    })\r\n\r\n  }\r\n\r\n  _onCellSelected = (data)=>{\r\n\r\n    this._curInfo = data === undefined ? {} : data ;\r\n\r\n  }\r\n\r\n  _doOpenForm = (type)=>{\r\n\r\n      this.setState({\r\n          typeAction:type,\r\n          isOpen:true\r\n      });\r\n  }\r\n\r\n  _doOpenFormPrint = ()=>{\r\n      if(JSON.stringify(this._curInfo) !=='{}'){\r\n          this.setState({\r\n              isOpenFormPrint:true\r\n          });\r\n      }else{\r\n          BenMessage({\r\n              message:'You have to select record first '\r\n          })\r\n      }\r\n  }\r\n\r\n  componentWillReceiveProps(newProps){\r\n\r\n      this.grid.rowData = newProps[MODE]['list'] || [] ;\r\n      // CONNECT REDUX STATE\r\n      this._whereStateChange(newProps[MODE]['state']);\r\n\r\n\r\n  }\r\n\r\n  componentDidMount(){\r\n\r\n      this.model.load();\r\n\r\n      zkpush.loadDevice().then((list)=>{\r\n\r\n        this.setState({\r\n          devices:list\r\n        })\r\n      });\r\n\r\n      //this._iniSocket();\r\n\r\n\r\n  }\r\n\r\n  _iniSocket(){\r\n\r\n\r\n    socket.client.service('coupons').on('logs',(res)=>{\r\n      //const data = res.data;\r\n      const { data } = res ;\r\n      if(data.length > 0 ){\r\n\r\n\r\n        this.setState((prevState)=>{\r\n\r\n          return {\r\n            logs : [...prevState,...data]\r\n          }\r\n        });\r\n\r\n\r\n      }\r\n\r\n\r\n    });\r\n  }\r\n\r\n  _whereStateChange(newState){\r\n      this.setState(Object.assign(this.state,newState));\r\n  }\r\n\r\n\r\n  _onGridDeleted(list){\r\n    const item = list[this.indexDevice] ;\r\n\r\n    this._deleteUserToDevice(item.code) ;\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"ubuntu-app\" style={{ border:0, marginLeft:-10, marginTop:-10}}>\r\n          <main>\r\n\r\n\r\n              <MyForm\r\n                  typeAction={ this.state.typeAction }\r\n                  isOpen={this.state.isOpen}\r\n                  onToggle={(isOpen)=>{ this.setState({isOpen:isOpen}) }}\r\n                  width=\"20%\"\r\n                  data={this._curInfo}\r\n                  onSubmit={(state)=>{ this._onSubmit(state)  }}\r\n                  devices={ this.state.devices }\r\n              />\r\n              <FormPrint\r\n                  isOpen={ this.state.isOpenFormPrint }\r\n                  onToggle={(isOpen)=>{ this.setState({isOpenFormPrint:isOpen}) }}\r\n                  data={this._curInfo}\r\n                  name=\"Print QR Code\"\r\n\r\n              />\r\n\r\n            <BenGrid\r\n\r\n                gridID=\"id\"\r\n\r\n                rowSelection=\"single\"\r\n\r\n\r\n                onBtnAdd={ ()=>{  this._doOpenForm('post') } }\r\n                onBtnEdit={()=>{ this._doOpenForm('put') }}\r\n                onCellSelected={ this._onCellSelected }\r\n\r\n                isRightTool={ true }\r\n                isLeftTool={ false }\r\n                formStatus={ this.state.status }\r\n\r\n                onDeleted={(list)=>{  this._onGridDeleted(list) }}\r\n\r\n                customButton={\r\n                    <ButtonGroup style={{marginRight:10}}>\r\n\r\n                        <Button\r\n                            className=\"btn-normal\"\r\n                            onClick={ ()=>{ this._doOpenForm('post') } }  >\r\n                            <i className=\"fa fa-plus mr-5\"></i>  Tạo vé\r\n                        </Button>\r\n                        <Button\r\n                            className=\"btn-normal\"\r\n                            onClick={ this._doOpenFormPrint }\r\n                        >\r\n                            <i className=\"fa fa-print mr-5\"></i>\r\n                            In QR Code\r\n                        </Button>\r\n\r\n                    </ButtonGroup>\r\n\r\n                }\r\n\r\n\r\n                height=\"67vh\"\r\n\r\n                nextColums={ this.grid.colums }\r\n                rowData={this.grid.rowData}\r\n                model={ this.model }\r\n\r\n            />\r\n          </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      [MODE]: state[MODE]\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Ticket);\r\n"]},"metadata":{},"sourceType":"module"}